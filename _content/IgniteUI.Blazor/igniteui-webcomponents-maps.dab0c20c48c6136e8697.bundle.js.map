{"version":3,"file":"igniteui-webcomponents-maps.dab0c20c48c6136e8697.bundle.js","mappings":"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","sources":["webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicMapSeriesHost_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicMarkerSeries.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicShapeSeriesBase_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/ImageTilesReadyEventArgs.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/ImagesChangedEventArgs.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/MapBackgroundTilingMode.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/MapResizeBehavior.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/TileSeries_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/SphericalMercatorVerticalScaler.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/SphericalMercatorHorizontalScaler.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/XamGeographicMap_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/BingMapsImageryStyle.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-sub-domains-collection.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/SubDomainsCollection.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/BingMapsMapImageryView_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-bing-maps-map-imagery.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-bing-maps-map-imagery-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-custom-map-imagery.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/CustomMapImagery.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-custom-map-imagery-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicContourLineSeriesView_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-contour-line-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-contour-line-series-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicHighDensityScatterSeriesView_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-high-density-scatter-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-high-density-scatter-series-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/ArcGISOnlineMapImagery.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-arc-gis-online-map-imagery.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-arc-gis-online-map-imagery-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-map-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-map-core-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-images-changed-event-args.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-map-imagery.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-map-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-map-series-host-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-marker-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicPolylineSeriesView_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-polyline-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-polyline-series-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicProportionalSymbolSeriesView_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-proportional-symbol-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-proportional-symbol-series-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-scatter-area-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-scatter-area-series-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-shape-series-base-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicShapeSeriesView_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-shape-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-shape-series-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicSymbolSeriesView_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-symbol-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-symbol-series-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicTileSeries.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-tile-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-tile-series-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-xy-triangulating-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-image-tiles-ready-event-args.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-open-street-map-imagery.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-open-street-map-imagery-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/TileGeneratorMapImagery.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-tile-generator-map-imagery.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-tile-generator-map-imagery-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-tile-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-tile-series-module.ts"],"sourcesContent":["/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { Base, Point, Type, typeCast, Number_$type, runOn, delegateRemove, delegateCombine, markType, TypeRegistrar } from \"igniteui-core/type\";\r\nimport { List$1 } from \"igniteui-core/List$1\";\r\nimport { SeriesPointOfInterest } from \"igniteui-charts/SeriesPointOfInterest\";\r\nimport { Axis } from \"igniteui-charts/Axis\";\r\nimport { HighlightingInfo } from \"igniteui-charts/HighlightingInfo\";\r\nimport { Rect } from \"igniteui-core/Rect\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { SeriesViewer } from \"igniteui-charts/SeriesViewer\";\r\nimport { RectChangedEventArgs } from \"igniteui-core/RectChangedEventArgs\";\r\nimport { FrameworkElement } from \"igniteui-core/FrameworkElement\";\r\nimport { RenderSurface } from \"igniteui-charts/RenderSurface\";\r\nimport { DataContext } from \"igniteui-core/DataContext\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\nimport { Visibility } from \"igniteui-core/Visibility\";\r\nimport { PlatformConstants } from \"igniteui-core/PlatformConstants\";\r\nimport { isNaN_ } from \"igniteui-core/number\";\r\nimport { RenderingContext } from \"igniteui-core/RenderingContext\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport abstract class GeographicMapSeriesHost extends Series {\r\n\tstatic $t: Type = markType(GeographicMapSeriesHost, 'GeographicMapSeriesHost', (<any>Series).$);\r\n\tlp(): void {\r\n\t\tsuper.lp();\r\n\t\tif (this.qe != null) {\r\n\t\t\tthis.qe.lp();\r\n\t\t}\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.qe = this.qd();\r\n\t}\r\n\tprivate qc: Series = null;\r\n\tprotected get_dy(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\th1(a: any, b: string): any {\r\n\t\tlet c = this.jv(b);\r\n\t\tif (c == \"LatitudeMemberPath\") {\r\n\t\t\tc = \"YMemberPath\";\r\n\t\t}\r\n\t\tif (c == \"LongitudeMemberPath\") {\r\n\t\t\tc = \"XMemberPath\";\r\n\t\t}\r\n\t\treturn this.qe.h1(a, b);\r\n\t}\r\n\tc2(a: List$1<SeriesPointOfInterest>, b: boolean, c: boolean, d: number): boolean {\r\n\t\treturn this.qe.c2(a, b, c, d);\r\n\t}\r\n\tag(): Axis[] {\r\n\t\treturn this.qe.ag();\r\n\t}\r\n\tbf(): Series {\r\n\t\treturn this.qe;\r\n\t}\r\n\tget qe(): Series {\r\n\t\treturn this.qc;\r\n\t}\r\n\tset qe(a: Series) {\r\n\t\tlet b: boolean = this.qe != a;\r\n\t\tif (b) {\r\n\t\t\tthis.qc = a;\r\n\t\t\tthis.qj();\r\n\t\t}\r\n\t}\r\n\tprotected get_hasMarkers(): boolean {\r\n\t\treturn this.qe.hasMarkers;\r\n\t}\r\n\tprotected qj(): void {\r\n\t\tif (this.qc != null) {\r\n\t\t\tlet hostedSeries_ = this.qc;\r\n\t\t\t(<any>hostedSeries_).externalObject = TypeRegistrar.createFromInternal(hostedSeries_, PlatformConstants.Prefix, PlatformConstants.Postfix);\r\n\t\t\t(<any>hostedSeries_).externalObject._implementation = hostedSeries_;\r\n\t\t}\r\n\t\tthis.k7(this.qe);\r\n\t\tthis.qf.b2();\r\n\t}\r\n\tax(a: any, b: Point, c: boolean): HighlightingInfo {\r\n\t\treturn this.az(this.qe, a, b, c);\r\n\t}\r\n\tay(a: any, b: Point, c: boolean): HighlightingInfo {\r\n\t\treturn this.a0(this.qe, a, b, c);\r\n\t}\r\n\thy(a: Point): any {\r\n\t\treturn this.h3(this.qe, a);\r\n\t}\r\n\tho(a: Point, b: boolean): number {\r\n\t\treturn this.qe.ho(a, b);\r\n\t}\r\n\thm(a: Point, b: boolean): number {\r\n\t\treturn this.qe.hm(a, b);\r\n\t}\r\n\tgn(a: Point, b: boolean, c: boolean): number {\r\n\t\treturn this.qe.gn(a, b, c);\r\n\t}\r\n\tps(a: Point, b: boolean, c: boolean): Point {\r\n\t\treturn this.qe.ps(a, b, c);\r\n\t}\r\n\tp3(a: Point): Rect {\r\n\t\treturn this.qe.p3(a);\r\n\t}\r\n\tak(a: Point): Rect[] {\r\n\t\treturn this.qe.ak(a);\r\n\t}\r\n\tp4(a: Point): Rect {\r\n\t\treturn this.qe.p4(a);\r\n\t}\r\n\tal(a: Point): Rect[] {\r\n\t\treturn this.qe.al(a);\r\n\t}\r\n\tp5(a: Point): Rect {\r\n\t\treturn this.qe.p5(a);\r\n\t}\r\n\tp6(a: Point): Rect {\r\n\t\treturn this.qe.p6(a);\r\n\t}\r\n\tgj(a: Point, b: boolean, c: boolean): number {\r\n\t\treturn this.qe.gj(a, b, c);\r\n\t}\r\n\tpo(a: Point, b: boolean, c: boolean): Point {\r\n\t\treturn this.qe.po(a, b, c);\r\n\t}\r\n\tgl(a: Point, b: boolean, c: boolean): number {\r\n\t\treturn this.gn(a, b, c);\r\n\t}\r\n\tpq(a: Point, b: boolean, c: boolean): Point {\r\n\t\treturn this.qe.pq(a, b, c);\r\n\t}\r\n\tpt(a: Point, b: boolean, c: boolean): Point {\r\n\t\treturn this.qe.pt(a, b, c);\r\n\t}\r\n\tgo(a: Point, b: boolean, c: boolean): number {\r\n\t\treturn this.qe.go(a, b, c);\r\n\t}\r\n\tpp(a: Point, b: boolean, c: boolean): Point {\r\n\t\treturn this.qe.pp(a, b, c);\r\n\t}\r\n\tgk(a: Point, b: boolean, c: boolean): number {\r\n\t\treturn this.qe.gk(a, b, c);\r\n\t}\r\n\tpr(a: Point, b: boolean, c: boolean): Point {\r\n\t\treturn this.qe.pr(a, b, c);\r\n\t}\r\n\tgm(a: Point, b: boolean, c: boolean): number {\r\n\t\treturn this.qe.gm(a, b, c);\r\n\t}\r\n\thj(a: Point): number {\r\n\t\treturn this.qe.hj(a);\r\n\t}\r\n\tge(): number {\r\n\t\treturn this.qe.ge();\r\n\t}\r\n\tga(a: Point): number {\r\n\t\treturn this.qe.ga(a);\r\n\t}\r\n\thz(a: Point): any {\r\n\t\treturn this.qe.hz(a);\r\n\t}\r\n\tprotected abstract qd(): Series;\r\n\tprotected by(): SeriesView {\r\n\t\treturn new HostSeriesView(this);\r\n\t}\r\n\tl4(a: SeriesView): void {\r\n\t\tsuper.l4(a);\r\n\t\tthis.qf = typeCast<HostSeriesView>((<any>HostSeriesView).$, a);\r\n\t}\r\n\tqf: HostSeriesView;\r\n\tstatic readonly ql: DependencyProperty = DependencyProperty.i(\"VisibleFromScale\", Number_$type, (<any>GeographicMapSeriesHost).$, new PropertyMetadata(2, 1, (a: DependencyObject, b: DependencyPropertyChangedEventArgs) => {\r\n\t\tlet c: GeographicMapSeriesHost = <GeographicMapSeriesHost>a;\r\n\t\tc.raisePropertyChanged(\"VisibleFromScale\", b.oldValue, b.newValue);\r\n\t}));\r\n\tget qg(): number {\r\n\t\treturn <number>this.c(GeographicMapSeriesHost.ql);\r\n\t}\r\n\tset qg(a: number) {\r\n\t\tthis.h(GeographicMapSeriesHost.ql, a);\r\n\t}\r\n\tprotected l9(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.l9(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase \"SeriesViewer\":\r\n\t\t\tthis.qe.ce = this.ce;\r\n\t\t\tif (c != null) {\r\n\t\t\t\t(<SeriesViewer>c).o0(this.qe);\r\n\t\t\t}\r\n\t\t\tif (d != null) {\r\n\t\t\t\tthis.ce.lp(this.qe);\r\n\t\t\t}\r\n\t\t\tthis.qe.mc(this.p7);\r\n\t\t\tthis.qe.index = this.index;\r\n\t\t\tthis.ld(this.qe);\r\n\t\t\tthis.ht = this.qe.ht;\r\n\t\t\tlet e: SeriesViewer = typeCast<SeriesViewer>((<any>SeriesViewer).$, c);\r\n\t\t\tif (e != null) {\r\n\t\t\t\te.actualWindowRectChanged = delegateRemove(e.actualWindowRectChanged, runOn(this, this.qk));\r\n\t\t\t}\r\n\t\t\tif (this.ce != null) {\r\n\t\t\t\tlet f = this.ce;\r\n\t\t\t\tf.actualWindowRectChanged = delegateCombine(f.actualWindowRectChanged, runOn(this, this.qk));\r\n\t\t\t}\r\n\t\t\tthis.qi();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"SyncLink\":\r\n\t\t\tthis.qe.b9 = this.b9;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"VisibleFromScale\":\r\n\t\t\tthis.qi();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"Index\":\r\n\t\t\tthis.qe.index = this.index;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ItemsSource\":\r\n\t\t\tthis.qf.b3();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"Resolution\":\r\n\t\t\tthis.qf.ca();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"TransitionDuration\":\r\n\t\t\tthis.qf.cd();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"Opacity\":\r\n\t\t\tthis.qf.b7();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"Visibility\":\r\n\t\t\tlet hs_ = this.qe;\r\n\t\t\tlet v_ = this._visibility;\r\n\t\t\ths_.visibility = v_;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"MouseOverEnabled\":\r\n\t\t\tthis.qe.eo = this.eo;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ExpectFunctions\":\r\n\t\t\tthis.qe.expectFunctions = this.expectFunctions;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"Thickness\":\r\n\t\t\tthis.qf.cc();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"Brush\":\r\n\t\t\tthis.qf.b1();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"Outline\":\r\n\t\t\tthis.qf.b9();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualBrush\":\r\n\t\t\tthis.qf.by();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualOutline\":\r\n\t\t\tthis.qf.bz();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"MarkerFillOpacity\":\r\n\t\t\tif (!isNaN_(this.gv)) {\r\n\t\t\t\tthis.qf.b6();\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"AreaFillOpacity\":\r\n\t\t\tif (!isNaN_(this.f3)) {\r\n\t\t\t\tthis.qf.b0();\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"OutlineMode\":\r\n\t\t\tthis.qf.b8();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ShowDefaultTooltip\":\r\n\t\t\tthis.qf.cb();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"Title\":\r\n\t\t\tthis.qe.title = this.title;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"LegendItemBadgeMode\":\r\n\t\t\tthis.qf.b4();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"LegendItemBadgeShape\":\r\n\t\t\tthis.qf.b5();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"Legend\":\r\n\t\t\tthis.qe.legend = this.legend;\r\n\t\t\tthis.b1.at();\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprivate qi(): void {\r\n\t\tif (this.ce == null || this.qe == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!isNaN_(this.qg)) {\r\n\t\t\tif (this.ce.tk.width > this.qg) {\r\n\t\t\t\tlet hs_ = this.qe;\r\n\t\t\t\tlet v_ = 1;\r\n\t\t\t\ths_.visibility = v_;\r\n\t\t\t} else {\r\n\t\t\t\tlet hs2_ = this.qe;\r\n\t\t\t\tlet v2_ = 0;\r\n\t\t\t\ths2_.visibility = v2_;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tprivate qk(a: any, b: RectChangedEventArgs): void {\r\n\t\tthis.qi();\r\n\t}\r\n\tmn(a: boolean): void {\r\n\t\tsuper.mn(a);\r\n\t\tif (this.qe != null) {\r\n\t\t\tthis.qe.mn(a);\r\n\t\t}\r\n\t}\r\n\tmm(a: Rect, b: Rect, c: RenderSurface, d: string, e: number): void {\r\n\t\tif (this.qe != null) {\r\n\t\t\tthis.qe.mm(a, b, c, d, e);\r\n\t\t}\r\n\t}\r\n\tau(a: Point, b: boolean): DataContext {\r\n\t\treturn this.qe.au(a, b);\r\n\t}\r\n\tmx(): void {\r\n\t\tsuper.mx();\r\n\t\tthis.qe.mx();\r\n\t}\r\n\tprotected get_coercionMethods(): any {\r\n\t\treturn this._coercionMethods;\r\n\t}\r\n\tprotected set_coercionMethods(a: any): void {\r\n\t\tthis._coercionMethods = a;\r\n\t\tthis.qe.coercionMethods = a;\r\n\t}\r\n\tprotected lc(a: any): void {\r\n\t\tsuper.lc(a);\r\n\t\tif (this.qe != null) {\r\n\t\t\tlet b = this.qe.hx();\r\n\t\t\tthis.k4(a, b);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class HostSeriesView extends SeriesView {\r\n\tstatic $t: Type = markType(HostSeriesView, 'HostSeriesView', (<any>SeriesView).$);\r\n\tconstructor(a: GeographicMapSeriesHost) {\r\n\t\tsuper(a);\r\n\t\tthis.bx = a;\r\n\t}\r\n\tprivate bx: GeographicMapSeriesHost = null;\r\n\tar(a: RenderingContext, b: RenderingContext): void {\r\n\t\tsuper.ar(a, b);\r\n\t}\r\n\tb2(): void {\r\n\t\tthis.bx.qb = 1;\r\n\t\tthis.bx.qe.qb = 0;\r\n\t\tthis.bx.qe.itemsSource = this.bx.itemsSource;\r\n\t\tthis.bx.qe.index = this.bx.index;\r\n\t\tthis.bx.qe.o9 = this.bx.o9;\r\n\t\tthis.bx.qe.pe = this.bx.o9;\r\n\t\tthis.bx.qe.bu = this.bx.bu;\r\n\t\tthis.bx.qe.gy = this.bx.gy;\r\n\t\tthis.bx.qe.hr = this.bx.hr;\r\n\t\tthis.bx.qe._opacity = this.bx._opacity;\r\n\t\tthis.bx.qe.g4 = this.bx.g4;\r\n\t\tthis.bx.qe.f3 = this.bx.f3;\r\n\t\tthis.bx.qe.gv = this.bx.gv;\r\n\t\tthis.bx.qe.ev = this.bx.ev;\r\n\t\tthis.bx.qe.legendItemBadgeShape = this.bx.legendItemBadgeShape;\r\n\t\tthis.bx.qe.ba = this.bx.ba;\r\n\t}\r\n\tb3(): void {\r\n\t\tthis.bx.qe.itemsSource = this.bx.itemsSource;\r\n\t}\r\n\tca(): void {\r\n\t\tthis.bx.qe.gy = this.bx.gy;\r\n\t}\r\n\tcd(): void {\r\n\t\tthis.bx.qe.hr = this.bx.hr;\r\n\t}\r\n\tb7(): void {\r\n\t\tthis.bx.qe._opacity = this.bx._opacity;\r\n\t}\r\n\tcc(): void {\r\n\t\tthis.bx.qe.g4 = this.bx.g4;\r\n\t}\r\n\tb1(): void {\r\n\t\tthis.bx.qe.o9 = this.bx.o9;\r\n\t}\r\n\tb9(): void {\r\n\t\tthis.bx.qe.pe = this.bx.pe;\r\n\t}\r\n\tby(): void {\r\n\t\tthis.bx.qe.o9 = this.bx.o5;\r\n\t}\r\n\tbz(): void {\r\n\t\tthis.bx.qe.pe = this.bx.o8;\r\n\t}\r\n\tb4(): void {\r\n\t\tthis.bx.qe.ba = this.bx.ba;\r\n\t}\r\n\tb5(): void {\r\n\t\tthis.bx.qe.legendItemBadgeShape = this.bx.legendItemBadgeShape;\r\n\t}\r\n\tb0(): void {\r\n\t\tthis.bx.qe.f3 = this.bx.f3;\r\n\t}\r\n\tb6(): void {\r\n\t\tthis.bx.qe.gv = this.bx.gv;\r\n\t}\r\n\tb8(): void {\r\n\t\tthis.bx.qe.bu = this.bx.bu;\r\n\t}\r\n\tcb(): void {\r\n\t\tthis.bx.qe.ev = this.bx.ev;\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { MarkerType, MarkerType_$type } from \"igniteui-charts/MarkerType\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { MarkerOutlineMode, MarkerOutlineMode_$type } from \"igniteui-charts/MarkerOutlineMode\";\r\nimport { MarkerFillMode, MarkerFillMode_$type } from \"igniteui-charts/MarkerFillMode\";\r\nimport { DataTemplate } from \"igniteui-core/DataTemplate\";\r\nimport { Brush } from \"igniteui-core/Brush\";\r\nimport { Base, Type, runOn, delegateCombine, typeCast, enumGetBox, EnumUtil, Number_$type, typeGetValue, markType, markDep, TypeRegistrar } from \"igniteui-core/type\";\r\nimport { PropertyUpdatedEventArgs } from \"igniteui-core/PropertyUpdatedEventArgs\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { MarkerSeries } from \"igniteui-charts/MarkerSeries\";\r\nimport { ScatterBase } from \"igniteui-charts/ScatterBase\";\r\nimport { Defaults } from \"igniteui-charts/Defaults\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\nimport { DeviceUtils } from \"igniteui-core/DeviceUtils\";\r\nimport { PlatformConstants } from \"igniteui-core/PlatformConstants\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport abstract class GeographicMarkerSeries extends GeographicMapSeriesHost {\r\n\tstatic $t: Type = markType(GeographicMarkerSeries, 'GeographicMarkerSeries', (<any>GeographicMapSeriesHost).$);\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tlet a = this.qe;\r\n\t\ta.propertyUpdated = delegateCombine(a.propertyUpdated, runOn(this, this.q2));\r\n\t}\r\n\tnj(): DataTemplate {\r\n\t\treturn this.q3;\r\n\t}\r\n\tpc(): Brush {\r\n\t\treturn this.rg;\r\n\t}\r\n\tpd(): Brush {\r\n\t\treturn this.rh;\r\n\t}\r\n\tf6(): number {\r\n\t\treturn this.qp;\r\n\t}\r\n\ti2(): string {\r\n\t\tlet a = typeCast<MarkerSeries>((<any>MarkerSeries).$, this.qe);\r\n\t\tif (a == null) {\r\n\t\t\treturn \"Unknown\";\r\n\t\t}\r\n\t\treturn a.i2();\r\n\t}\r\n\tprivate q2(a: any, b: PropertyUpdatedEventArgs): void {\r\n\t\tlet c = typeCast<MarkerSeries>((<any>MarkerSeries).$, this.qe);\r\n\t\tif (c == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (b.propertyName == \"ActualMarkerTemplate\") {\r\n\t\t\tthis.q3 = c.q5;\r\n\t\t} else if (b.propertyName == \"ActualMarkerOutline\") {\r\n\t\t\tthis.rh = c.rm;\r\n\t\t} else if (b.propertyName == \"ActualMarkerBrush\") {\r\n\t\t\tthis.rg = c.rl;\r\n\t\t}\r\n\t}\r\n\tqo: MarkerType;\r\n\tqp: number;\r\n\tqn: MarkerOutlineMode;\r\n\tqm: MarkerFillMode;\r\n\tq4: DataTemplate;\r\n\tri: Brush;\r\n\trj: Brush;\r\n\tqq: number;\r\n\tq3: DataTemplate;\r\n\trg: Brush;\r\n\trh: Brush;\r\n\tprotected l9(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.l9(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase GeographicMarkerSeries.$$p[3]:\r\n\t\t\t(<ScatterBase>this.qe).rn = this.ri;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMarkerSeries.$$p[6]:\r\n\t\t\t(<ScatterBase>this.qe).ro = this.rj;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMarkerSeries.$$p[5]:\r\n\t\t\t(<ScatterBase>this.qe).qi = this.qn;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMarkerSeries.$$p[4]:\r\n\t\t\t(<ScatterBase>this.qe).qe = this.qm;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMarkerSeries.$$p[9]:\r\n\t\t\t(<ScatterBase>this.qe).ql = this.qo;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMarkerSeries.$$p[7]:\r\n\t\t\t(<ScatterBase>this.qe).q7 = this.q4;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMarkerSeries.$$p[8]:\r\n\t\t\t(<ScatterBase>this.qe).qq = this.qp;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMarkerSeries.$$p[10]:\r\n\t\t\t(<ScatterBase>this.qe).tb = this.qq;\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicMarkerSeries, 'raisePropertyChanged', [ 'ActualMarkerBrush:rg:q5', [ (<any>Brush).$ ], 'ActualMarkerOutline:rh:q6', [ (<any>Brush).$ ], 'ActualMarkerTemplate:q3:q7', [ (<any>DataTemplate).$, null ], 'MarkerBrush:ri:q8', [ (<any>Brush).$ ], 'MarkerFillMode:qm:q9', [ MarkerFillMode_$type, enumGetBox<MarkerFillMode>(MarkerFillMode_$type, 0) ], 'MarkerOutlineMode:qn:ra', [ MarkerOutlineMode_$type, enumGetBox<MarkerOutlineMode>(MarkerOutlineMode_$type, 0) ], 'MarkerOutline:rj:rb', [ (<any>Brush).$ ], 'MarkerTemplate:q4:rc', [ (<any>DataTemplate).$, null ], 'MarkerThickness:qp:rd', [ 1, DeviceUtils.g(2) ], 'MarkerType:qo:re', [ MarkerType_$type, enumGetBox<MarkerType>(MarkerType_$type, Defaults.e) ], 'MaximumMarkers:qq:rf', [ 1, 400 ] ]);\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { ScatterPolygonSeries } from \"igniteui-charts/ScatterPolygonSeries\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { ShapeItemSearchMode, ShapeItemSearchMode_$type } from \"igniteui-charts/ShapeItemSearchMode\";\r\nimport { ShapefileConverter } from \"igniteui-core/ShapefileConverter\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { Base, IEnumerable, IEnumerable_$type, Type, String_$type, typeCast, Boolean_$type, enumGetBox, EnumUtil, typeGetValue, Number_$type, runOn, delegateCombine, delegateRemove, markType, markDep } from \"igniteui-core/type\";\r\nimport { AssigningShapeStyleEventArgs } from \"igniteui-charts/AssigningShapeStyleEventArgs\";\r\nimport { AssigningShapeMarkerStyleEventArgs } from \"igniteui-charts/AssigningShapeMarkerStyleEventArgs\";\r\nimport { ShapeSeriesBase } from \"igniteui-charts/ShapeSeriesBase\";\r\nimport { AsyncCompletedEventArgs } from \"igniteui-core/AsyncCompletedEventArgs\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\nimport { HostSeriesView } from \"./HostSeriesView\";\r\nimport { XamGeographicMap } from \"./XamGeographicMap\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport abstract class GeographicShapeSeriesBase extends GeographicMapSeriesHost {\r\n\tstatic $t: Type = markType(GeographicShapeSeriesBase, 'GeographicShapeSeriesBase', (<any>GeographicMapSeriesHost).$);\r\n\tprotected by(): SeriesView {\r\n\t\treturn new GeographicShapeSeriesBaseView(this);\r\n\t}\r\n\tqp: GeographicShapeSeriesBaseView;\r\n\tl4(a: SeriesView): void {\r\n\t\tsuper.l4(a);\r\n\t\tthis.qp = <GeographicShapeSeriesBaseView>a;\r\n\t}\r\n\tq7: string;\r\n\tprotected get_d0(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tprotected get_c3(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tqw: boolean;\r\n\tqv: boolean;\r\n\tprotected qu: boolean = false;\r\n\tprotected qt: boolean = false;\r\n\tqo: ShapeItemSearchMode;\r\n\tqz: number;\r\n\tqy: number;\r\n\tassigningShapeStyle: (sender: any, args: AssigningShapeStyleEventArgs) => void = null;\r\n\tassigningShapeMarkerStyle: (sender: any, args: AssigningShapeMarkerStyleEventArgs) => void = null;\r\n\tprotected l9(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.l9(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase \"SeriesViewer\":\r\n\t\t\tthis.qp.cf();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ShapeMemberPath\":\r\n\t\t\tthis.qp.ch();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeriesBase.$$p[5]:\r\n\t\t\tthis.qp.cg();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeriesBase.$$p[1]:\r\n\t\t\t(<ShapeSeriesBase>this.qe).rd = this.qw;\r\n\t\t\tthis.qu = this.qw;\r\n\t\t\tif (this.qw) {\r\n\t\t\t\tlet e = (<ShapeSeriesBase>this.qe);\r\n\t\t\t\te.assigningShapeStyle = delegateCombine(e.assigningShapeStyle, runOn(this, this.ra));\r\n\t\t\t} else {\r\n\t\t\t\tlet f = (<ShapeSeriesBase>this.qe);\r\n\t\t\t\tf.assigningShapeStyle = delegateRemove(f.assigningShapeStyle, runOn(this, this.ra));\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeriesBase.$$p[0]:\r\n\t\t\t(<ShapeSeriesBase>this.qe).rc = this.qv;\r\n\t\t\tthis.qt = this.qv;\r\n\t\t\tif (this.qw) {\r\n\t\t\t\tlet g = (<ShapeSeriesBase>this.qe);\r\n\t\t\t\tg.assigningShapeMarkerStyle = delegateCombine(g.assigningShapeMarkerStyle, runOn(this, this.q9));\r\n\t\t\t} else {\r\n\t\t\t\tlet h = (<ShapeSeriesBase>this.qe);\r\n\t\t\t\th.assigningShapeMarkerStyle = delegateRemove(h.assigningShapeMarkerStyle, runOn(this, this.q9));\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeriesBase.$$p[2]:\r\n\t\t\t(<ShapeSeriesBase>this.qe).qz = this.qo;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeriesBase.$$p[3]:\r\n\t\t\t(<ShapeSeriesBase>this.qe).ru = this.qy;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeriesBase.$$p[4]:\r\n\t\t\t(<ShapeSeriesBase>this.qe).rv = this.qz;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ShapefileDataSource\":\r\n\t\t\tif (c != null) {\r\n\t\t\t\tlet i = <ShapefileConverter>c;\r\n\t\t\t\tif (this.qs) {\r\n\t\t\t\t\ti.importCompleted = delegateRemove(i.importCompleted, runOn(this, this.rb));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (d != null) {\r\n\t\t\t\tlet j = <ShapefileConverter>d;\r\n\t\t\t\tif (j.count > 0) {\r\n\t\t\t\t\tthis.rc();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tthis.qs = true;\r\n\t\t\t\tj.importCompleted = delegateCombine(j.importCompleted, runOn(this, this.rb));\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprivate ra(a: any, b: AssigningShapeStyleEventArgs): void {\r\n\t\tif (this.assigningShapeStyle != null) {\r\n\t\t\tthis.assigningShapeStyle(this, b);\r\n\t\t}\r\n\t}\r\n\tprivate q9(a: any, b: AssigningShapeMarkerStyleEventArgs): void {\r\n\t\tif (this.assigningShapeMarkerStyle != null) {\r\n\t\t\tthis.assigningShapeMarkerStyle(this, b);\r\n\t\t}\r\n\t}\r\n\tprivate rb(a: any, b: AsyncCompletedEventArgs): void {\r\n\t\tthis.rc();\r\n\t}\r\n\tprivate rc(): void {\r\n\t\tlet sds_ = this.qr;\r\n\t\tlet ext_ = (sds_ as any).externalObject;\r\n\t\tthis.itemsSource = <IEnumerable><any><any>(ext_.getPointData());\r\n\t}\r\n\tprivate qq: ShapefileConverter = null;\r\n\tprivate qs: boolean = false;\r\n\tget qr(): ShapefileConverter {\r\n\t\treturn this.qq;\r\n\t}\r\n\tset qr(a: ShapefileConverter) {\r\n\t\tlet b = this.qq;\r\n\t\tthis.qq = a;\r\n\t\tif (b != this.qq) {\r\n\t\t\tthis.raisePropertyChanged(\"ShapefileDataSource\", b, this.qq);\r\n\t\t}\r\n\t}\r\n\tqx: number;\r\n\tprotected get_e7(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tprotected set_e7(a: boolean): void {\r\n\t\tsuper.set_e7(a);\r\n\t}\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicShapeSeriesBase, 'raisePropertyChanged', [ 'IsCustomShapeMarkerStyleAllowed:qv:rd', [ 0, false ], 'IsCustomShapeStyleAllowed:qw:re', [ 0, false ], 'ItemSearchMode:qo:rf', [ ShapeItemSearchMode_$type, enumGetBox<ShapeItemSearchMode>(ShapeItemSearchMode_$type, 0) ], 'ItemSearchPointsThreshold:qy:rg', [ 1, 10000 ], 'ItemSearchThreshold:qz:rh', [ 1, 10000 ], 'ShapeFilterResolution:qx:ri', [ 1, 2 ], 'ShapeMemberPath:q7:rj', [ 2, \"points\" ] ]);\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicShapeSeriesBaseView extends HostSeriesView {\r\n\tstatic $t: Type = markType(GeographicShapeSeriesBaseView, 'GeographicShapeSeriesBaseView', (<any>HostSeriesView).$);\r\n\tconstructor(a: GeographicShapeSeriesBase) {\r\n\t\tsuper(a);\r\n\t\tthis.ce = a;\r\n\t}\r\n\tprivate ce: GeographicShapeSeriesBase = null;\r\n\tb2(): void {\r\n\t\tsuper.b2();\r\n\t\t(<ShapeSeriesBase>this.ce.qe).r5 = this.ce.q7;\r\n\t}\r\n\tcf(): void {\r\n\t\tlet a: ShapeSeriesBase = <ShapeSeriesBase>this.ce.qe;\r\n\t\tif (this.ce.ce == null) {\r\n\t\t\ta.qt = null;\r\n\t\t\ta.qv = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\ta.qt = (<XamGeographicMap>this.ce.ce).t7;\r\n\t\ta.qv = (<XamGeographicMap>this.ce.ce).t9;\r\n\t}\r\n\tch(): void {\r\n\t\t(<ShapeSeriesBase>this.ce.qe).r5 = this.ce.q7;\r\n\t}\r\n\tcg(): void {\r\n\t\t(<ShapeSeriesBase>this.ce.qe).rr = this.ce.qx;\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { EventArgs, Base, Type, markType } from \"igniteui-core/type\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class ImageTilesReadyEventArgs extends EventArgs {\r\n\tstatic $t: Type = markType(ImageTilesReadyEventArgs, 'ImageTilesReadyEventArgs', (<any>EventArgs).$);\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { EventArgs, Base, Type, markType } from \"igniteui-core/type\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class ImagesChangedEventArgs extends EventArgs {\r\n\tstatic $t: Type = markType(ImagesChangedEventArgs, 'ImagesChangedEventArgs', (<any>EventArgs).$);\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Enum, ValueType, markEnum, Type } from \"igniteui-core/type\";\r\n\r\n/**\r\n * Indicates the desired behavior for the map on resizing.\r\n */\r\nexport enum MapBackgroundTilingMode {\r\n\t/**\r\n\t * Indicates that the map should decide the desired tiling mode automatically.\r\n\t */\r\n\tAuto = 0,\r\n\t/**\r\n\t * Map will not wrap tiles around the origin.\r\n\t */\r\n\tNonWrapped = 1,\r\n\t/**\r\n\t * Map will wrap tiles around the origin.\r\n\t */\r\n\tWrapped = 2\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport let MapBackgroundTilingMode_$type = markEnum('MapBackgroundTilingMode', 'Auto,0|NonWrapped,1|Wrapped,2');\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Enum, ValueType, markEnum, Type } from \"igniteui-core/type\";\r\n\r\n/**\r\n * Indicates the desired behavior for the map on resizing.\r\n */\r\nexport enum MapResizeBehavior {\r\n\t/**\r\n\t * Indicates that the map should decide the desired resize mode automatically.\r\n\t */\r\n\tAuto = 0,\r\n\t/**\r\n\t * Map will attempt to keep the top left position static during resize.\r\n\t */\r\n\tMaintainTopLeftPosition = 1,\r\n\t/**\r\n\t * Map will attempt to keep the center position static during resize.\r\n\t */\r\n\tMaintainCenterPosition = 2\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport let MapResizeBehavior_$type = markEnum('MapResizeBehavior', 'Auto,0|MaintainTopLeftPosition,1|MaintainCenterPosition,2');\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { ShapeSeriesBase } from \"igniteui-charts/ShapeSeriesBase\";\r\nimport { IMapRenderDeferralHandler, IMapRenderDeferralHandler_$type } from \"igniteui-core/IMapRenderDeferralHandler\";\r\nimport { GeographicMapImagery } from \"./GeographicMapImagery\";\r\nimport { Base, Type, PropertyChangedEventArgs, EventArgs, runOn, delegateRemove, delegateCombine, typeCast, markType } from \"igniteui-core/type\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { Control } from \"igniteui-core/Control\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { SeriesViewer } from \"igniteui-charts/SeriesViewer\";\r\nimport { ImageTilesReadyEventArgs } from \"./ImageTilesReadyEventArgs\";\r\nimport { XamGeographicMap } from \"./XamGeographicMap\";\r\nimport { Rect } from \"igniteui-core/Rect\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { DomRenderer, DomRenderer_$type, DomWrapper, DomWrapper_$type } from \"igniteui-core/dom\";\r\nimport { RenderSurface } from \"igniteui-charts/RenderSurface\";\r\nimport { Dictionary$2 } from \"igniteui-core/Dictionary$2\";\r\nimport { FrameworkElement } from \"igniteui-core/FrameworkElement\";\r\nimport { ShapeSeriesViewBase } from \"igniteui-charts/ShapeSeriesViewBase\";\r\nimport { RenderingContext } from \"igniteui-core/RenderingContext\";\r\nimport { GeometryGroup } from \"igniteui-core/GeometryGroup\";\r\nimport { Brush } from \"igniteui-core/Brush\";\r\nimport { Defaults } from \"igniteui-charts/Defaults\";\r\nimport { PathGeometry } from \"igniteui-core/PathGeometry\";\r\nimport { List$1 } from \"igniteui-core/List$1\";\r\nimport { PathFigure } from \"igniteui-core/PathFigure\";\r\nimport { Geometry } from \"igniteui-core/Geometry\";\r\nimport { PointCollection } from \"igniteui-core/PointCollection\";\r\nimport { CanvasViewRenderer } from \"igniteui-core/CanvasViewRenderer\";\r\nimport { ImagesChangedEventArgs } from \"./ImagesChangedEventArgs\";\r\nimport { truncate } from \"igniteui-core/number\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class TileSeries extends ShapeSeriesBase implements IMapRenderDeferralHandler {\r\n\tstatic $t: Type = markType(TileSeries, 'TileSeries', (<any>ShapeSeriesBase).$, [IMapRenderDeferralHandler_$type]);\r\n\tprotected get_el(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>TileSeries).$;\r\n\t}\r\n\tprotected by(): SeriesView {\r\n\t\treturn new TileSeriesView(this);\r\n\t}\r\n\tl4(a: SeriesView): void {\r\n\t\tsuper.l4(a);\r\n\t\tthis.sz = <TileSeriesView>a;\r\n\t}\r\n\tprotected get_rf(): boolean {\r\n\t\treturn false;\r\n\t}\r\n\tprotected sz: TileSeriesView;\r\n\tget s3(): GeographicMapImagery {\r\n\t\treturn this.s1;\r\n\t}\r\n\tset s3(a: GeographicMapImagery) {\r\n\t\tlet b: boolean = a != this.s3;\r\n\t\tif (b) {\r\n\t\t\tlet c: any = this.s3;\r\n\t\t\tthis.s1 = a;\r\n\t\t\tthis.raisePropertyChanged(\"TileImagery\", c, a);\r\n\t\t}\r\n\t}\r\n\tprivate s1: GeographicMapImagery = null;\r\n\tprivate s0: GeographicMapImagery = null;\r\n\tprotected get s2(): GeographicMapImagery {\r\n\t\treturn this.s0;\r\n\t}\r\n\tprotected set s2(a: GeographicMapImagery) {\r\n\t\tlet b = this.s0;\r\n\t\tthis.s0 = a;\r\n\t\tthis.raisePropertyChanged(\"ActualTileImagery\", b, this.s0);\r\n\t}\r\n\tprotected l9(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.l9(a, b, c, d);\r\n\t\tlet e: GeographicMapImagery;\r\n\t\tlet f: GeographicMapImagery;\r\n\t\tswitch (b) {\r\n\t\t\tcase \"TileImagery\":\r\n\t\t\te = <GeographicMapImagery>c;\r\n\t\t\tf = <GeographicMapImagery>d;\r\n\t\t\tif (e != null) {\r\n\t\t\t\te.propertyChanged = delegateRemove(e.propertyChanged, runOn(this, this.s8));\r\n\t\t\t}\r\n\t\t\tif (f != null) {\r\n\t\t\t\tf.propertyChanged = delegateCombine(f.propertyChanged, runOn(this, this.s8));\r\n\t\t\t}\r\n\t\t\tthis.sz.de(e, f);\r\n\t\t\tthis.mn(false);\r\n\t\t\tthis.lu();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualTileImagery\":\r\n\t\t\te = <GeographicMapImagery>c;\r\n\t\t\tf = <GeographicMapImagery>d;\r\n\t\t\tif (e != null) {\r\n\t\t\t\te.imageTilesReady = delegateRemove(e.imageTilesReady, runOn(this, this.s9));\r\n\t\t\t\te.deferralHandler = null;\r\n\t\t\t}\r\n\t\t\tif (f != null) {\r\n\t\t\t\tf.imageTilesReady = delegateCombine(f.imageTilesReady, runOn(this, this.s9));\r\n\t\t\t\tf.deferralHandler = this;\r\n\t\t\t}\r\n\t\t\tthis.sz.dd(e, f);\r\n\t\t\tif (f != null && typeCast<XamGeographicMap>((<any>XamGeographicMap).$, this.ce) !== null) {\r\n\t\t\t\tf.geographicMap = <XamGeographicMap>this.ce;\r\n\t\t\t\tthis.tb(this.b1);\r\n\t\t\t\tthis.sz.da(this.ce.tk);\r\n\t\t\t}\r\n\t\t\tthis.lu();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualWindowRect\":\r\n\t\t\tthis.sz.da(<Rect>d);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"WorldRect\":\r\n\t\t\tthis.sz.dh(<Rect>d);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"SeriesViewer\":\r\n\t\t\tlet g = <SeriesViewer>c;\r\n\t\t\tlet h = <SeriesViewer>d;\r\n\t\t\tif (g != null && this.s2 != null) {\r\n\t\t\t\tthis.s2.be(null);\r\n\t\t\t}\r\n\t\t\tif (h != null && this.s2 != null) {\r\n\t\t\t\tthis.s2.be(this.b1.w);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualBrush\":\r\n\r\n\t\t\tcase \"ActualOutline\":\r\n\r\n\t\t\tcase \"ActualThickness\":\r\n\t\t\tthis.lw();\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprivate s8(a: any, b: PropertyChangedEventArgs): void {\r\n\t\tif (b.propertyName == \"MultiScaleImage\") {\r\n\t\t\tthis.tb(this.b1);\r\n\t\t}\r\n\t}\r\n\timageTilesReady: (sender: any, e: EventArgs) => void = null;\r\n\tprivate s9(a: any, b: EventArgs): void {\r\n\t\tif (this.imageTilesReady != null) {\r\n\t\t\tthis.imageTilesReady(this, new EventArgs());\r\n\t\t}\r\n\t\tif (!this.s5) {\r\n\t\t\tthis.sz.df();\r\n\t\t}\r\n\t}\r\n\tprivate s4: (arg1: boolean) => void = null;\r\n\tregister(a: DependencyObject, b: (arg1: boolean) => void): void {\r\n\t\tthis.s4 = b;\r\n\t}\r\n\tunRegister(a: DependencyObject): void {\r\n\t\tthis.s4 = null;\r\n\t}\r\n\tdeferredRefresh(): void {\r\n\t\tthis.mn(false);\r\n\t}\r\n\tdeferAction(a: () => void): void {\r\n\t\tif (this.he != null) {\r\n\t\t\tthis.he.setTimeout(<() => void>a, 0);\r\n\t\t} else {\r\n\t\t\twindow.setTimeout(<() => void>a, 0);\r\n\t\t}\r\n\t}\r\n\tprotected na(a: Rect, b: Rect): void {\r\n\t\tthis.sz.dg();\r\n\t\tsuper.na(a, b);\r\n\t}\r\n\tprivate s5: boolean = false;\r\n\tmo(a: boolean): void {\r\n\t\tsuper.mo(a);\r\n\t\tthis.ta(a, this.b1);\r\n\t}\r\n\tprotected ta(a: boolean, b: SeriesView): void {\r\n\t\tlet c: Rect;\r\n\t\tlet d: Rect;\r\n\t\tlet e = <TileSeriesView>b;\r\n\t\tlet f = b.getViewInfo(c, d);\r\n\t\tc = f.p0;\r\n\t\td = f.p1;\r\n\t\tthis.tb(b);\r\n\t\tif (this.s4 != null) {\r\n\t\t\tthis.s5 = true;\r\n\t\t\tthis.s4(a);\r\n\t\t\tthis.s5 = false;\r\n\t\t}\r\n\t\te.df();\r\n\t}\r\n\tmm(a: Rect, b: Rect, c: RenderSurface, d: string, e: number): void {\r\n\t\tsuper.mm(a, b, c, d, e);\r\n\t\tlet f = this.fg.item(d);\r\n\t\tf.a1(c);\r\n\t\tif (this.cy(f)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.sj(f);\r\n\t}\r\n\tprivate tb(a: SeriesView): void {\r\n\t\tlet b: Rect;\r\n\t\tlet c: Rect;\r\n\t\tlet d = a.getViewInfo(b, c);\r\n\t\tb = d.p0;\r\n\t\tc = d.p1;\r\n\t\tif (this.s3 != null && this.s3.ao != null) {\r\n\t\t\tif (this.s3 != this.s2) {\r\n\t\t\t\tthis.s2 = this.s3;\r\n\t\t\t}\r\n\t\t\tif (this.s2 != null && !b.isEmpty) {\r\n\t\t\t\tif (this.s2.width != b.width) {\r\n\t\t\t\t\tthis.s2.width = b.width;\r\n\t\t\t\t}\r\n\t\t\t\tif (this.s2.height != b.height) {\r\n\t\t\t\t\tthis.s2.height = b.height;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tk2(a: boolean, b: SeriesView): void {\r\n\t\tsuper.k2(a, b);\r\n\t\t(<TileSeriesView>b).db();\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class TileSeriesView extends ShapeSeriesViewBase {\r\n\tstatic $t: Type = markType(TileSeriesView, 'TileSeriesView', (<any>ShapeSeriesViewBase).$);\r\n\tconstructor(a: TileSeries) {\r\n\t\tsuper(a);\r\n\t\tthis.c7 = a;\r\n\t}\r\n\tprotected c7: TileSeries = null;\r\n\tas(): void {\r\n\t\tsuper.as();\r\n\t\tif (!this.q) {\r\n\t\t\tthis.c7.pe = Defaults.ao;\r\n\t\t\tthis.c7.o9 = Defaults.an;\r\n\t\t}\r\n\t}\r\n\tprotected ch(a: FrameworkElement, b: PathGeometry): void {\r\n\t\tif (b.c.count > 0) {\r\n\t\t\tthis.di.d.add(b);\r\n\t\t}\r\n\t}\r\n\tprotected c2(a: number, b: List$1<PointCollection>): PathGeometry {\r\n\t\treturn this.c3(a, b, true);\r\n\t}\r\n\tprotected c1(a: number, b: any): FrameworkElement {\r\n\t\treturn null;\r\n\t}\r\n\tprotected cl(a: FrameworkElement, b: boolean): void {\r\n\t}\r\n\tcj(a: FrameworkElement, b: any, c: boolean): void {\r\n\t}\r\n\tprivate di: GeometryGroup = new GeometryGroup();\r\n\tcr(): void {\r\n\t\tsuper.cr();\r\n\t\tthis.di.d.clear();\r\n\t}\r\n\tcq(): void {\r\n\t\tsuper.cq();\r\n\t\tthis.aq();\r\n\t}\r\n\tda(a: Rect): void {\r\n\t\tif (this.c7.s3 != null) {\r\n\t\t\tthis.c7.s3.windowRect = a;\r\n\t\t}\r\n\t}\r\n\tprivate c9: DomWrapper = null;\r\n\tprivate c8: RenderingContext = null;\r\n\tdd(a: GeographicMapImagery, b: GeographicMapImagery): void {\r\n\t\tif (this.c9 == null) {\r\n\t\t\tthis.c9 = this.e.he.createElement(\"canvas\");\r\n\t\t\tlet c = this.e.he.get2DCanvasContext(this.c9);\r\n\t\t\tthis.c8 = new RenderingContext(new CanvasViewRenderer(), c);\r\n\t\t\tthis.c9.setAttribute(\"width\", this.bu.width.toString());\r\n\t\t\tthis.c9.setAttribute(\"height\", this.bu.height.toString());\r\n\t\t}\r\n\t\tif (a != null) {\r\n\t\t\ta.bd(null);\r\n\t\t\ta.be(null);\r\n\t\t\ta.imagesChanged = delegateRemove(a.imagesChanged, runOn(this, this.dc));\r\n\t\t}\r\n\t\tif (b != null) {\r\n\t\t\tif (this.w != null) {\r\n\t\t\t\tb.be(this.w);\r\n\t\t\t}\r\n\t\t\tb.bd(this.c8);\r\n\t\t\tb.bf(this.bu);\r\n\t\t\tb.imagesChanged = delegateCombine(b.imagesChanged, runOn(this, this.dc));\r\n\t\t}\r\n\t}\r\n\tprivate dc(a: any, b: EventArgs): void {\r\n\t\tthis.aq();\r\n\t}\r\n\tde(a: GeographicMapImagery, b: GeographicMapImagery): void {\r\n\t}\r\n\tdg(): void {\r\n\t\tif (this.c9 != null) {\r\n\t\t\tthis.c9.setAttribute(\"width\", this.bu.width.toString());\r\n\t\t\tthis.c9.setAttribute(\"height\", this.bu.height.toString());\r\n\t\t}\r\n\t\tif (this.c7.s3 != null) {\r\n\t\t\tthis.c7.s3.bf(this.bu);\r\n\t\t}\r\n\t}\r\n\tprotected a6(a: RenderingContext, b: boolean): void {\r\n\t\tsuper.a6(a, b);\r\n\t\tif (b) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (this.c9 == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet c: boolean = false;\r\n\t\tif (this.di.d.count > 0) {\r\n\t\t\tc = true;\r\n\t\t\tthis.k.aa();\r\n\t\t\tthis.k.r(this.di);\r\n\t\t\tlet d = <CanvasRenderingContext2D>this.k.h();\r\n\t\t\td.clip();\r\n\t\t}\r\n\t\tlet e: number = <number>truncate(Math.round(this.bu.left));\r\n\t\tlet f: number = <number>truncate(Math.round(this.bu.top));\r\n\t\tlet g: number = <number>truncate(Math.round(this.bu.width));\r\n\t\tlet h: number = <number>truncate(Math.round(this.bu.height));\r\n\t\tthis.k.o(this.c9.getNativeElement(), 1, e, f, g, h, e, f, g, h);\r\n\t\tif (c) {\r\n\t\t\tthis.k.z();\r\n\t\t}\r\n\t}\r\n\tdf(): void {\r\n\t\tthis.aq();\r\n\t}\r\n\tdb(): void {\r\n\t}\r\n\tdh(a: Rect): void {\r\n\t\tif (this.c7.s3 != null) {\r\n\t\t\tthis.c7.s3.a6();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { VerticalLinearScaler } from \"igniteui-charts/VerticalLinearScaler\";\r\nimport { ScalerParams } from \"igniteui-charts/ScalerParams\";\r\nimport { Rect } from \"igniteui-core/Rect\";\r\nimport { IList$1, IList$1_$type, Base, Type, markType } from \"igniteui-core/type\";\r\nimport { NumericScaler } from \"igniteui-charts/NumericScaler\";\r\nimport { NumericAxisBase } from \"igniteui-charts/NumericAxisBase\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class SphericalMercatorVerticalScaler extends VerticalLinearScaler {\r\n\tstatic $t: Type = markType(SphericalMercatorVerticalScaler, 'SphericalMercatorVerticalScaler', (<any>VerticalLinearScaler).$);\r\n\tprivate au: Rect = null;\r\n\tq(a: number, b: ScalerParams): number {\r\n\t\tif (!b.c.isEmpty) {\r\n\t\t\tlet c: number = a * b.e.height + b.e.top * b.d.height;\r\n\t\t\tlet d: number = this.getMercatorUnscaledValue(c, this.au, b.c, b.a);\r\n\t\t\treturn d;\r\n\t\t} else {\r\n\t\t\treturn this.getMercatorUnscaledValue(a, b.e, b.d, b.a);\r\n\t\t}\r\n\t}\r\n\tp(a: number, b: ScalerParams): number {\r\n\t\tif (!b.c.isEmpty) {\r\n\t\t\tlet c: number = this.getMercatorScaledValue1(a, this.au, b.c, b.a);\r\n\t\t\tc = (c - (b.e.top * b.d.height)) / b.e.height;\r\n\t\t\treturn c;\r\n\t\t} else {\r\n\t\t\treturn this.getMercatorScaledValue1(a, b.e, b.d, b.a);\r\n\t\t}\r\n\t}\r\n\tprivate af(values_: IList$1<number>): number[] {\r\n\t\tlet a = <any[]>(Array.isArray(values_) ? values_ : null);\r\n\t\treturn <number[]>a;\r\n\t\treturn null;\r\n\t}\r\n\tv(a: IList$1<number>, b: number, c: number, d: ScalerParams): void {\r\n\t\tlet e: number;\r\n\t\tlet f: Rect = d.e;\r\n\t\tlet g: Rect = d.d;\r\n\t\tlet h: Rect = d.c;\r\n\t\tlet i: boolean = d.a;\r\n\t\tlet j: boolean = !h.isEmpty;\r\n\t\tlet k: number = this.m;\r\n\t\tlet l: number = this.o;\r\n\t\tlet m: number = h.top;\r\n\t\tlet n: number = h.height;\r\n\t\tlet o: number = f.top;\r\n\t\tlet p: number = f.height;\r\n\t\tlet q: number = g.top;\r\n\t\tlet r: number = g.height;\r\n\t\tlet s: number = this.au.top;\r\n\t\tlet t: number = this.au.height;\r\n\t\tlet u: number[] = this.af(a);\r\n\t\tlet v: number = 0.017453292519943295;\r\n\t\tlet w: number;\r\n\t\tlet x: number;\r\n\t\tlet y: number;\r\n\t\tlet z: number;\r\n\t\tlet aa: number;\r\n\t\tlet ab: boolean = false;\r\n\t\tif (u != null) {\r\n\t\t\tab = true;\r\n\t\t}\r\n\t\tfor (let ac: number = b; ac < c; ac++) {\r\n\t\t\tif (ab) {\r\n\t\t\t\te = u[ac];\r\n\t\t\t} else {\r\n\t\t\t\te = a.item(ac);\r\n\t\t\t}\r\n\t\t\tif (j) {\r\n\t\t\t\tif (e < SphericalMercatorVerticalScaler.ah) {\r\n\t\t\t\t\te = SphericalMercatorVerticalScaler.ah;\r\n\t\t\t\t}\r\n\t\t\t\tif (e > SphericalMercatorVerticalScaler.ag) {\r\n\t\t\t\t\te = SphericalMercatorVerticalScaler.ag;\r\n\t\t\t\t}\r\n\t\t\t\tw = e * (v);\r\n\t\t\t\tx = Math.sin(w);\r\n\t\t\t\ty = 0.5 * Math.log((1 + x) / (1 - x));\r\n\t\t\t\tz = (this.ai - y) * n / this.aj;\r\n\t\t\t\tz = m + z;\r\n\t\t\t\taa = (z - s * n) / t;\r\n\t\t\t\tz = (aa - (o * r)) / p;\r\n\t\t\t\tif (ab) {\r\n\t\t\t\t\tu[ac] = z;\r\n\t\t\t\t} else {\r\n\t\t\t\t\ta.item(ac, z);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (e < SphericalMercatorVerticalScaler.ah) {\r\n\t\t\t\t\te = SphericalMercatorVerticalScaler.ah;\r\n\t\t\t\t}\r\n\t\t\t\tif (e > SphericalMercatorVerticalScaler.ag) {\r\n\t\t\t\t\te = SphericalMercatorVerticalScaler.ag;\r\n\t\t\t\t}\r\n\t\t\t\tw = e * (v);\r\n\t\t\t\tx = Math.sin(w);\r\n\t\t\t\ty = 0.5 * Math.log((1 + x) / (1 - x));\r\n\t\t\t\tz = (this.ai - y) * r / this.aj;\r\n\t\t\t\tz = q + z;\r\n\t\t\t\tz = (z - o * r) / p;\r\n\t\t\t\tif (ab) {\r\n\t\t\t\t\tu[ac] = z;\r\n\t\t\t\t} else {\r\n\t\t\t\t\ta.item(ac, z);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tt(a: NumericAxisBase, b: number, c: number, d: number, e: number): { p3: number; p4: number; } {\r\n\t\td = this.ak(a.l5);\r\n\t\te = this.ak(a.l4);\r\n\t\treturn {\r\n\t\t\tp3: d,\r\n\t\t\tp4: e\r\n\r\n\t\t};\r\n\t}\r\n\tprotected w(a: string, b: any, c: any): void {\r\n\t\tsuper.w(a, b, c);\r\n\t\tswitch (a) {\r\n\t\t\tcase \"ActualMinimumValue\":\r\n\r\n\t\t\tcase \"ActualMaximumValue\":\r\n\t\t\tthis.ai = SphericalMercatorVerticalScaler.am(this.n);\r\n\t\t\tthis.aj = SphericalMercatorVerticalScaler.am(this.n) - SphericalMercatorVerticalScaler.am(this.o);\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprivate static ag: number = 85.05112878;\r\n\tprivate static ah: number = -85.05112878;\r\n\tprivate ai: number = 0;\r\n\tprivate aj: number = 0;\r\n\tstatic get as(): number {\r\n\t\treturn SphericalMercatorVerticalScaler.ag;\r\n\t}\r\n\tstatic get at(): number {\r\n\t\treturn SphericalMercatorVerticalScaler.ah;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.au = new Rect(0, 0, 0, 1, 1);\r\n\t}\r\n\tprivate getMercatorUnscaledValue(a: number, b: Rect, c: Rect, d: boolean): number {\r\n\t\tlet e = (a - c.top) * b.width + b.top * c.height;\r\n\t\te = SphericalMercatorVerticalScaler.am(this.n) - e / (c.height / this.aj);\r\n\t\treturn SphericalMercatorVerticalScaler.aq(e);\r\n\t}\r\n\tprivate getMercatorScaledValue1(a: number, b: Rect, c: Rect, d: boolean): number {\r\n\t\tlet e = c.top + this.getMercatorScaledValue3(a, c.height);\r\n\t\treturn (e - b.top * c.height) / b.width;\r\n\t}\r\n\tprivate getMercatorScaledValue2(a: number, b: Rect, c: Rect, d: Rect, e: boolean): number {\r\n\t\tlet f = this.getMercatorScaledValue3(a, d.height);\r\n\t\treturn (f - b.top * c.height) / b.width;\r\n\t}\r\n\tprivate getMercatorScaledValue3(a: number, b: number): number {\r\n\t\ta = a > SphericalMercatorVerticalScaler.ah ? (a < SphericalMercatorVerticalScaler.ag ? a : SphericalMercatorVerticalScaler.ag) : SphericalMercatorVerticalScaler.ah;\r\n\t\tlet c = SphericalMercatorVerticalScaler.am(a);\r\n\t\tlet d = (this.ai - c) * b / this.aj;\r\n\t\treturn (d);\r\n\t}\r\n\tstatic am(a: number): number {\r\n\t\tlet b: number = a * (0.017453292519943295);\r\n\t\tlet c: number = Math.sin(b);\r\n\t\tlet d: number = 0.5 * Math.log((1 + c) / (1 - c));\r\n\t\treturn d;\r\n\t}\r\n\tstatic aq(a: number): number {\r\n\t\ta = Math.exp(2 * a);\r\n\t\treturn Math.asin((a - 1) / (a + 1)) / 0.017453292519943295;\r\n\t}\r\n\tprivate ak(a: number): number {\r\n\t\tif (a < SphericalMercatorVerticalScaler.ah) {\r\n\t\t\treturn SphericalMercatorVerticalScaler.ah;\r\n\t\t}\r\n\t\tif (a > SphericalMercatorVerticalScaler.ag) {\r\n\t\t\treturn SphericalMercatorVerticalScaler.ag;\r\n\t\t}\r\n\t\treturn a;\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { HorizontalLinearScaler } from \"igniteui-charts/HorizontalLinearScaler\";\r\nimport { Rect } from \"igniteui-core/Rect\";\r\nimport { ScalerParams } from \"igniteui-charts/ScalerParams\";\r\nimport { IList$1, IList$1_$type, Base, Type, markType } from \"igniteui-core/type\";\r\nimport { NumericScaler } from \"igniteui-charts/NumericScaler\";\r\nimport { NumericAxisBase } from \"igniteui-charts/NumericAxisBase\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class SphericalMercatorHorizontalScaler extends HorizontalLinearScaler {\r\n\tstatic $t: Type = markType(SphericalMercatorHorizontalScaler, 'SphericalMercatorHorizontalScaler', (<any>HorizontalLinearScaler).$);\r\n\tprivate aj: Rect = null;\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.aj = new Rect(0, 0, 0, 1, 1);\r\n\t}\r\n\tq(a: number, b: ScalerParams): number {\r\n\t\tif (!b.c.isEmpty) {\r\n\t\t\tlet c: number = a * b.e.width + b.e.left * b.d.width;\r\n\t\t\tlet d: number = this.getMercatorUnscaledValue(c, this.aj, b.c, b.a);\r\n\t\t\treturn d;\r\n\t\t} else {\r\n\t\t\treturn this.getMercatorUnscaledValue(a, b.e, b.d, b.a);\r\n\t\t}\r\n\t}\r\n\tp(a: number, b: ScalerParams): number {\r\n\t\tif (!b.c.isEmpty) {\r\n\t\t\tlet c: number = this.getMercatorScaledValue1(a, this.aj, b.c, b.a);\r\n\t\t\tlet d: number = (c - (b.e.left * b.d.width)) / b.e.width;\r\n\t\t\treturn d;\r\n\t\t} else {\r\n\t\t\treturn this.getMercatorScaledValue1(a, b.e, b.d, b.a);\r\n\t\t}\r\n\t}\r\n\tprivate af(values_: IList$1<number>): number[] {\r\n\t\tlet a = <any[]>(Array.isArray(values_) ? values_ : null);\r\n\t\treturn <number[]>a;\r\n\t\treturn null;\r\n\t}\r\n\tv(a: IList$1<number>, b: number, c: number, d: ScalerParams): void {\r\n\t\tlet e: number;\r\n\t\tlet f: Rect = d.e;\r\n\t\tlet g: Rect = d.d;\r\n\t\tlet h: Rect = d.c;\r\n\t\tlet i: boolean = d.a;\r\n\t\tlet j: boolean = !h.isEmpty;\r\n\t\tlet k: number = this.m;\r\n\t\tlet l: number = this.o;\r\n\t\tlet m: number = h.left;\r\n\t\tlet n: number = h.width;\r\n\t\tlet o: number = f.left;\r\n\t\tlet p: number = f.width;\r\n\t\tlet q: number = g.left;\r\n\t\tlet r: number = g.width;\r\n\t\tlet s: number = this.aj.left;\r\n\t\tlet t: number = this.aj.width;\r\n\t\tlet u: number[] = this.af(a);\r\n\t\tlet v: boolean = false;\r\n\t\tif (u != null) {\r\n\t\t\tv = true;\r\n\t\t}\r\n\t\tfor (let w: number = b; w < c; w++) {\r\n\t\t\tif (v) {\r\n\t\t\t\te = u[w];\r\n\t\t\t} else {\r\n\t\t\t\te = a.item(w);\r\n\t\t\t}\r\n\t\t\tif (j) {\r\n\t\t\t\tlet x: number = (e - l) / (k);\r\n\t\t\t\tif (i) {\r\n\t\t\t\t\tx = 1 - x;\r\n\t\t\t\t}\r\n\t\t\t\tx = m + n * (x - s) / t;\r\n\t\t\t\tlet y: number = (x - (o * r)) / p;\r\n\t\t\t\tif (v) {\r\n\t\t\t\t\tu[w] = y;\r\n\t\t\t\t} else {\r\n\t\t\t\t\ta.item(w, y);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tlet z: number = (e - l) / (k);\r\n\t\t\t\tif (i) {\r\n\t\t\t\t\tz = 1 - z;\r\n\t\t\t\t}\r\n\t\t\t\tz = q + r * (z - o) / p;\r\n\t\t\t\tif (v) {\r\n\t\t\t\t\tu[w] = z;\r\n\t\t\t\t} else {\r\n\t\t\t\t\ta.item(w, z);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tt(a: NumericAxisBase, b: number, c: number, d: number, e: number): { p3: number; p4: number; } {\r\n\t\td = a.l5;\r\n\t\te = a.l4;\r\n\t\treturn {\r\n\t\t\tp3: d,\r\n\t\t\tp4: e\r\n\r\n\t\t};\r\n\t}\r\n\tprivate getMercatorUnscaledValue(a: number, b: Rect, c: Rect, d: boolean): number {\r\n\t\tlet e: number = b.left + b.width * (a - c.left) / c.width;\r\n\t\tif (d) {\r\n\t\t\te = 1 - e;\r\n\t\t}\r\n\t\treturn this.o + e * (this.m);\r\n\t}\r\n\tprivate getMercatorScaledValue1(a: number, b: Rect, c: Rect, d: boolean): number {\r\n\t\tlet e: number = (a - this.o) / (this.m);\r\n\t\tif (d) {\r\n\t\t\te = 1 - e;\r\n\t\t}\r\n\t\treturn c.left + c.width * (e - b.left) / b.width;\r\n\t}\r\n\tprivate getMercatorScaledValue2(a: number, b: Rect, c: Rect, d: Rect, e: boolean): number {\r\n\t\tlet f: number = (a - this.o) / (this.m);\r\n\t\tif (e) {\r\n\t\t\tf = 1 - f;\r\n\t\t}\r\n\t\treturn c.left + c.width * (f - b.left) / b.width;\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { SeriesViewer } from \"igniteui-charts/SeriesViewer\";\r\nimport { IMapRenderDeferralHandler, IMapRenderDeferralHandler_$type } from \"igniteui-core/IMapRenderDeferralHandler\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { MapResizeBehavior, MapResizeBehavior_$type } from \"./MapResizeBehavior\";\r\nimport { MapBackgroundTilingMode, MapBackgroundTilingMode_$type } from \"./MapBackgroundTilingMode\";\r\nimport { Rect } from \"igniteui-core/Rect\";\r\nimport { Base, Point, Type, IEnumerator$1, IEnumerator$1_$type, IEnumerator, IEnumerator_$type, IDisposable, IDisposable_$type, EventArgs, Boolean_$type, typeCast, enumGetBox, EnumUtil, Point_$type, fromEnum, Number_$type, runOn, delegateRemove, delegateCombine, markType, markDep, PointUtil, INotifyPropertyChanged, INotifyPropertyChanged_$type, PropertyChangedEventArgs, String_$type, IEnumerable, IEnumerable_$type } from \"igniteui-core/type\";\r\nimport { NumericXAxis } from \"igniteui-charts/NumericXAxis\";\r\nimport { NumericYAxis } from \"igniteui-charts/NumericYAxis\";\r\nimport { SphericalMercatorVerticalScaler } from \"./SphericalMercatorVerticalScaler\";\r\nimport { Control } from \"igniteui-core/Control\";\r\nimport { Axis } from \"igniteui-charts/Axis\";\r\nimport { SphericalMercatorHorizontalScaler } from \"./SphericalMercatorHorizontalScaler\";\r\nimport { StraightNumericAxisBase } from \"igniteui-charts/StraightNumericAxisBase\";\r\nimport { DomRenderer, DomRenderer_$type } from \"igniteui-core/dom\";\r\nimport { ScalerParams } from \"igniteui-charts/ScalerParams\";\r\nimport { NumericAxisBase } from \"igniteui-charts/NumericAxisBase\";\r\nimport { Brush } from \"igniteui-core/Brush\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { SeriesViewerView } from \"igniteui-charts/SeriesViewerView\";\r\nimport { List$1 } from \"igniteui-core/List$1\";\r\nimport { Tuple$2 } from \"igniteui-core/Tuple$2\";\r\nimport { MathUtil } from \"igniteui-core/MathUtil\";\r\nimport { ZoomCoercionMode } from \"igniteui-charts/ZoomCoercionMode\";\r\nimport { ImageTilesReadyEventArgs } from \"./ImageTilesReadyEventArgs\";\r\nimport { FontInfo } from \"igniteui-core/FontInfo\";\r\nimport { ItfConverter } from \"igniteui-core/ItfConverter\";\r\nimport { TriangulationSource } from \"igniteui-core/TriangulationSource\";\r\nimport { ChartVisualData } from \"igniteui-charts/ChartVisualData\";\r\nimport { AxisVisualData } from \"igniteui-charts/AxisVisualData\";\r\nimport { SeriesVisualData } from \"igniteui-charts/SeriesVisualData\";\r\nimport { FrameworkElement } from \"igniteui-core/FrameworkElement\";\r\nimport { RectData } from \"igniteui-core/RectData\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\nimport { truncate, intDivide, isNaN_, isInfinity } from \"igniteui-core/number\";\r\nimport { XamMultiScaleImage } from \"igniteui-core/XamMultiScaleImage\";\r\nimport { XamMultiScaleTileSource } from \"igniteui-core/XamMultiScaleTileSource\";\r\nimport { DownloadingMultiScaleImageEventArgs } from \"igniteui-core/DownloadingMultiScaleImageEventArgs\";\r\nimport { CancellingMultiScaleImageEventArgs } from \"igniteui-core/CancellingMultiScaleImageEventArgs\";\r\nimport { Size } from \"igniteui-core/Size\";\r\nimport { RenderingContext } from \"igniteui-core/RenderingContext\";\r\nimport { ImagesChangedEventArgs } from \"./ImagesChangedEventArgs\";\r\nimport { HostSeriesView } from \"./HostSeriesView\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { ScatterTriangulationSeries } from \"igniteui-charts/ScatterTriangulationSeries\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { ScatterAreaSeries } from \"igniteui-charts/ScatterAreaSeries\";\r\nimport { InteractionState } from \"igniteui-core/InteractionState\";\r\nimport { SeriesViewerViewManager } from \"igniteui-charts/SeriesViewerViewManager\";\r\nimport { BrushCollection } from \"igniteui-core/BrushCollection\";\r\nimport { DefaultPaletteInfo } from \"igniteui-charts/DefaultPaletteInfo\";\r\nimport { CanvasRenderScheduler } from \"igniteui-core/CanvasRenderScheduler\";\r\nimport { Defaults } from \"igniteui-charts/Defaults\";\r\nimport { Shape } from \"igniteui-core/Shape\";\r\nimport { ModifierKeys } from \"igniteui-core/ModifierKeys\";\r\nimport { OpenStreetMapTileSource } from \"igniteui-core/OpenStreetMapTileSource\";\r\nimport { ColorScale } from \"igniteui-charts/ColorScale\";\r\nimport { TriangulationStatusEventArgs } from \"igniteui-core/TriangulationStatusEventArgs\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class XamGeographicMap extends SeriesViewer implements IMapRenderDeferralHandler {\r\n\tstatic $t: Type = markType(XamGeographicMap, 'XamGeographicMap', (<any>SeriesViewer).$, [IMapRenderDeferralHandler_$type]);\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.us = SphericalMercatorVerticalScaler.am(XamGeographicMap.v4.bottom) - SphericalMercatorVerticalScaler.am(XamGeographicMap.v4.top);\r\n\t\tthis.ab = (<any>XamGeographicMap).$;\r\n\t\tthis.backgroundContent = new OpenStreetMapImagery();\r\n\t\tlet a = ((() => {\r\n\t\t\tlet $ret = new NumericXAxis();\r\n\t\t\t$ret.bi = this;\r\n\t\t\treturn $ret;\r\n\t\t})());\r\n\t\ta.cf = true;\r\n\t\tthis.t7 = a;\r\n\t\tthis.t7.nl = new SphericalMercatorHorizontalScaler();\r\n\t\tlet b = ((() => {\r\n\t\t\tlet $ret = new NumericYAxis();\r\n\t\t\t$ret.bi = this;\r\n\t\t\treturn $ret;\r\n\t\t})());\r\n\t\tb.cf = true;\r\n\t\tthis.t9 = b;\r\n\t\tthis.t9.nl = new SphericalMercatorVerticalScaler();\r\n\t\tthis.ve();\r\n\t\tthis.vl();\r\n\t\tthis.mb();\r\n\t}\r\n\tprivate uw: DomRenderer = null;\r\n\tprovideContainer(a: any): void {\r\n\t\tsuper.provideContainer(a);\r\n\t\tthis.t7.provideRenderer(<DomRenderer><any>a);\r\n\t\tthis.t9.provideRenderer(<DomRenderer><any>a);\r\n\t}\r\n\tmb(): void {\r\n\t\tsuper.mb();\r\n\t\tthis.uj.fv(this.gg);\r\n\t}\r\n\tet(): boolean {\r\n\t\treturn this.up;\r\n\t}\r\n\teu(): boolean {\r\n\t\treturn this.up;\r\n\t}\r\n\tup: boolean;\r\n\tstatic uh: MapResizeBehavior = 0;\r\n\tui: MapResizeBehavior;\r\n\tul: boolean = false;\r\n\tum: boolean;\r\n\tprotected ug(): MapBackgroundTilingMode {\r\n\t\tif (this.ue == 0) {\r\n\t\t\tif (this.ul) {\r\n\t\t\t\treturn 2;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn 1;\r\n\t}\r\n\tprivate ud: MapBackgroundTilingMode = 1;\r\n\tget uf(): MapBackgroundTilingMode {\r\n\t\treturn this.ud;\r\n\t}\r\n\tset uf(a: MapBackgroundTilingMode) {\r\n\t\tthis.ud = a;\r\n\t}\r\n\tue: MapBackgroundTilingMode;\r\n\tstatic v4: Rect = new Rect(2, <Point>{ $type: Point_$type, x: -180, y: -85.05112878 }, <Point>{ $type: Point_$type, x: 180, y: 85.05112878 });\r\n\tus: number = 0;\r\n\tuo: boolean;\r\n\tun: boolean;\r\n\twk: Rect;\r\n\tprivate v3: Rect = null;\r\n\tget v8(): Rect {\r\n\t\treturn this.v3;\r\n\t}\r\n\tset v8(a: Rect) {\r\n\t\tlet b: boolean = Rect.l_op_Inequality(this.v3, a);\r\n\t\tif (b) {\r\n\t\t\tlet c: any = this.v3;\r\n\t\t\tthis.v3 = a;\r\n\t\t\tthis.oj(\"ActualWorldRect\", c, a);\r\n\t\t}\r\n\t}\r\n\twc(): Rect {\r\n\t\treturn this.v8;\r\n\t}\r\n\tprivate ve(): void {\r\n\t\tif (this.wk.isEmpty) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.v8 = this.wi(this.wk, this.cd == 1);\r\n\t}\r\n\tprivate wi(a: Rect, b: boolean): Rect {\r\n\t\tlet c = a.top;\r\n\t\tlet d = a.left;\r\n\t\tlet e = a.width;\r\n\t\tlet f = a.height;\r\n\t\tlet g = SphericalMercatorVerticalScaler.am(a.bottom);\r\n\t\tlet h = SphericalMercatorVerticalScaler.am(a.top);\r\n\t\tlet i = g - h;\r\n\t\tlet j = a.width / XamGeographicMap.v4.width;\r\n\t\tlet k = SphericalMercatorVerticalScaler.am(XamGeographicMap.v4.top);\r\n\t\tlet l = i / j;\r\n\t\tif (i / j > this.us) {\r\n\t\t\tlet m = i / this.us;\r\n\t\t\tlet n = m - j;\r\n\t\t\td = d - (n / 2) * XamGeographicMap.v4.width;\r\n\t\t\te = m * XamGeographicMap.v4.width;\r\n\t\t\tif (b) {\r\n\t\t\t\tif (d < XamGeographicMap.v4.left) {\r\n\t\t\t\t\td += (XamGeographicMap.v4.left - d);\r\n\t\t\t\t} else if ((d + e) > XamGeographicMap.v4.right) {\r\n\t\t\t\t\td -= ((d + e) - XamGeographicMap.v4.right);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else if (i / j < this.us) {\r\n\t\t\tlet o = this.us * j;\r\n\t\t\tlet p = o - i;\r\n\t\t\tlet q = h - (p / 2);\r\n\t\t\tlet r = g + (p / 2);\r\n\t\t\tif (b) {\r\n\t\t\t\tif (q < k) {\r\n\t\t\t\t\tq += (k - q);\r\n\t\t\t\t\tr += (k - q);\r\n\t\t\t\t} else if (r > (k + this.us)) {\r\n\t\t\t\t\tq -= ((r) - (k + this.us));\r\n\t\t\t\t\tr -= ((r) - (k + this.us));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tc = SphericalMercatorVerticalScaler.aq(q);\r\n\t\t\tf = SphericalMercatorVerticalScaler.aq(r) - c;\r\n\t\t}\r\n\t\tlet s = new Rect(0, d, c, e, f);\r\n\t\treturn s;\r\n\t}\r\n\tget backgroundContent(): GeographicMapImagery {\r\n\t\treturn this.ua;\r\n\t}\r\n\tset backgroundContent(a: GeographicMapImagery) {\r\n\t\tlet b: boolean = a != this.backgroundContent;\r\n\t\tif (b) {\r\n\t\t\tlet c: any = this.backgroundContent;\r\n\t\t\tthis.ua = a;\r\n\t\t\tthis.oj(\"BackgroundContent\", c, a);\r\n\t\t}\r\n\t}\r\n\tprivate ua: GeographicMapImagery = null;\r\n\tget t7(): NumericXAxis {\r\n\t\treturn this.t6;\r\n\t}\r\n\tset t7(a: NumericXAxis) {\r\n\t\tlet b: boolean = a != this.t7;\r\n\t\tif (b) {\r\n\t\t\tlet c: any = this.t7;\r\n\t\t\tthis.t6 = a;\r\n\t\t\tthis.oj(\"XAxis\", c, a);\r\n\t\t}\r\n\t}\r\n\tprivate t6: NumericXAxis = null;\r\n\tget t9(): NumericYAxis {\r\n\t\treturn this.t8;\r\n\t}\r\n\tset t9(a: NumericYAxis) {\r\n\t\tlet b: boolean = a != this.t9;\r\n\t\tif (b) {\r\n\t\t\tlet c: any = this.t9;\r\n\t\t\tthis.t8 = a;\r\n\t\t\tthis.oj(\"YAxis\", c, a);\r\n\t\t}\r\n\t}\r\n\tprivate t8: NumericYAxis = null;\r\n\tuc: GeographicMapImagery = null;\r\n\tprivate static v7: Rect = new Rect(0, 0, 0, 1, 1);\r\n\tgetZoomRectFromGeoRect(a: Rect): Rect {\r\n\t\treturn this.getZoomFromGeographicRect(a);\r\n\t}\r\n\tvo(a: Rect): void {\r\n\t\tthis.t0 = a;\r\n\t}\r\n\tvn(a: Rect): void {\r\n\t\tthis.wk = a;\r\n\t}\r\n\tgetZoomFromGeographicRect(a: Rect): Rect {\r\n\t\treturn this.wa(a, true, 0);\r\n\t}\r\n\tv9(a: Rect, b: number): Rect {\r\n\t\treturn this.wa(a, false, b);\r\n\t}\r\n\tprivate wa(a: Rect, b: boolean, c: number): Rect {\r\n\t\tlet d = a;\r\n\t\tif (b) {\r\n\t\t\td = this.wi(a, false);\r\n\t\t}\r\n\t\tlet e = this.t7;\r\n\t\tlet f = this.t9;\r\n\t\tlet g: ScalerParams = new ScalerParams(1, XamGeographicMap.v7, this.tz, e.ch);\r\n\t\tg.c = this.to;\r\n\t\tlet h: ScalerParams = new ScalerParams(1, XamGeographicMap.v7, this.tz, f.ch);\r\n\t\th.c = this.to;\r\n\t\tlet i = this.t7.ej(d.left, g);\r\n\t\tlet j = this.t7.ej(d.right, g);\r\n\t\tlet k = this.t9.ej(d.top, h);\r\n\t\tlet l = this.t9.ej(d.bottom, h);\r\n\t\tlet m = (i - c) / this.tz.width;\r\n\t\tlet n = (l - c) / this.tz.height;\r\n\t\tlet o = (j - i + (c * 2)) / this.tz.width;\r\n\t\tlet p = (k - l + (c * 2)) / this.tz.height;\r\n\t\tlet q: Rect = new Rect(0, m, n, o, p);\r\n\t\tq.intersect(XamGeographicMap.v7);\r\n\t\tif (q.isEmpty) {\r\n\t\t\tq = XamGeographicMap.v7;\r\n\t\t}\r\n\t\treturn q;\r\n\t}\r\n\tgetZoomFromGeographicPoints(a: Point, b: Point): Rect {\r\n\t\tlet c = a.x;\r\n\t\tlet d = b.y;\r\n\t\tlet e = b.x - a.x;\r\n\t\tlet f = a.y - b.y;\r\n\t\tif (e < 0 || f < 0) {\r\n\t\t\treturn XamGeographicMap.v7;\r\n\t\t} else {\r\n\t\t\tlet g: Rect = new Rect(0, c, d, e, f);\r\n\t\t\treturn this.getZoomFromGeographicRect(g);\r\n\t\t}\r\n\t}\r\n\twe(a: Rect): Rect {\r\n\t\tlet b = this.t7;\r\n\t\tlet c = this.t9;\r\n\t\tlet d: ScalerParams = new ScalerParams(1, a, this.tz, b.ch);\r\n\t\td.c = this.to;\r\n\t\tlet e: ScalerParams = new ScalerParams(1, a, this.tz, c.ch);\r\n\t\te.c = this.to;\r\n\t\tlet f = this.tn;\r\n\t\tlet g = b.em(f.left, d);\r\n\t\tlet h = c.em(f.top, e);\r\n\t\tlet i = b.em(f.right, d);\r\n\t\tlet j = c.em(f.bottom, e);\r\n\t\tlet k = i - g;\r\n\t\tlet l = h - j;\r\n\t\tlet m: Rect = new Rect(0, g, j, k, l);\r\n\t\tif (this.cd == 1) {\r\n\t\t\tm.intersect(XamGeographicMap.v4);\r\n\t\t\tif (m.isEmpty) {\r\n\t\t\t\tm = XamGeographicMap.v4;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn m;\r\n\t}\r\n\tv0(a: Point): Point {\r\n\t\tlet b = this.t7.l8(a.x);\r\n\t\tlet c = this.t9.l8(a.y);\r\n\t\treturn <Point>{ $type: Point_$type, x: b, y: c };\r\n\t}\r\n\tv1(a: Point): Point {\r\n\t\tlet b = this.t7.e4(a.x);\r\n\t\tlet c = this.t9.e4(a.y);\r\n\t\treturn <Point>{ $type: Point_$type, x: b, y: c };\r\n\t}\r\n\tv2(a: Point): Point {\r\n\t\treturn this.v1(a);\r\n\t}\r\n\tvb(): void {\r\n\t\tlet a = typeCast<GeographicMapImagery>((<any>GeographicMapImagery).$, this.backgroundContent);\r\n\t\tif (a != null) {\r\n\t\t\ta.clearTileCache();\r\n\t\t}\r\n\t}\r\n\tvh(a: Brush): void {\r\n\t}\r\n\tfi(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tvj(): void {\r\n\t\tthis.uj.ee();\r\n\t\tfor (let a of fromEnum<Series>(this.series)) {\r\n\t\t\ta.mx();\r\n\t\t}\r\n\t}\r\n\tprotected vz: Point = <Point>{ $type: Point_$type, x: NaN, y: NaN };\r\n\tprotected vm(): void {\r\n\t\tif (this.ui == 2) {\r\n\t\t\tif (!this.tz.isEmpty && this.tz.width > 0 && this.tz.height > 0) {\r\n\t\t\t\tlet a: number = this.t7.l8(this.tz.left + (this.tz.width / 2));\r\n\t\t\t\tlet b: number = this.t9.l8(this.tz.top + (this.tz.height / 2));\r\n\t\t\t\tthis.vz = <Point>{ $type: Point_$type, x: a, y: b };\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (!this.tz.isEmpty && this.tz.width > 0 && this.tz.height > 0) {\r\n\t\t\t\tlet c: number = this.t7.l8(this.tz.left);\r\n\t\t\t\tlet d: number = this.t9.l8(this.tz.top);\r\n\t\t\t\tthis.vz = <Point>{ $type: Point_$type, x: c, y: d };\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tprotected vi(): void {\r\n\t\tif (isNaN_(this.vz.x) || isNaN_(this.vz.y)) {\r\n\t\t\tthis.vm();\r\n\t\t}\r\n\t\tlet a: number = this.vz.x;\r\n\t\tlet b: number = this.vz.y;\r\n\t\tif (!isNaN_(a) && !isNaN_(b)) {\r\n\t\t\tlet c: number = this.tk.left;\r\n\t\t\tlet d: number = this.tk.top;\r\n\t\t\tlet e: number = this.tk.width;\r\n\t\t\tlet f: number = this.tk.height;\r\n\t\t\tif (e > this.v6.width) {\r\n\t\t\t} else {\r\n\t\t\t\tlet g: ScalerParams = new ScalerParams(1, XamGeographicMap.v7, this.tz, this.t7.ch);\r\n\t\t\t\tg.c = this.to;\r\n\t\t\t\tlet h: number = this.t7.ej(a, g);\r\n\t\t\t\tif (this.ui == 2) {\r\n\t\t\t\t\tlet i = h / this.tz.width;\r\n\t\t\t\t\tc = i - (e / 2);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tc = h / this.tz.width;\r\n\t\t\t\t}\r\n\t\t\t\tif (c + e > this.v6.right) {\r\n\t\t\t\t\tc = this.v6.right - e;\r\n\t\t\t\t} else if (c < this.v6.left) {\r\n\t\t\t\t\tc = this.v6.left;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (f > this.v6.height) {\r\n\t\t\t} else {\r\n\t\t\t\tlet j: ScalerParams = new ScalerParams(1, XamGeographicMap.v7, this.tz, this.t9.ch);\r\n\t\t\t\tj.c = this.to;\r\n\t\t\t\tlet k: number = this.t9.ej(b, j);\r\n\t\t\t\tif (this.ui == 2) {\r\n\t\t\t\t\tlet l = k / this.tz.height;\r\n\t\t\t\t\td = l - (f / 2);\r\n\t\t\t\t} else {\r\n\t\t\t\t\td = k / this.tz.height;\r\n\t\t\t\t}\r\n\t\t\t\tif (d + f > this.v6.bottom) {\r\n\t\t\t\t\td = this.v6.bottom - f;\r\n\t\t\t\t} else if (d < this.v6.top) {\r\n\t\t\t\t\td = this.v6.top;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.ps(new Rect(0, c, d, e, f), false);\r\n\t\t}\r\n\t}\r\n\tprotected get_el(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tprotected v6: Rect = null;\r\n\tprotected tl(): Rect {\r\n\t\tlet a: Rect = super.tl();\r\n\t\tif (this.t7 == null || this.t9 == null) {\r\n\t\t\treturn a;\r\n\t\t}\r\n\t\tthis.tv();\r\n\t\tlet b: number = a.left;\r\n\t\tlet c: number = a.top;\r\n\t\tif (this.cd == 1) {\r\n\t\t\tif (this.t0.width > this.v6.width) {\r\n\t\t\t\tb = 0.5 - (this.t0.width / 2);\r\n\t\t\t} else if (b + a.width > this.v6.right) {\r\n\t\t\t\tb = this.v6.right - this.t0.width;\r\n\t\t\t} else if (b < this.v6.left) {\r\n\t\t\t\tb = this.v6.left;\r\n\t\t\t}\r\n\t\t\tif (this.t0.height > this.v6.height) {\r\n\t\t\t\tc = 0.5 - (this.t0.height / 2);\r\n\t\t\t} else if (c + this.t0.height > this.v6.bottom) {\r\n\t\t\t\tc = this.v6.bottom - this.t0.height;\r\n\t\t\t} else if (c < this.v6.top) {\r\n\t\t\t\tc = this.v6.top;\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet d: boolean = false;\r\n\t\tif (!this.uo && this.cd == 2 && this.ul) {\r\n\t\t\tif (b > 1) {\r\n\t\t\t\tb = (b - Math.floor(b)) + 1;\r\n\t\t\t}\r\n\t\t\tif (b < 0) {\r\n\t\t\t\tb = 0 - (Math.ceil(b) - b);\r\n\t\t\t}\r\n\t\t\tif ((a.right - this.v6.right) > 0 && ((a.right - this.v6.right) / a.width) > 0.8) {\r\n\t\t\t\tb = this.v6.left - (a.width - (a.right - this.v6.right));\r\n\t\t\t\td = true;\r\n\t\t\t} else if (a.left < this.v6.left && (Math.abs(a.left - this.v6.left) / a.width) > 0.8) {\r\n\t\t\t\tb = this.v6.right - (Math.abs(a.left - this.v6.left));\r\n\t\t\t\td = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet e = new Rect(0, b, c, a.width, a.height);\r\n\t\tif (this.uo) {\r\n\t\t\tlet f = this.v9(this.wk, 1);\r\n\t\t\tf = this.wb(f);\r\n\t\t\tlet g = e.left + e.width / 2;\r\n\t\t\tlet h = e.top + e.height / 2;\r\n\t\t\tif (e.width > f.width) {\r\n\t\t\t\tlet i = e.height / e.width;\r\n\t\t\t\tlet j = f.width;\r\n\t\t\t\tlet k = i * j;\r\n\t\t\t\te = new Rect(0, g - j / 2, h - k / 2, j, k);\r\n\t\t\t\td = true;\r\n\t\t\t}\r\n\t\t\tif (e.height > f.height) {\r\n\t\t\t\tlet l = e.width / e.height;\r\n\t\t\t\tlet m = f.height;\r\n\t\t\t\tlet n = l * m;\r\n\t\t\t\te = new Rect(0, g - n / 2, h - m / 2, n, m);\r\n\t\t\t\td = true;\r\n\t\t\t}\r\n\t\t\tif (e.left < f.left) {\r\n\t\t\t\te = new Rect(0, f.left, e.top, e.width, e.height);\r\n\t\t\t\td = true;\r\n\t\t\t}\r\n\t\t\tif (e.top < f.top) {\r\n\t\t\t\te = new Rect(0, e.left, f.top, e.width, e.height);\r\n\t\t\t\td = true;\r\n\t\t\t}\r\n\t\t\tif (e.right > f.right) {\r\n\t\t\t\te = new Rect(0, f.right - e.width, e.top, e.width, e.height);\r\n\t\t\t\td = true;\r\n\t\t\t}\r\n\t\t\tif (e.bottom > f.bottom) {\r\n\t\t\t\te = new Rect(0, e.left, f.bottom - e.height, e.width, e.height);\r\n\t\t\t\td = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (d) {\r\n\t\t\tthis.d8 = true;\r\n\t\t\tthis.t0 = e;\r\n\t\t\tthis.d8 = false;\r\n\t\t}\r\n\t\treturn e;\r\n\t}\r\n\tlm(a: Rect, b: ScalerParams): Tuple$2<boolean, number> {\r\n\t\tlet c: boolean = true;\r\n\t\tlet d: boolean = true;\r\n\t\tlet e: number = 0;\r\n\t\tlet f = this.tv();\r\n\t\tlet g: number = 0;\r\n\t\tlet h: number = 0;\r\n\t\tif ((a.right - f.right) > 0) {\r\n\t\t\tg = ((a.right - f.right) / a.width);\r\n\t\t}\r\n\t\tif (a.left < f.left) {\r\n\t\t\th = (Math.abs(a.left - f.left) / a.width);\r\n\t\t}\r\n\t\tif (h == 0 && g == 0) {\r\n\t\t\tc = false;\r\n\t\t}\r\n\t\tif (h > g) {\r\n\t\t\td = false;\r\n\t\t}\r\n\t\tif (c) {\r\n\t\t\tif (d) {\r\n\t\t\t\tlet i = this.t6.ej(-180, b);\r\n\t\t\t\tlet j = this.t6.ej(180, b);\r\n\t\t\t\te = j - i;\r\n\t\t\t} else {\r\n\t\t\t\tlet k = this.t6.ej(-180, b);\r\n\t\t\t\tlet l = this.t6.ej(180, b);\r\n\t\t\t\te = k - l;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn new Tuple$2<boolean, number>(Boolean_$type, Number_$type, c, e);\r\n\t}\r\n\ttv(): Rect {\r\n\t\tlet a: ScalerParams = new ScalerParams(1, XamGeographicMap.v7, this.tz, this.t7.ch);\r\n\t\ta.c = this.to;\r\n\t\tlet b: ScalerParams = new ScalerParams(1, XamGeographicMap.v7, this.tz, this.t9.ch);\r\n\t\tb.c = this.to;\r\n\t\tlet c: number = this.t7.ej(XamGeographicMap.v4.left, a);\r\n\t\tlet d: number = this.t7.ej(XamGeographicMap.v4.right, a);\r\n\t\tlet e: number = this.t9.ej(XamGeographicMap.v4.top, b);\r\n\t\tlet f: number = this.t9.ej(XamGeographicMap.v4.bottom, b);\r\n\t\tthis.v6 = new Rect(0, c / this.tz.width, f / this.tz.height, (d - c) / this.tz.width, (e - f) / this.tz.height);\r\n\t\treturn this.v6;\r\n\t}\r\n\tprivate wb(a: Rect): Rect {\r\n\t\tlet b: number = this.gk;\r\n\t\tlet c: number = 0.5 * (a.left + a.right);\r\n\t\tlet d: number = 0.5 * (a.top + a.bottom);\r\n\t\tlet e: number = a.width;\r\n\t\tlet f: number = a.height;\r\n\t\tlet g: number = MathUtil.d(a.width, b, 1);\r\n\t\tlet h: number = MathUtil.d(a.height, b, 1);\r\n\t\tlet i: Rect = this.tz;\r\n\t\tlet j: number = i.width / i.height;\r\n\t\tlet k: number = g * i.width;\r\n\t\tlet l: number = h * i.height;\r\n\t\tlet m: number = k / l;\r\n\t\tif (m != j) {\r\n\t\t\tif (l * j > k) {\r\n\t\t\t\tk = l * j;\r\n\t\t\t\tg = k / i.width;\r\n\t\t\t} else {\r\n\t\t\t\tl = k / j;\r\n\t\t\t\th = l / i.height;\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet n: boolean = g != e;\r\n\t\tlet o: boolean = h != f;\r\n\t\tlet p: number = n ? c - 0.5 * g : a.left;\r\n\t\tlet q: number = o ? d - 0.5 * h : a.top;\r\n\t\tlet r: number = n ? c + 0.5 * g : a.right;\r\n\t\tlet s: number = o ? d + 0.5 * h : a.bottom;\r\n\t\tif (p < 0) {\r\n\t\t\tp = 0;\r\n\t\t\tr = p + g;\r\n\t\t}\r\n\t\tif (r > 1) {\r\n\t\t\tr = 1;\r\n\t\t\tp = r - g;\r\n\t\t}\r\n\t\tif (q < 0) {\r\n\t\t\tq = 0;\r\n\t\t\ts = q + h;\r\n\t\t}\r\n\t\tif (s > 1) {\r\n\t\t\ts = 1;\r\n\t\t\tq = s - h;\r\n\t\t}\r\n\t\treturn new Rect(0, p, q, r - p, s - q);\r\n\t}\r\n\tprotected tm(a: Rect): Rect {\r\n\t\tsuper.tm(this.tz);\r\n\t\tif (a.isEmpty) {\r\n\t\t\treturn Rect.empty;\r\n\t\t}\r\n\t\tlet b: Rect;\r\n\t\tif (a.width > a.height) {\r\n\t\t\tlet c: number = intDivide(<number>truncate((a.width - a.height)), 2);\r\n\t\t\tb = new Rect(0, a.left + c, a.top, a.height, a.height);\r\n\t\t} else {\r\n\t\t\tlet d: number = intDivide(<number>truncate((a.height - a.width)), 2);\r\n\t\t\tb = new Rect(0, a.left, a.top + d, a.width, a.width);\r\n\t\t}\r\n\t\treturn b;\r\n\t}\r\n\twd(a: Rect): Rect {\r\n\t\treturn this.tm(a);\r\n\t}\r\n\tprotected ct(): SeriesViewerView {\r\n\t\treturn new XamGeographicMapView(this);\r\n\t}\r\n\tprivate vd(a: Axis): void {\r\n\t\tif (a != null) {\r\n\t\t\ta.bi = this;\r\n\t\t}\r\n\t}\r\n\tprotected n2(a: SeriesViewerView): void {\r\n\t\tsuper.n2(a);\r\n\t\tthis.uj = <XamGeographicMapView>a;\r\n\t}\r\n\tod(a: Rect, b: Rect): void {\r\n\t\tsuper.od(a, b);\r\n\t\tthis.pf(this.t7);\r\n\t\tthis.pf(this.t9);\r\n\t\tif (Rect.l_op_Inequality(a, b)) {\r\n\t\t\tthis.vi();\r\n\t\t}\r\n\t\tif (this.uo) {\r\n\t\t\tthis.tk = this.tl();\r\n\t\t}\r\n\t\tthis.vp();\r\n\t}\r\n\tuu: number;\r\n\tprivate ur: number = 1;\r\n\tget ut(): number {\r\n\t\treturn this.ur;\r\n\t}\r\n\tset ut(a: number) {\r\n\t\tlet b = this.ur;\r\n\t\tthis.ur = a;\r\n\t\tthis.oj(\"ActualWindowScale\", b, this.ur);\r\n\t}\r\n\tgq(): number {\r\n\t\treturn this.ut;\r\n\t}\r\n\tgr(): number {\r\n\t\treturn this.ut;\r\n\t}\r\n\tprotected pe(): void {\r\n\t\tsuper.pe();\r\n\t\tlet a = Math.min(this.tk.width, this.tk.height);\r\n\t\tthis.ut = a;\r\n\t}\r\n\tfa(): boolean {\r\n\t\treturn this.ul;\r\n\t}\r\n\tce(): ZoomCoercionMode {\r\n\t\tif (this.cf == 0) {\r\n\t\t\tif (this.um) {\r\n\t\t\t\treturn 2;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this.cf;\r\n\t}\r\n\tprotected oe(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.oe(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase \"ZoomCoercionMode\":\r\n\t\t\tthis.ve();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"WindowRect\":\r\n\t\t\tthis.vm();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase XamGeographicMap.$$p[0]:\r\n\t\t\tthis.uf = this.ug();\r\n\t\t\tif (this.uc != null) {\r\n\t\t\t\tthis.uc.isHorizontalWrappingEnabled = this.uf == 2;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase XamGeographicMap.$$p[1]:\r\n\t\t\tthis.ul = this.um;\r\n\t\t\tthis.uf = this.ug();\r\n\t\t\tthis.cd = this.ce();\r\n\t\t\tif (this.uc != null) {\r\n\t\t\t\tthis.uc.isHorizontalWrappingEnabled = this.uf == 2;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase XamGeographicMap.$$p[4]:\r\n\t\t\tthis.tk = this.tl();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"BackgroundContent\":\r\n\t\t\tif (this.uc != null) {\r\n\t\t\t\tlet e = this.uc;\r\n\t\t\t\te.imageTilesReady = delegateRemove(e.imageTilesReady, runOn(this, this.vf));\r\n\t\t\t\tthis.uc.deferralHandler = null;\r\n\t\t\t}\r\n\t\t\tthis.uc = typeCast<GeographicMapImagery>((<any>GeographicMapImagery).$, this.backgroundContent);\r\n\t\t\tif (this.uc != null) {\r\n\t\t\t\tlet f = this.uc;\r\n\t\t\t\tf.imageTilesReady = delegateCombine(f.imageTilesReady, runOn(this, this.vf));\r\n\t\t\t\tthis.uc.deferralHandler = this;\r\n\t\t\t\tthis.uc.isHorizontalWrappingEnabled = this.uf == 2;\r\n\t\t\t}\r\n\t\t\tthis.uj.fu(typeCast<GeographicMapImagery>((<any>GeographicMapImagery).$, c), typeCast<GeographicMapImagery>((<any>GeographicMapImagery).$, d));\r\n\t\t\tif (this.uc != null) {\r\n\t\t\t\tthis.uc.geographicMap = this;\r\n\t\t\t\tthis.uj.fr(this.tk);\r\n\t\t\t\tthis.uj.fv(this.gg);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"YAxis\":\r\n\r\n\t\t\tcase \"XAxis\":\r\n\t\t\tthis.vk(<Axis>c);\r\n\t\t\tthis.vd(<Axis>d);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase XamGeographicMap.$$p[6]:\r\n\t\t\tif (!this.un) {\r\n\t\t\t\tthis.t0 = XamGeographicMap.v7;\r\n\t\t\t}\r\n\t\t\tthis.ve();\r\n\t\t\tthis.vl();\r\n\t\t\tthis.vm();\r\n\t\t\tthis.tk = this.tl();\r\n\t\t\tthis.uj.fs();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualWindowRect\":\r\n\t\t\tthis.uj.fr(this.tk);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualWorldRect\":\r\n\t\t\tfor (let g of fromEnum<Series>(this.series)) {\r\n\t\t\t\tg.mn(false);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase XamGeographicMap.$$p[5]:\r\n\t\t\tthis.ut = this.uu;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualWindowScale\":\r\n\t\t\tif (!this.fh) {\r\n\t\t\t\tthis.pq(this.gq(), this.gr());\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualPixelScalingRatio\":\r\n\t\t\tthis.uj.fv(this.gg);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"WindowRectMinWidth\":\r\n\r\n\t\t\tcase \"WindowRectMinHeight\":\r\n\t\t\tlet h = <number>d;\r\n\t\t\tif (isNaN_(h) || isInfinity(h)) {\r\n\t\t\t\tthis.gk = 5E-06;\r\n\t\t\t\tthis.gj = 5E-06;\r\n\t\t\t} else {\r\n\t\t\t\tthis.gk = h;\r\n\t\t\t\tthis.gj = h;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase XamGeographicMap.$$p[7]:\r\n\t\t\tthis.pm();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"MarkerAutomaticBehavior\":\r\n\t\t\tfor (let i of fromEnum<Series>(this.series)) {\r\n\t\t\t\ti.lp();\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\timageTilesReady: (sender: any, e: ImageTilesReadyEventArgs) => void = null;\r\n\tprivate vf(a: any, b: EventArgs): void {\r\n\t\tif (this.imageTilesReady != null) {\r\n\t\t\tthis.imageTilesReady(this, new ImageTilesReadyEventArgs());\r\n\t\t}\r\n\t}\r\n\tprivate vk(a: Axis): void {\r\n\t\tif (a != null) {\r\n\t\t\ta.bi = null;\r\n\t\t}\r\n\t}\r\n\tprivate vl(): void {\r\n\t\tif (this.t7 != null) {\r\n\t\t\tthis.t7.l5 = this.v8.left;\r\n\t\t\tthis.t7.l4 = this.v8.right;\r\n\t\t}\r\n\t\tif (this.t9 != null) {\r\n\t\t\tthis.t9.l5 = this.v8.top;\r\n\t\t\tthis.t9.l4 = this.v8.bottom;\r\n\t\t}\r\n\t\tthis.t7.c2(true);\r\n\t\tthis.t9.c2(true);\r\n\t}\r\n\tuj: XamGeographicMapView;\r\n\tprivate uk: FontInfo = null;\r\n\tgetFontInfo(): FontInfo {\r\n\t\tthis.uk = this.uj.fo;\r\n\t\treturn this.uk;\r\n\t}\r\n\tsp(): Brush {\r\n\t\treturn this.uj.fw;\r\n\t}\r\n\tgetFontBrush(): Brush {\r\n\t\treturn this.uj.fx;\r\n\t}\r\n\tprotected o7(a: Series, b: any): void {\r\n\t\tif (typeCast<ItfConverter>((<any>ItfConverter).$, b) !== null) {\r\n\t\t\tlet c = (<ItfConverter>b);\r\n\t\t\tlet d = (<GeographicScatterAreaSeries>a);\r\n\t\t\td.itemsSource = c.triangulationSource.points;\r\n\t\t\td.qn = c.triangulationSource.triangles;\r\n\t\t} else {\r\n\t\t\tsuper.o7(a, b);\r\n\t\t}\r\n\t}\r\n\tregister(a: DependencyObject, b: (arg1: boolean) => void): void {\r\n\t\tthis.ox(a, b);\r\n\t}\r\n\tunRegister(a: DependencyObject): void {\r\n\t\tthis.pd(a);\r\n\t}\r\n\tdeferredRefresh(): void {\r\n\t\tthis.lz();\r\n\t}\r\n\tdeferAction(a: () => void): void {\r\n\t\tif (this.uw != null) {\r\n\t\t\tthis.uw.setTimeout(<() => void>a, 0);\r\n\t\t} else {\r\n\t\t\twindow.setTimeout(<() => void>a, 0);\r\n\t\t}\r\n\t}\r\n\tvc(a: boolean): void {\r\n\t\tthis.pl(a);\r\n\t}\r\n\tux(): any {\r\n\t\tlet a = new ChartVisualData();\r\n\t\tlet b = this.t7.fw();\r\n\t\tlet c = this.t9.fw();\r\n\t\ta.axes.add1(b);\r\n\t\ta.axes.add1(c);\r\n\t\tfor (let d = 0; d < this.series.count; d++) {\r\n\t\t\tlet e = this.series._inner[d].hx();\r\n\t\t\ta.series.add1(e);\r\n\t\t}\r\n\t\ta.name = this.name;\r\n\t\ta.contentArea = RectData.b(this.tz);\r\n\t\ta.centralArea = RectData.b(this.tz);\r\n\t\ta.plotArea = RectData.b(this.tz);\r\n\t\treturn a;\r\n\t}\r\n\ttr(a: Rect, b: Rect, c: Rect): Rect {\r\n\t\treturn a;\r\n\t}\r\n\tvg(): void {\r\n\t}\r\n\tprivate v5: Rect = Rect.empty;\r\n\tprotected get wj(): Rect {\r\n\t\treturn this.v5;\r\n\t}\r\n\tprotected set wj(a: Rect) {\r\n\t\tthis.v5 = a;\r\n\t}\r\n\tvq(a: Rect): void {\r\n\t\tthis.wj = a;\r\n\t\tthis.vp();\r\n\t}\r\n\tprivate vp(): void {\r\n\t\tif (this.uq && !this.wj.isEmpty) {\r\n\t\t\tlet a = this.getZoomFromGeographicRect(this.wj);\r\n\t\t\tthis.wj = Rect.empty;\r\n\t\t\tthis.ps(a, false);\r\n\t\t}\r\n\t}\r\n\tget uq(): boolean {\r\n\t\treturn !this.tz.isEmpty && !this.to.isEmpty;\r\n\t}\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, XamGeographicMap, 'oj', [ 'BackgroundTilingMode:ue:vr', [ MapBackgroundTilingMode_$type, enumGetBox<MapBackgroundTilingMode>(MapBackgroundTilingMode_$type, 0) ], 'IsHorizontalWrappingEnabled:um:vs', [ 0, false ], 'ResizeBehavior:ui:vt', [ MapResizeBehavior_$type, enumGetBox<MapResizeBehavior>(MapResizeBehavior_$type, XamGeographicMap.uh) ], 'SuppressZoomResetOnWorldRectChange:un:vu', [ 0, false ], 'UseWorldRectForZoomBounds:uo:vv', [ 0, false ], 'WindowScale:uu:vw', [ 1, NaN ], 'WorldRect:wk:vx', [ (<any>Rect).$, XamGeographicMap.v4 ], 'Zoomable:up:vy', [ 0, true ] ]);\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport abstract class GeographicMapImagery extends Control implements INotifyPropertyChanged {\r\n\tstatic $t: Type = markType(GeographicMapImagery, 'GeographicMapImagery', (<any>Control).$, [INotifyPropertyChanged_$type]);\r\n\tconstructor(a: XamMultiScaleTileSource) {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>GeographicMapImagery).$;\r\n\t\tthis.ap = a;\r\n\t\tthis.aj = this.ai();\r\n\t\tthis.bb(this.aj);\r\n\t}\r\n\tprotected bb(a: GeographicMapImageryView): void {\r\n\t}\r\n\tprotected ai(): GeographicMapImageryView {\r\n\t\treturn new GeographicMapImageryView(this);\r\n\t}\r\n\tprotected aj: GeographicMapImageryView;\r\n\tprivate ak: IMapRenderDeferralHandler = null;\r\n\tget deferralHandler(): IMapRenderDeferralHandler {\r\n\t\treturn this.ak;\r\n\t}\r\n\tset deferralHandler(a: IMapRenderDeferralHandler) {\r\n\t\tthis.ak = a;\r\n\t\tif (this.ao != null) {\r\n\t\t\tthis.ao.al = a;\r\n\t\t}\r\n\t}\r\n\tprivate a5(a: any, b: EventArgs): void {\r\n\t\tif (this.imageTilesReady != null) {\r\n\t\t\tthis.imageTilesReady(this, new ImageTilesReadyEventArgs());\r\n\t\t}\r\n\t}\r\n\ta9(): void {\r\n\t\tlet a = this.ao;\r\n\t\ta.imageTilesReady = delegateCombine(a.imageTilesReady, runOn(this, this.a5));\r\n\t\tthis.ao.al = this.deferralHandler;\r\n\t\tlet b = this.ao;\r\n\t\tb.imagesChanged = delegateCombine(b.imagesChanged, runOn(this, this.a4));\r\n\t\tlet c = this.ao;\r\n\t\tc.downloadingImage = delegateCombine(c.downloadingImage, runOn(this, this.a3));\r\n\t\tlet d = this.ao;\r\n\t\td.cancellingImage = delegateCombine(d.cancellingImage, runOn(this, this.a2));\r\n\t\tthis.ao.bf = this.referer;\r\n\t\tthis.ao.bj = this.userAgent;\r\n\t\tthis.ao.av = this.isHorizontalWrappingEnabled;\r\n\t}\r\n\tprivate a3(a: any, b: DownloadingMultiScaleImageEventArgs): void {\r\n\t\tif (this.downloadingImage != null) {\r\n\t\t\tthis.downloadingImage(this, b);\r\n\t\t}\r\n\t}\r\n\tprivate a2(a: any, b: CancellingMultiScaleImageEventArgs): void {\r\n\t\tif (this.cancellingImage != null) {\r\n\t\t\tthis.cancellingImage(this, b);\r\n\t\t}\r\n\t}\r\n\tprivate bg(): void {\r\n\t\tif (this.ao != null) {\r\n\t\t\tthis.aj.e();\r\n\t\t}\r\n\t}\r\n\tprotected ba(a: string, b: any, c: any): void {\r\n\t\tswitch (a) {\r\n\t\t\tcase GeographicMapImagery.$$p[3]:\r\n\t\t\tthis.bg();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"GeographicMap\":\r\n\t\t\tthis.aj.e();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMapImagery.$$p[1]:\r\n\t\t\tif (this.ao != null) {\r\n\t\t\t\tthis.ao.bf = this.referer;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMapImagery.$$p[2]:\r\n\t\t\tif (this.ao != null) {\r\n\t\t\t\tthis.ao.bj = this.userAgent;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMapImagery.$$p[0]:\r\n\t\t\tif (this.ao != null) {\r\n\t\t\t\tthis.ao.av = this.isHorizontalWrappingEnabled;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t\tif (this.propertyChanged != null) {\r\n\t\t\tthis.propertyChanged(this, new PropertyChangedEventArgs(a));\r\n\t\t}\r\n\t}\r\n\twindowRect: Rect;\r\n\tget geographicMap(): XamGeographicMap {\r\n\t\treturn <XamGeographicMap>this.c(GeographicMapImagery.geographicMapProperty);\r\n\t}\r\n\tset geographicMap(a: XamGeographicMap) {\r\n\t\tthis.h(GeographicMapImagery.geographicMapProperty, a);\r\n\t}\r\n\tstatic readonly geographicMapProperty: DependencyProperty = DependencyProperty.i(\"GeographicMap\", (<any>XamGeographicMap).$, (<any>GeographicMapImagery).$, new PropertyMetadata(2, null, GeographicMapImagery.a8));\r\n\tprivate static a8(a: DependencyObject, b: DependencyPropertyChangedEventArgs): void {\r\n\t\t(<GeographicMapImagery>a).a7(<XamGeographicMap>b.oldValue, <XamGeographicMap>b.newValue);\r\n\t}\r\n\tprivate a7(a: XamGeographicMap, b: XamGeographicMap): void {\r\n\t\tthis.ba(\"GeographicMap\", a, b);\r\n\t}\r\n\tclearTileCache(): void {\r\n\t\tif (this.ao != null) {\r\n\t\t\tthis.ao.bs(0, 0, 0, 0);\r\n\t\t}\r\n\t}\r\n\timageTilesReady: (sender: any, e: ImageTilesReadyEventArgs) => void = null;\r\n\tprivate an: XamMultiScaleImage = null;\r\n\tget ao(): XamMultiScaleImage {\r\n\t\treturn this.an;\r\n\t}\r\n\tset ao(a: XamMultiScaleImage) {\r\n\t\tthis.an = a;\r\n\t\tif (this.propertyChanged != null) {\r\n\t\t\tthis.propertyChanged(this, new PropertyChangedEventArgs(\"MultiScaleImage\"));\r\n\t\t}\r\n\t}\r\n\tap: XamMultiScaleTileSource = null;\r\n\tpropertyChanged: (sender: any, e: PropertyChangedEventArgs) => void = null;\r\n\tbn(a: Size): Size {\r\n\t\tif (this.geographicMap == null || a.width < 1 || a.height < 1) {\r\n\t\t\treturn a;\r\n\t\t}\r\n\t\tlet b = new Rect(0, 0, 0, a.width, a.height);\r\n\t\tlet c = this.geographicMap.wd(b);\r\n\t\tlet d: Rect = XamGeographicMap.v4;\r\n\t\tlet e: Rect = this.geographicMap.v8;\r\n\t\tlet f: number = Math.min(this.windowRect.height, this.windowRect.width);\r\n\t\tlet g: number = e.width / d.width;\r\n\t\tthis.ao.a5 = (b.width / c.width) * f * g;\r\n\t\tlet h: NumericXAxis = this.geographicMap.t7;\r\n\t\tlet i: NumericYAxis = this.geographicMap.t9;\r\n\t\tlet j: ScalerParams = new ScalerParams(1, this.windowRect, b, h.ch);\r\n\t\tj.c = c;\r\n\t\tlet k: ScalerParams = new ScalerParams(1, this.windowRect, b, i.ch);\r\n\t\tk.c = c;\r\n\t\tlet l: number = h.ej(d.left, j);\r\n\t\tlet m: number = i.ej(d.bottom, k);\r\n\t\tlet n: number = (-l / b.width) * this.ao.a5;\r\n\t\tlet o: number = (-m / b.height) * this.ao.a5 * (b.height / b.width);\r\n\t\tthis.ao.cm = <Point>{ $type: Point_$type, x: n, y: o };\r\n\t\treturn a;\r\n\t}\r\n\tbd(a: RenderingContext): void {\r\n\t\tthis.aj.f(a);\r\n\t}\r\n\tbf(a: Rect): void {\r\n\t\tthis.aj.h(a);\r\n\t}\r\n\tbe(a: DomRenderer): void {\r\n\t\tthis.aj.g(a);\r\n\t}\r\n\timagesChanged: (sender: any, e: ImagesChangedEventArgs) => void = null;\r\n\tprivate a4(a: any, b: EventArgs): void {\r\n\t\tif (this.imagesChanged != null) {\r\n\t\t\tthis.imagesChanged(this, new ImagesChangedEventArgs());\r\n\t\t}\r\n\t}\r\n\ta6(): void {\r\n\t\tthis.aj.e();\r\n\t}\r\n\tbc(a: number): void {\r\n\t\tthis.aj.i(a);\r\n\t}\r\n\tprotected v(): void {\r\n\t\tsuper.v();\r\n\t\tthis.ap.o = this._opacity;\r\n\t}\r\n\tcancellingImage: (sender: any, args: CancellingMultiScaleImageEventArgs) => void = null;\r\n\tdownloadingImage: (sender: any, args: DownloadingMultiScaleImageEventArgs) => void = null;\r\n\treferer: string;\r\n\tisHorizontalWrappingEnabled: boolean;\r\n\tuserAgent: string;\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicMapImagery, 'ba', [ 'IsHorizontalWrappingEnabled', [ 0, false ], 'Referer', [ 2, null ], 'UserAgent', [ 2, null ], 'WindowRect', [ (<any>Rect).$, Rect.empty ] ]);\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicMapImageryView extends Base {\r\n\tstatic $t: Type = markType(GeographicMapImageryView, 'GeographicMapImageryView');\r\n\tconstructor(a: GeographicMapImagery) {\r\n\t\tsuper();\r\n\t\tthis.j = Rect.empty;\r\n\t\tthis.a = a;\r\n\t\tthis.a.ao = new XamMultiScaleImage();\r\n\t\tthis.a.ao.ao = this.a.ap;\r\n\t\tthis.a.a9();\r\n\t}\r\n\tprotected a: GeographicMapImagery = null;\r\n\te(): void {\r\n\t\tif (this.j.isEmpty) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.a.bn(new Size(1, this.j.width, this.j.height));\r\n\t}\r\n\tprotected j: Rect = null;\r\n\tf(a: RenderingContext): void {\r\n\t\tthis.a.ao.b1(a);\r\n\t}\r\n\tprivate d: DomRenderer = null;\r\n\tg(a: DomRenderer): void {\r\n\t\tthis.d = a;\r\n\t\tthis.a.ao.b2(a);\r\n\t}\r\n\th(a: Rect): void {\r\n\t\tthis.j = a;\r\n\t\tthis.a.ao.b3(a);\r\n\t\tthis.a.a6();\r\n\t}\r\n\tprivate b: number = 1;\r\n\tget c(): number {\r\n\t\treturn this.b;\r\n\t}\r\n\ti(a: number): void {\r\n\t\tthis.b = a;\r\n\t\tthis.a.ao.bz(a);\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicXYTriangulatingSeriesView extends HostSeriesView {\r\n\tstatic $t: Type = markType(GeographicXYTriangulatingSeriesView, 'GeographicXYTriangulatingSeriesView', (<any>HostSeriesView).$);\r\n\tconstructor(a: GeographicXYTriangulatingSeries) {\r\n\t\tsuper(a);\r\n\t\tthis.ce = a;\r\n\t}\r\n\tprotected ce: GeographicXYTriangulatingSeries = null;\r\n\tb2(): void {\r\n\t\tsuper.b2();\r\n\t\tlet a = <ScatterTriangulationSeries>this.ce.qe;\r\n\t\ta.re = this.ce.qq;\r\n\t\ta.rm = this.ce.qo;\r\n\t\ta.trianglesSource = this.ce.qn;\r\n\t\ta.q2 = this.ce.qt;\r\n\t\ta.q4 = this.ce.qv;\r\n\t\ta.q6 = this.ce.qx;\r\n\t}\r\n\tch(): void {\r\n\t\tlet a = <ScatterTriangulationSeries>this.ce.qe;\r\n\t\tif (this.ce.ce == null) {\r\n\t\t\ta.qc = null;\r\n\t\t\ta.qd = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\ta.qc = (<XamGeographicMap>this.ce.ce).t7;\r\n\t\ta.qd = (<XamGeographicMap>this.ce.ce).t9;\r\n\t}\r\n\tcg(): void {\r\n\t\t(<ScatterTriangulationSeries>this.ce.qe).re = this.ce.qq;\r\n\t}\r\n\tcf(): void {\r\n\t\t(<ScatterTriangulationSeries>this.ce.qe).rm = this.ce.qo;\r\n\t}\r\n\tci(): void {\r\n\t\t(<ScatterTriangulationSeries>this.ce.qe).trianglesSource = this.ce.qn;\r\n\t}\r\n\tcj(): void {\r\n\t\t(<ScatterTriangulationSeries>this.ce.qe).q2 = this.ce.qt;\r\n\t}\r\n\tck(): void {\r\n\t\t(<ScatterTriangulationSeries>this.ce.qe).q4 = this.ce.qv;\r\n\t}\r\n\tcl(): void {\r\n\t\t(<ScatterTriangulationSeries>this.ce.qe).q6 = this.ce.qx;\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicScatterAreaSeriesView extends GeographicXYTriangulatingSeriesView {\r\n\tstatic $t: Type = markType(GeographicScatterAreaSeriesView, 'GeographicScatterAreaSeriesView', (<any>GeographicXYTriangulatingSeriesView).$);\r\n\tconstructor(a: GeographicScatterAreaSeries) {\r\n\t\tsuper(a);\r\n\t\tthis.cm = a;\r\n\t}\r\n\tprivate cm: GeographicScatterAreaSeries = null;\r\n\tas(): void {\r\n\t\tsuper.as();\r\n\t\tif (!this.q) {\r\n\t\t}\r\n\t}\r\n\tb2(): void {\r\n\t\tsuper.b2();\r\n\t\tif (this.cm.q8 != null) {\r\n\t\t\tthis.cm.q8.sl = this.cm.rc;\r\n\t\t\tthis.cm.q8.r9 = this.cm.q7;\r\n\t\t}\r\n\t}\r\n\tcn(): void {\r\n\t\tif (this.cm.q8 != null) {\r\n\t\t\tthis.cm.q8.sl = this.cm.rc;\r\n\t\t}\r\n\t}\r\n\tco(): void {\r\n\t\tif (this.cm.q8 != null) {\r\n\t\t\tthis.cm.q8.r9 = this.cm.q7;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class XamGeographicMapView extends SeriesViewerView {\r\n\tstatic $t: Type = markType(XamGeographicMapView, 'XamGeographicMapView', (<any>SeriesViewerView).$);\r\n\tconstructor(a: XamGeographicMap) {\r\n\t\tsuper(a);\r\n\t\tthis.fz = Rect.empty;\r\n\t\tthis.fn = a;\r\n\t\tthis.fn.sk = 2;\r\n\t\tthis.fn.hp = 5E-06;\r\n\t}\r\n\tm(a: boolean): InteractionState {\r\n\t\treturn 2;\r\n\t}\r\n\tbk(a: boolean): void {\r\n\t\tthis.j.bw(a);\r\n\t\tthis.fn.vc(a);\r\n\t\tthis.el();\r\n\t}\r\n\tprotected fn: XamGeographicMap = null;\r\n\tprotected get_ap(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\td4(): void {\r\n\t\tlet a: BrushCollection;\r\n\t\tlet b: BrushCollection;\r\n\t\tlet c: Brush;\r\n\t\tlet d: FontInfo;\r\n\t\tlet e: Brush;\r\n\t\tlet f = this.j.a8(a, b, c, d, e);\r\n\t\ta = f.p0;\r\n\t\tb = f.p1;\r\n\t\tc = f.p2;\r\n\t\td = f.p3;\r\n\t\te = f.p4;\r\n\t\tthis.fx = c;\r\n\t\tthis.fo = d;\r\n\t\tthis.fw = e;\r\n\t\tlet g = this.j.e();\r\n\t\tthis.fn.ag = g.a;\r\n\t\tthis.fn.aj = g.f;\r\n\t\tthis.fn.ah = g.b != null ? g.b : new BrushCollection();\r\n\t\tthis.fn.ai = g.c != null ? g.c : new BrushCollection();\r\n\t\tif (this.fn.ah.count == 0) {\r\n\t\t\tfor (let h = 0; h < g.a.count; h++) {\r\n\t\t\t\tthis.fn.ah.add(g.a.item(h));\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (g.c.count == 0) {\r\n\t\t\tfor (let i = 0; i < g.f.count; i++) {\r\n\t\t\t\tthis.fn.ai.add(g.f.item(i));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tdu(a: RenderingContext): void {\r\n\t\tsuper.du(a);\r\n\t\tif (this.fn.backgroundContent != null) {\r\n\t\t\tlet b: GeographicMapImagery = <GeographicMapImagery>this.fn.backgroundContent;\r\n\t\t\tb.be(this.j.ae);\r\n\t\t\tb.bd(a);\r\n\t\t}\r\n\t}\r\n\tprotected fz: Rect = null;\r\n\tprotected dv(a: Rect): void {\r\n\t\tsuper.dv(a);\r\n\t\tthis.fz = a;\r\n\t\tif (this.fn.backgroundContent != null) {\r\n\t\t\tlet b: GeographicMapImagery = <GeographicMapImagery>this.fn.backgroundContent;\r\n\t\t\tb.bf(this.fz);\r\n\t\t}\r\n\t}\r\n\tfy(): Rect {\r\n\t\treturn new Rect(0, 0, 0, this.fz.width, this.fz.height);\r\n\t}\r\n\tfs(): void {\r\n\t\tif (this.fn.backgroundContent != null) {\r\n\t\t\tlet a: GeographicMapImagery = <GeographicMapImagery>this.fn.backgroundContent;\r\n\t\t\ta.a6();\r\n\t\t}\r\n\t}\r\n\tfx: Brush = null;\r\n\tfw: Brush = null;\r\n\tfo: FontInfo = null;\r\n\tfr(a: Rect): void {\r\n\t\tif (this.fn.uc != null) {\r\n\t\t\tthis.fn.uc.windowRect = a;\r\n\t\t}\r\n\t}\r\n\tfu(a: GeographicMapImagery, b: GeographicMapImagery): void {\r\n\t\tif (this.fn.uc != null) {\r\n\t\t\tthis.fn.uc.windowRect = this.fn.tk;\r\n\t\t}\r\n\t\tif (a != null) {\r\n\t\t\tlet c = a.ao;\r\n\t\t\tif (c != null) {\r\n\t\t\t\tthis.fn.al.h.remove(c.ag);\r\n\t\t\t}\r\n\t\t\ta.bd(null);\r\n\t\t\ta.be(null);\r\n\t\t}\r\n\t\tif (b != null) {\r\n\t\t\tlet d = b.ao;\r\n\t\t\tif (d != null) {\r\n\t\t\t\tthis.fn.al.h.add(d.ag);\r\n\t\t\t}\r\n\t\t\tif (!this.fz.isEmpty) {\r\n\t\t\t\tthis.dv(this.fz);\r\n\t\t\t}\r\n\t\t\tif (this.w != null) {\r\n\t\t\t\tthis.du(this.w);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (b == null) {\r\n\t\t\tthis.ft(this.w);\r\n\t\t}\r\n\t}\r\n\tprivate ft(a: RenderingContext): void {\r\n\t\tlet b = this.fn.gg;\r\n\t\tif (b != 1) {\r\n\t\t\ta.aa();\r\n\t\t\ta.ab(b, b);\r\n\t\t}\r\n\t\ta.l(this.fz.left, this.fz.top, this.fz.width, this.fz.height);\r\n\t\tif (b != 1) {\r\n\t\t\ta.z();\r\n\t\t}\r\n\t}\r\n\tprotected d1(): void {\r\n\t\tthis.fd.ad = Defaults.j;\r\n\t\tthis.fe.ad = Defaults.j;\r\n\t\tthis.fd._stroke = Defaults.ae;\r\n\t\tthis.fe._stroke = Defaults.ae;\r\n\t\tsuper.d1();\r\n\t}\r\n\tfv(a: number): void {\r\n\t\tthis.fp = a;\r\n\t\tif (this.fn.backgroundContent != null) {\r\n\t\t\t(<GeographicMapImagery>this.fn.backgroundContent).bc(a);\r\n\t\t}\r\n\t}\r\n\tprivate fp: number = NaN;\r\n\tget fq(): number {\r\n\t\treturn this.fp;\r\n\t}\r\n\tset fq(a: number) {\r\n\t\tthis.fp = a;\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class OpenStreetMapImagery extends GeographicMapImagery {\r\n\tstatic $t: Type = markType(OpenStreetMapImagery, 'OpenStreetMapImagery', (<any>GeographicMapImagery).$);\r\n\tconstructor() {\r\n\t\tsuper(new OpenStreetMapTileSource());\r\n\t}\r\n\tget tilePath(): string {\r\n\t\treturn <string>this.c(OpenStreetMapImagery.tilePathProperty);\r\n\t}\r\n\tset tilePath(a: string) {\r\n\t\tthis.h(OpenStreetMapImagery.tilePathProperty, a);\r\n\t}\r\n\tstatic readonly tilePathProperty: DependencyProperty = DependencyProperty.i(\"TilePath\", String_$type, (<any>OpenStreetMapImagery).$, new PropertyMetadata(2, null, OpenStreetMapImagery.br));\r\n\tprivate static br(a: DependencyObject, b: DependencyPropertyChangedEventArgs): void {\r\n\t\t(<OpenStreetMapImagery>a).bq(\"TilePath\", b.oldValue, b.newValue);\r\n\t}\r\n\tprivate bq(a: string, b: any, c: any): void {\r\n\t\tswitch (a) {\r\n\t\t\tcase \"TilePath\":\r\n\t\t\t(<OpenStreetMapTileSource>this.ap).setTilePathUrl(c == null ? null : <string>c);\r\n\t\t\tthis.aj.e();\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t\tsuper.ba(a, b, c);\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport abstract class GeographicXYTriangulatingSeries extends GeographicMapSeriesHost {\r\n\tstatic $t: Type = markType(GeographicXYTriangulatingSeries, 'GeographicXYTriangulatingSeries', (<any>GeographicMapSeriesHost).$);\r\n\tprotected by(): SeriesView {\r\n\t\treturn new GeographicXYTriangulatingSeriesView(this);\r\n\t}\r\n\tl4(a: SeriesView): void {\r\n\t\tsuper.l4(a);\r\n\t\tthis.qm = <GeographicXYTriangulatingSeriesView>a;\r\n\t}\r\n\tqm: GeographicXYTriangulatingSeriesView;\r\n\tqq: string;\r\n\tqo: string;\r\n\tqn: IEnumerable;\r\n\tqt: string;\r\n\tqv: string;\r\n\tqx: string;\r\n\tprotected l9(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.l9(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase \"SeriesViewer\":\r\n\t\t\tthis.qm.ch();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicXYTriangulatingSeries.$$p[1]:\r\n\t\t\tthis.qm.cg();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicXYTriangulatingSeries.$$p[0]:\r\n\t\t\tthis.qm.cf();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicXYTriangulatingSeries.$$p[2]:\r\n\t\t\tthis.qm.ci();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicXYTriangulatingSeries.$$p[3]:\r\n\t\t\tthis.qm.cj();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicXYTriangulatingSeries.$$p[4]:\r\n\t\t\tthis.qm.ck();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicXYTriangulatingSeries.$$p[5]:\r\n\t\t\tthis.qm.cl();\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicXYTriangulatingSeries, 'raisePropertyChanged', [ 'LatitudeMemberPath:qo:qz', [ 2, \"pointY\" ], 'LongitudeMemberPath:qq:q0', [ 2, \"pointX\" ], 'TrianglesSource:qn:q1', [ IEnumerable_$type, null ], 'TriangleVertexMemberPath1:qt:q2', [ 2, \"v1\" ], 'TriangleVertexMemberPath2:qv:q3', [ 2, \"v2\" ], 'TriangleVertexMemberPath3:qx:q4', [ 2, \"v3\" ] ]);\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicScatterAreaSeries extends GeographicXYTriangulatingSeries {\r\n\tstatic $t: Type = markType(GeographicScatterAreaSeries, 'GeographicScatterAreaSeries', (<any>GeographicXYTriangulatingSeries).$);\r\n\tprotected get_df(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>GeographicScatterAreaSeries).$;\r\n\t}\r\n\trc: string;\r\n\tprivate q5: ColorScale = null;\r\n\tget q7(): ColorScale {\r\n\t\treturn this.q5;\r\n\t}\r\n\tset q7(a: ColorScale) {\r\n\t\tlet b: boolean = this.q5 != a;\r\n\t\tif (b) {\r\n\t\t\tlet c: any = this.q5;\r\n\t\t\tif (this.q5 != null) {\r\n\t\t\t\tlet d = this.q5;\r\n\t\t\t\td.propertyChanged = delegateRemove(d.propertyChanged, runOn(this, this.rf));\r\n\t\t\t}\r\n\t\t\tthis.q5 = a;\r\n\t\t\tif (this.q5 != null) {\r\n\t\t\t\tlet e = this.q5;\r\n\t\t\t\te.propertyChanged = delegateCombine(e.propertyChanged, runOn(this, this.rf));\r\n\t\t\t}\r\n\t\t\tthis.raisePropertyChanged(\"ColorScale\", c, this.q5);\r\n\t\t\tif (this.q8 != null) {\r\n\t\t\t\tthis.q8.r9 = a;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tprivate rf(a: any, b: PropertyChangedEventArgs): void {\r\n\t\tthis.ra.co();\r\n\t\tthis.rh();\r\n\t\tthis.mn(false);\r\n\t}\r\n\trh(): void {\r\n\t\tif (this.q8 != null) {\r\n\t\t\tthis.q6 = this.q8.r8;\r\n\t\t}\r\n\t}\r\n\tq6: ColorScale;\r\n\tprotected m1(): void {\r\n\t\tsuper.m1();\r\n\t\tthis.rh();\r\n\t}\r\n\tq8: ScatterAreaSeries;\r\n\tprotected qd(): Series {\r\n\t\tthis.q8 = new ScatterAreaSeries();\r\n\t\tlet a = this.q8;\r\n\t\ta.triangulationStatusChanged = delegateCombine(a.triangulationStatusChanged, runOn(this, this.rg));\r\n\t\treturn this.q8;\r\n\t}\r\n\tprivate rg(a: any, b: TriangulationStatusEventArgs): void {\r\n\t\tif (this.triangulationStatusChanged != null) {\r\n\t\t\tthis.triangulationStatusChanged(this, b);\r\n\t\t}\r\n\t}\r\n\tprotected by(): SeriesView {\r\n\t\treturn new GeographicScatterAreaSeriesView(this);\r\n\t}\r\n\tl4(a: SeriesView): void {\r\n\t\tsuper.l4(a);\r\n\t\tthis.ra = <GeographicScatterAreaSeriesView>a;\r\n\t}\r\n\tra: GeographicScatterAreaSeriesView;\r\n\tprotected l9(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.l9(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase GeographicScatterAreaSeries.$$p[1]:\r\n\t\t\tthis.ra.cn();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ColorScale\":\r\n\t\t\tthis.ra.co();\r\n\t\t\tthis.rh();\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\ttriangulationStatusChanged: (sender: any, args: TriangulationStatusEventArgs) => void = null;\r\n\tprotected get_e7(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tprotected set_e7(a: boolean): void {\r\n\t\tsuper.set_e7(a);\r\n\t}\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicScatterAreaSeries, 'raisePropertyChanged', [ 'ActualColorScale:q6:ri', [ (<any>ColorScale).$, null ], 'ColorMemberPath:rc:rj', [ 2, \"value\" ] ]);\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Enum, ValueType, markEnum, Type } from \"igniteui-core/type\";\r\n\r\n/**\r\n * Describes available map styles for the Bing Maps imagery.\r\n */\r\nexport enum BingMapsImageryStyle {\r\n\t/**\r\n\t * Specifies the Aerial map style without road or labels overlay.\r\n\t */\r\n\tAerial = 0,\r\n\t/**\r\n\t * Specifies the Aerial map style with road and labels overlay.\r\n\t */\r\n\tAerialWithLabels = 1,\r\n\t/**\r\n\t * Specifies the Roads map style without aerial overlay.\r\n\t */\r\n\tRoad = 2,\r\n\t/**\r\n\t * Specifies a dark version of the Roads maps.\r\n\t */\r\n\tCanvasDark = 3,\r\n\t/**\r\n\t * Specifies a lighter version of the Roads maps.\r\n\t */\r\n\tCanvasLight = 4,\r\n\t/**\r\n\t * Specifies a grayscale version of the Roads maps.\r\n\t */\r\n\tCanvasGray = 5\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport let BingMapsImageryStyle_$type = markEnum('BingMapsImageryStyle', 'Aerial,0|AerialWithLabels,1|Road,2|CanvasDark,3|CanvasLight,4|CanvasGray,5');\r\n\r\n\r\n","import { IgCollection } from 'igniteui-core/IgCollection';\r\nimport { SyncableObservableCollection$2 } from 'igniteui-core/SyncableObservableCollection$2';\r\nimport { SyncableObservableCollection$1 } from 'igniteui-core/SyncableObservableCollection$1';\r\nimport { markType } from 'igniteui-core/type';\r\n\r\n\r\nimport { String_$type } from 'igniteui-core/type';\r\n\r\n\r\nexport class IgcSubDomainsCollection extends IgCollection<string, string> {\r\n    constructor(list?: string[]) {\r\n        super();\r\n        \r\n   \r\n        if (list) {\r\n            for (let i = 0; i < list.length; i++) {\r\n                this.add(list[i]);\r\n            }\r\n        }\r\n    }\r\n\r\n    \r\n    \r\n    protected _createInnerColl(): SyncableObservableCollection$2<string, string> {\r\n        \r\n \r\n        let coll = new SyncableObservableCollection$2<string, string>(String_$type, String_$type, 0);\r\n        coll.compare = (ext, int) => { \r\n            let comp: any = ext;\r\n            if (comp.equals) {\r\n                return comp.equals(int);\r\n            }\r\n            return comp === int;\r\n        };\r\n        coll.createTo = (ext) => {\r\n            return ext;\r\n        }\r\n        coll.createFrom = (int) => {\r\n            return int;\r\n        }\r\n        return coll;\r\n    } \r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { ObservableCollection$1 } from \"igniteui-core/ObservableCollection$1\";\r\nimport { IEnumerable$1, IEnumerable$1_$type, Base, String_$type, Type, markType } from \"igniteui-core/type\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class SubDomainsCollection extends ObservableCollection$1<string> {\r\n\tstatic $t: Type = markType(SubDomainsCollection, 'SubDomainsCollection', (<any>ObservableCollection$1).$.specialize(String_$type));\r\n\tconstructor(a: number);\r\n\tconstructor(a: number, b: IEnumerable$1<string>);\r\n\tconstructor(a: number, ..._rest: any[]);\r\n\tconstructor(a: number, ..._rest: any[]) {\r\n\t\ta = (a == void 0) ? 0 : a;\r\n\t\tswitch (a) {\r\n\t\t\tcase 0:\r\n\t\t\t{\r\n\t\t\t\tsuper(String_$type, 0);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 1:\r\n\t\t\t{\r\n\t\t\t\tlet c: IEnumerable$1<string> = <IEnumerable$1<string>>_rest[0];\r\n\t\t\t\tsuper(String_$type, 1, c);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { GeographicMapImageryView } from \"./GeographicMapImageryView\";\r\nimport { SubDomainsCollection } from \"./SubDomainsCollection\";\r\nimport { GeographicMapImagery } from \"./GeographicMapImagery\";\r\nimport { BingMapsTileSource } from \"igniteui-core/BingMapsTileSource\";\r\nimport { Base, Type, markType, Boolean_$type, typeCast, String_$type, enumGetBox, EnumUtil, runOn, delegateRemove, delegateCombine, markDep } from \"igniteui-core/type\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { BingMapsImageryStyle, BingMapsImageryStyle_$type } from \"./BingMapsImageryStyle\";\r\nimport { List$1 } from \"igniteui-core/List$1\";\r\nimport { NotifyCollectionChangedEventArgs } from \"igniteui-core/NotifyCollectionChangedEventArgs\";\r\nimport { ObservableCollection$1 } from \"igniteui-core/ObservableCollection$1\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\nimport { UriKind } from \"igniteui-core/UriKind\";\r\nimport { HttpRequestUtil } from \"igniteui-core/httpRequestUtil\";\r\nimport { Uri } from \"igniteui-core/Uri\";\r\nimport { stringEmpty, stringIsNullOrEmpty } from \"igniteui-core/string\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class BingMapsMapImageryView extends GeographicMapImageryView {\r\n\tstatic $t: Type = markType(BingMapsMapImageryView, 'BingMapsMapImageryView', (<any>GeographicMapImageryView).$);\r\n\tconstructor(a: BingMapsMapImagery) {\r\n\t\tsuper(a);\r\n\t\tthis.k = a;\r\n\t}\r\n\tprotected k: BingMapsMapImagery;\r\n\tm(): void {\r\n\t\tif (this.k.subDomains == null) {\r\n\t\t\tthis.k.subDomains = new SubDomainsCollection(0);\r\n\t\t}\r\n\t\t(<BingMapsTileSource>this.k.ap).tilePath = this.k.actualTilePath;\r\n\t\t(<BingMapsTileSource>this.k.ap).subDomains = this.k.actualSubDomains;\r\n\t\t(<BingMapsTileSource>this.k.ap).cultureName = this.k.cultureName;\r\n\t}\r\n\to(): void {\r\n\t\t(<BingMapsTileSource>this.k.ap).tilePath = this.k.actualTilePath;\r\n\t}\r\n\tl(): void {\r\n\t\t(<BingMapsTileSource>this.k.ap).cultureName = this.k.cultureName;\r\n\t}\r\n\tn(): void {\r\n\t\t(<BingMapsTileSource>this.k.ap).subDomains = this.k.actualSubDomains;\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class BingMapsMapImagery extends GeographicMapImagery {\r\n\tstatic $t: Type = markType(BingMapsMapImagery, 'BingMapsMapImagery', (<any>GeographicMapImagery).$);\r\n\tprivate _pendingBingRequest_: any = null;\r\n\tprivate static readonly cc: string = \"http://dev.virtualearth.net/REST/v1/Imagery/Metadata/\";\r\n\tconstructor() {\r\n\t\tsuper(new BingMapsTileSource(0));\r\n\t\tthis.getResponseCompleted = this.getResponseCompleted.bind(this);\r\n\t\tthis.bp.m();\r\n\t\tthis.actualBingImageryRestUri = BingMapsMapImagery.cc;\r\n\t}\r\n\tprotected ai(): GeographicMapImageryView {\r\n\t\treturn new BingMapsMapImageryView(this);\r\n\t}\r\n\tprotected bb(a: GeographicMapImageryView): void {\r\n\t\tsuper.bb(a);\r\n\t\tthis.bp = <BingMapsMapImageryView>a;\r\n\t}\r\n\tbp: BingMapsMapImageryView;\r\n\tprivate _isInitialized: boolean = false;\r\n\tget isInitialized(): boolean {\r\n\t\treturn this._isInitialized;\r\n\t}\r\n\tset isInitialized(a: boolean) {\r\n\t\tthis._isInitialized = a;\r\n\t}\r\n\tisDeferredLoad: boolean;\r\n\ttilePath: string;\r\n\tprivate bz: string = null;\r\n\tget actualTilePath(): string {\r\n\t\treturn this.bz;\r\n\t}\r\n\tset actualTilePath(a: string) {\r\n\t\tlet b = this.bz;\r\n\t\tthis.bz = a;\r\n\t\tthis.cm(\"ActualTilePath\", b, this.bz);\r\n\t}\r\n\tsubDomains: SubDomainsCollection;\r\n\tprivate bq: SubDomainsCollection = null;\r\n\tget actualSubDomains(): SubDomainsCollection {\r\n\t\treturn this.bq;\r\n\t}\r\n\tset actualSubDomains(a: SubDomainsCollection) {\r\n\t\tlet b = this.bq;\r\n\t\tthis.bq = a;\r\n\t\tthis.cm(\"ActualSubDomains\", b, this.bq);\r\n\t}\r\n\tprivate b0: string = null;\r\n\tget bingImageryRestUri(): string {\r\n\t\treturn this.b0;\r\n\t}\r\n\tset bingImageryRestUri(a: string) {\r\n\t\tlet b = this.b0;\r\n\t\tthis.b0 = a;\r\n\t\tthis.cm(\"BingImageryRestUri\", b, this.b0);\r\n\t}\r\n\tprivate by: string = null;\r\n\tget actualBingImageryRestUri(): string {\r\n\t\treturn this.by;\r\n\t}\r\n\tset actualBingImageryRestUri(a: string) {\r\n\t\tlet b = this.by;\r\n\t\tthis.by = a;\r\n\t\tthis.ba(\"ActualBingImageryRestUri\", b, this.by);\r\n\t}\r\n\tcultureName: string;\r\n\tapiKey: string;\r\n\timageryStyle: BingMapsImageryStyle;\r\n\trequestMapSettings(): void {\r\n\t\tthis.co(true);\r\n\t}\r\n\tprivate co(a: boolean): void {\r\n\t\tthis.cl(a);\r\n\t}\r\n\tprivate bw(): boolean {\r\n\t\tif ((this.tilePath == null) && (this.subDomains == null)) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tprivate cq(): void {\r\n\t\tthis.isInitialized = false;\r\n\t\tif (!this.bv()) {\r\n\t\t\tthis.cp(\"\", null);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!this.isDeferredLoad) {\r\n\t\t\tthis.co(false);\r\n\t\t}\r\n\t}\r\n\tprivate bv(): boolean {\r\n\t\tif (stringIsNullOrEmpty(this.apiKey) || this.apiKey.length < 20) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\tprivate cj(): void {\r\n\t}\r\n\tprivate cp(a: string, b: List$1<string>): void {\r\n\t\tif (a != this.actualTilePath) {\r\n\t\t\tthis.actualTilePath = a;\r\n\t\t}\r\n\t\tlet c = b == null ? null : new SubDomainsCollection(1, b);\r\n\t\tif (this.actualSubDomains != c) {\r\n\t\t\tthis.actualSubDomains = c;\r\n\t\t}\r\n\t\tthis.bp.m();\r\n\t}\r\n\tprivate cl(a: boolean): void {\r\n\t\tif ((!a) && (this.isDeferredLoad)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!this.bv()) {\r\n\t\t\tthis.isInitialized = false;\r\n\t\t\tthis.cp(\"\", null);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.isInitialized = true;\r\n\t\tlet b: string = null;\r\n\t\tif (this.bingImageryRestUri != null) {\r\n\t\t\tif (Uri.isWellFormedUriString(this.bingImageryRestUri, 1)) {\r\n\t\t\t\tb = this.bingImageryRestUri;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (Uri.isWellFormedUriString(this.actualBingImageryRestUri, 1)) {\r\n\t\t\t\tb = this.actualBingImageryRestUri;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (b == null) {\r\n\t\t\tthis.cp(\"\", null);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet c = this.imageryStyle;\r\n\t\tb += enumGetBox<BingMapsImageryStyle>(BingMapsImageryStyle_$type, c);\r\n\t\tlet d = \"key=\" + this.apiKey + \"&include=ImageryProviders\";\r\n\t\tlet url_ = b + \"?\" + d;\r\n\t\tthis._pendingBingRequest_ = HttpRequestUtil.submit(url_, this.getResponseCompleted, null );\r\n\t}\r\n\tprivate getResponseCompleted(a: any, b: any): void {\r\n\t\tif (b != this._pendingBingRequest_) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._pendingBingRequest_ = null;\r\n\t\tlet data_ = a;\r\n\t\tlet resourceSets_ =  (<any>JSON.parse(data_)).resourceSets;\r\n\t\tif (resourceSets_ == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet resources_ = resourceSets_.length > 0 ? resourceSets_[0].resources : null;\r\n\t\tif (resources_ == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (resources_.length == 0) { return; };\r\n\t\tlet imageUrl_: string = <string>(resources_[0].imageUrl);\r\n\t\tlet subDomains_: List$1<string> = new List$1<string>(String_$type, 0);\r\n\t\tfor (var i = 0; i < resources_[0].imageUrlSubdomains.length; i++) { subDomains_.add(resources_[0].imageUrlSubdomains[i]); };\r\n\t\tthis.cp(imageUrl_, subDomains_);\r\n\t}\r\n\tprivate ci(a: any, b: NotifyCollectionChangedEventArgs): void {\r\n\t\tthis.aj.e();\r\n\t\tthis.cq();\r\n\t\tthis.cm(BingMapsMapImagery.$$p[4], this.actualSubDomains, this.actualSubDomains);\r\n\t}\r\n\tprivate cm(a: string, b: any, c: any): void {\r\n\t\tswitch (a) {\r\n\t\t\tcase BingMapsMapImagery.$$p[0]:\r\n\t\t\tthis.cq();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase BingMapsMapImagery.$$p[3]:\r\n\t\t\tthis.cq();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase BingMapsMapImagery.$$p[5]:\r\n\t\t\tthis.cj();\r\n\t\t\tthis.actualTilePath = <string>c;\r\n\t\t\tthis.bp.o();\r\n\t\t\tthis.aj.e();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase BingMapsMapImagery.$$p[1]:\r\n\t\t\tthis.bp.l();\r\n\t\t\tthis.aj.e();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase BingMapsMapImagery.$$p[2]:\r\n\t\t\tthis.cq();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase BingMapsMapImagery.$$p[4]:\r\n\t\t\tthis.cj();\r\n\t\t\tlet d = <SubDomainsCollection>b;\r\n\t\t\tlet e = <SubDomainsCollection>c;\r\n\t\t\tif (this.actualSubDomains != null) {\r\n\t\t\t\tlet f = this.actualSubDomains;\r\n\t\t\t\tf.collectionChanged = delegateRemove(f.collectionChanged, runOn(this, this.ci));\r\n\t\t\t}\r\n\t\t\tthis.actualSubDomains = e;\r\n\t\t\tif (this.actualSubDomains != null) {\r\n\t\t\t\te.collectionChanged = delegateCombine(e.collectionChanged, runOn(this, this.ci));\r\n\t\t\t}\r\n\t\t\tthis.bp.n();\r\n\t\t\tthis.aj.e();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualTilePath\":\r\n\t\t\tlet g = <string>c;\r\n\t\t\tif (stringIsNullOrEmpty(g)) {\r\n\t\t\t\tthis.cq();\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"BingImageryRestUri\":\r\n\t\t\tthis.actualBingImageryRestUri = <string>c;\r\n\t\t\tthis.cj();\r\n\t\t\tthis.cq();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualBingImageryRestUri\":\r\n\t\t\tthis.cj();\r\n\t\t\tthis.cq();\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t\tsuper.ba(a, b, c);\r\n\t}\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, BingMapsMapImagery, 'cm', [ 'ApiKey', [ 2, stringEmpty() ], 'CultureName', [ 2, \"en-US\" ], 'ImageryStyle', [ BingMapsImageryStyle_$type, enumGetBox<BingMapsImageryStyle>(BingMapsImageryStyle_$type, 1) ], 'IsDeferredLoad', [ 0, false ], 'SubDomains', [ (<any>SubDomainsCollection).$, null ], 'TilePath', [ 2, null ] ]);\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { IgcSubDomainsCollection } from \"./igc-sub-domains-collection\";\r\nimport { BingMapsImageryStyle, BingMapsImageryStyle_$type } from \"./BingMapsImageryStyle\";\r\nimport { IgcGeographicMapImagery } from \"./igc-geographic-map-imagery\";\r\nimport { BingMapsMapImagery as BingMapsMapImagery_internal } from \"./BingMapsMapImagery\";\r\nimport { ensureBool, ensureEnum } from \"igniteui-core/componentUtil\";\r\nimport { SubDomainsCollection as SubDomainsCollection_internal } from \"./SubDomainsCollection\";\r\nimport { String_$type } from \"igniteui-core/type\";\r\nimport { SyncableObservableCollection$1 } from \"igniteui-core/SyncableObservableCollection$1\";\r\n\r\n/**\r\n * UI element class used to display BingMapsMap imagery in the IgxGeographicMap.Component\r\n*/\r\nexport class IgcBingMapsMapImagery extends IgcGeographicMapImagery\r\n{\r\n\r\nprotected createImplementation() : BingMapsMapImagery_internal\r\n{\r\n\treturn new BingMapsMapImagery_internal();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : BingMapsMapImagery_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\t/**\r\n\t * Gets a status whether the Bing Maps service is initialized.\r\n\t*/\r\n\tget isInitialized() : boolean {\r\n\t\treturn (this.i.isInitialized as boolean);\r\n\t}\r\n\tset isInitialized(v: boolean) {\r\n\t\tthis.i.isInitialized = ensureBool(v);\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether the Bing Maps service should be auto-initialized upon valid property values.\r\n\t*/\r\n\tget isDeferredLoad() : boolean {\r\n\t\treturn (this.i.isDeferredLoad as boolean);\r\n\t}\r\n\tset isDeferredLoad(v: boolean) {\r\n\t\tthis.i.isDeferredLoad = ensureBool(v);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the map tile image uri.\r\n\t*/\r\n\tget tilePath() : string {\r\n\t\treturn (this.i.tilePath as string);\r\n\t}\r\n\tset tilePath(v: string) {\r\n\t\tthis.i.tilePath = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the actual map tile image uri.\r\n\t*/\r\n\tget actualTilePath() : string {\r\n\t\treturn (this.i.actualTilePath as string);\r\n\t}\r\n\tset actualTilePath(v: string) {\r\n\t\tthis.i.actualTilePath = v;\r\n\t}\r\n\tprivate _subDomains: IgcSubDomainsCollection = null;\r\n\t                                \r\n\t/**\r\n\t * Gets or sets the collection of image uri subdomains.\r\n\t*/\r\n\tget subDomains() : IgcSubDomainsCollection {\r\n\t                                        if (this._subDomains === null) {\r\n\t                                            let coll = new IgcSubDomainsCollection();\r\n\t                                            let innerColl = this.i.subDomains;\r\n\t\t\tif (!innerColl) {\r\n\t                                            \tinnerColl = new SubDomainsCollection_internal(0);\r\n\t\t\t}\r\n\t                                            this._subDomains = (coll as any)._fromInner(innerColl);\r\n\t                                            this.i.subDomains = innerColl;\r\n\t\r\n\t                                        }\r\n\t\treturn this._subDomains;\r\n\t}\r\n\tset subDomains(v: IgcSubDomainsCollection) {\r\n\t                                        if (this._subDomains !== null) {\r\n\t                                            (this._subDomains as any)._setSyncTarget(null);\r\n\t                                            this._subDomains = null;\r\n\t                                        }\r\n\t                                        let coll = new IgcSubDomainsCollection();\r\n\t                                        this._subDomains = (coll as any)._fromOuter(v);\r\n\t                                        let syncColl = new SyncableObservableCollection$1<String>(String_$type);\r\n\t                                        let innerColl = this.i.subDomains;\r\n\t\tif (!innerColl) {\r\n\t                                        \tinnerColl = new SubDomainsCollection_internal(0);\r\n\t\t}\r\n\t                                        (syncColl as any)._inner = innerColl;\r\n\t                                        syncColl.clear();\r\n\t                                        (this._subDomains as any)._setSyncTarget(syncColl);\r\n\t                                        this.i.subDomains = innerColl;\r\n\t\r\n\t}\r\n\tprivate _actualSubDomains: IgcSubDomainsCollection = null;\r\n\t                                \r\n\t/**\r\n\t * Gets or sets the actual collection of image uri subdomains.\r\n\t*/\r\n\tget actualSubDomains() : IgcSubDomainsCollection {\r\n\t                                        if (this._actualSubDomains === null) {\r\n\t                                            let coll = new IgcSubDomainsCollection();\r\n\t                                            let innerColl = this.i.actualSubDomains;\r\n\t\t\tif (!innerColl) {\r\n\t                                            \tinnerColl = new SubDomainsCollection_internal(0);\r\n\t\t\t}\r\n\t                                            this._actualSubDomains = (coll as any)._fromInner(innerColl);\r\n\t                                            this.i.actualSubDomains = innerColl;\r\n\t\r\n\t                                        }\r\n\t\treturn this._actualSubDomains;\r\n\t}\r\n\tset actualSubDomains(v: IgcSubDomainsCollection) {\r\n\t                                        if (this._actualSubDomains !== null) {\r\n\t                                            (this._actualSubDomains as any)._setSyncTarget(null);\r\n\t                                            this._actualSubDomains = null;\r\n\t                                        }\r\n\t                                        let coll = new IgcSubDomainsCollection();\r\n\t                                        this._actualSubDomains = (coll as any)._fromOuter(v);\r\n\t                                        let syncColl = new SyncableObservableCollection$1<String>(String_$type);\r\n\t                                        let innerColl = this.i.actualSubDomains;\r\n\t\tif (!innerColl) {\r\n\t                                        \tinnerColl = new SubDomainsCollection_internal(0);\r\n\t\t}\r\n\t                                        (syncColl as any)._inner = innerColl;\r\n\t                                        syncColl.clear();\r\n\t                                        (this._actualSubDomains as any)._setSyncTarget(syncColl);\r\n\t                                        this.i.actualSubDomains = innerColl;\r\n\t\r\n\t}\r\n\t/**\r\n\t * Gets or sets the Bing Imagery Rest Uri.\r\n\t*/\r\n\tget bingImageryRestUri() : string {\r\n\t\treturn (this.i.bingImageryRestUri as string);\r\n\t}\r\n\tset bingImageryRestUri(v: string) {\r\n\t\tthis.i.bingImageryRestUri = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the Actual Bing Imagery Rest Uri.\r\n\t*/\r\n\tget actualBingImageryRestUri() : string {\r\n\t\treturn (this.i.actualBingImageryRestUri as string);\r\n\t}\r\n\tset actualBingImageryRestUri(v: string) {\r\n\t\tthis.i.actualBingImageryRestUri = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the culture name for this tile source.\r\n\t*/\r\n\tget cultureName() : string {\r\n\t\treturn (this.i.cultureName as string);\r\n\t}\r\n\tset cultureName(v: string) {\r\n\t\tthis.i.cultureName = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets an API key required by the Bing Maps imagery service.\r\n\t * This key must be obtained from the http://www.bingmapsportal.com website.\r\n\t*/\r\n\tget apiKey() : string {\r\n\t\treturn (this.i.apiKey as string);\r\n\t}\r\n\tset apiKey(v: string) {\r\n\t\tthis.i.apiKey = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets a map style of the Bing Maps imagery tiles. \r\n\t * For example: Aerial, AerialWithLabels, or Road map style.\r\n\t*/\r\n\tget imageryStyle() : BingMapsImageryStyle {\r\n\t\treturn this.i.imageryStyle;\r\n\t}\r\n\tset imageryStyle(v: BingMapsImageryStyle) {\r\n\t\tthis.i.imageryStyle = ensureEnum<BingMapsImageryStyle>(BingMapsImageryStyle_$type, v);\r\n\t}\r\n\t/**\r\n\t * Will Connect to the Bing Rest API and retrieve the required TilePath and Subdomains from the service.  This requires a valid API key to already be set.\r\n\t\r\n\t*/\r\n\tpublic requestMapSettings() {\r\n\t\tthis.i.requestMapSettings();\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\n\r\nimport { IgcBingMapsMapImagery } from './igc-bing-maps-map-imagery';\r\nimport { BingMapsMapImagery } from './BingMapsMapImagery';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcBingMapsMapImageryModule {\r\n    public static register(): void {\r\n        \r\n        TypeRegistrar.registerCons(\"IgcBingMapsMapImagery\", IgcBingMapsMapImagery);\r\n        TypeRegistrar.register(\"BingMapsMapImagery\", (<any>BingMapsMapImagery).$type);\r\n    }\r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcGetTileImageUriArgs } from \"igniteui-core/igc-get-tile-image-uri-args\";\r\nimport { IgcGeographicMapImagery } from \"./igc-geographic-map-imagery\";\r\nimport { CustomMapImagery as CustomMapImagery_internal } from \"./CustomMapImagery\";\r\n\r\n/**\r\n * Represents a CustomMapImagery MapImagery\r\n*/\r\nexport class IgcCustomMapImagery extends IgcGeographicMapImagery\r\n{\r\n\r\n\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : CustomMapImagery_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\t\r\n\t    private _getTileImageUri: (s: IgcCustomMapImagery, e: IgcGetTileImageUriArgs) => void = null;\r\n\t    private _getTileImageUri_wrapped: any = null;\r\n\t/**\r\n\t * Raised when URI for tiles should be provided\r\n\t*/\r\n\t\r\n\tpublic get getTileImageUri(): (s: IgcCustomMapImagery, e: IgcGetTileImageUriArgs) => void {\r\n\treturn this._getTileImageUri;\r\n\t}\r\n\t    public set getTileImageUri(ev: (s: IgcCustomMapImagery, e: IgcGetTileImageUriArgs) => void) {\r\n\t        if (this._getTileImageUri_wrapped !== null) {\r\n\t            this.i.getTileImageUri = delegateRemove(this.i.getTileImageUri, this._getTileImageUri_wrapped);\r\n\t            this._getTileImageUri_wrapped = null;\r\n\t            this._getTileImageUri = null;\r\n\t        }\r\n\t\r\n\t        this._getTileImageUri = ev;\r\n\t        this._getTileImageUri_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcGetTileImageUriArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeGetTileImageUri) {\r\n\t                        (this as any).beforeGetTileImageUri(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._getTileImageUri) {\r\n\t    this._getTileImageUri(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.getTileImageUri = delegateCombine(this.i.getTileImageUri, this._getTileImageUri_wrapped);;\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { GeographicMapImagery } from \"./GeographicMapImagery\";\r\nimport { CustomMapTileSource } from \"igniteui-core/CustomMapTileSource\";\r\nimport { Base, runOn, delegateCombine, Type, markType } from \"igniteui-core/type\";\r\nimport { GetTileImageUriArgs } from \"igniteui-core/GetTileImageUriArgs\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class CustomMapImagery extends GeographicMapImagery {\r\n\tstatic $t: Type = markType(CustomMapImagery, 'CustomMapImagery', (<any>GeographicMapImagery).$);\r\n\tconstructor(a: CustomMapTileSource) {\r\n\t\tsuper(a);\r\n\t\ta.getTileImageUri = delegateCombine(a.getTileImageUri, runOn(this, this.bq));\r\n\t}\r\n\tprivate bq(a: any, b: GetTileImageUriArgs): void {\r\n\t\tthis.bp(b);\r\n\t}\r\n\tprotected bp(a: GetTileImageUriArgs): void {\r\n\t\tif (this.getTileImageUri != null) {\r\n\t\t\tthis.getTileImageUri(this, a);\r\n\t\t}\r\n\t}\r\n\tgetTileImageUri: (sender: any, e: GetTileImageUriArgs) => void = null;\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\n\r\nimport { IgcCustomMapImagery } from './igc-custom-map-imagery';\r\nimport { CustomMapImagery } from './CustomMapImagery';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcCustomMapImageryModule {\r\n    public static register(): void {\r\n        \r\n        TypeRegistrar.registerCons(\"IgcCustomMapImagery\", IgcCustomMapImagery);\r\n        TypeRegistrar.register(\"CustomMapImagery\", (<any>CustomMapImagery).$type);\r\n    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { GeographicXYTriangulatingSeriesView } from \"./GeographicXYTriangulatingSeriesView\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { Defaults } from \"igniteui-charts/Defaults\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { ScatterContourSeries } from \"igniteui-charts/ScatterContourSeries\";\r\nimport { Base, Type, markType, runOn, delegateCombine, typeCast, String_$type, markDep } from \"igniteui-core/type\";\r\nimport { GeographicXYTriangulatingSeries } from \"./GeographicXYTriangulatingSeries\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { ValueBrushScale } from \"igniteui-charts/ValueBrushScale\";\r\nimport { ContourValueResolver } from \"igniteui-charts/ContourValueResolver\";\r\nimport { Control } from \"igniteui-core/Control\";\r\nimport { TriangulationStatusEventArgs } from \"igniteui-core/TriangulationStatusEventArgs\";\r\nimport { ScatterTriangulationSeries } from \"igniteui-charts/ScatterTriangulationSeries\";\r\nimport { PropertyUpdatedEventArgs } from \"igniteui-core/PropertyUpdatedEventArgs\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicContourLineSeriesView extends GeographicXYTriangulatingSeriesView {\r\n\tstatic $t: Type = markType(GeographicContourLineSeriesView, 'GeographicContourLineSeriesView', (<any>GeographicXYTriangulatingSeriesView).$);\r\n\tconstructor(a: GeographicContourLineSeries) {\r\n\t\tsuper(a);\r\n\t\tthis.cm = a;\r\n\t}\r\n\tprivate cm: GeographicContourLineSeries = null;\r\n\tas(): void {\r\n\t\tsuper.as();\r\n\t\tif (!this.q) {\r\n\t\t\tthis.cm.g4 = Defaults.m;\r\n\t\t}\r\n\t}\r\n\tb2(): void {\r\n\t\tsuper.b2();\r\n\t\tif (this.cm.qe != null) {\r\n\t\t\tthis.cm.q6.r9 = this.cm.q9;\r\n\t\t\tthis.cm.q6.sj = this.cm.rd;\r\n\t\t}\r\n\t}\r\n\tcn(): void {\r\n\t\tif (this.cm.q6 != null) {\r\n\t\t\tthis.cm.q6.r9 = this.cm.q9;\r\n\t\t}\r\n\t}\r\n\tco(): void {\r\n\t\tif (this.cm.q6 != null) {\r\n\t\t\tthis.cm.q6.sj = this.cm.rd;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicContourLineSeries extends GeographicXYTriangulatingSeries {\r\n\tstatic $t: Type = markType(GeographicContourLineSeries, 'GeographicContourLineSeries', (<any>GeographicXYTriangulatingSeries).$);\r\n\tprotected get_d3(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>GeographicContourLineSeries).$;\r\n\t}\r\n\tprotected qj(): void {\r\n\t\tsuper.qj();\r\n\t}\r\n\tq6: ScatterContourSeries;\r\n\tprotected qd(): Series {\r\n\t\tthis.q6 = new ScatterContourSeries();\r\n\t\tlet a = this.q6;\r\n\t\ta.triangulationStatusChanged = delegateCombine(a.triangulationStatusChanged, runOn(this, this.rg));\r\n\t\tlet b = this.q6;\r\n\t\tb.propertyUpdated = delegateCombine(b.propertyUpdated, runOn(this, this.rh));\r\n\t\treturn this.q6;\r\n\t}\r\n\tprivate rg(a: any, b: TriangulationStatusEventArgs): void {\r\n\t\tif (this.triangulationStatusChanged != null) {\r\n\t\t\tthis.triangulationStatusChanged(this, b);\r\n\t\t}\r\n\t}\r\n\tprivate rh(a: any, b: PropertyUpdatedEventArgs): void {\r\n\t\tlet c = typeCast<ScatterContourSeries>((<any>ScatterContourSeries).$, this.qe);\r\n\t\tif (c == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (b.propertyName == \"ActualFillScale\") {\r\n\t\t\tthis.q8 = c.r8;\r\n\t\t}\r\n\t}\r\n\trd: string;\r\n\tq9: ValueBrushScale;\r\n\tq8: ValueBrushScale;\r\n\tprotected m1(): void {\r\n\t\tsuper.m1();\r\n\t}\r\n\tprotected by(): SeriesView {\r\n\t\treturn new GeographicContourLineSeriesView(this);\r\n\t}\r\n\tl4(a: SeriesView): void {\r\n\t\tsuper.l4(a);\r\n\t\tthis.ra = <GeographicContourLineSeriesView>a;\r\n\t}\r\n\tra: GeographicContourLineSeriesView;\r\n\tq5: ContourValueResolver;\r\n\tprotected l9(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.l9(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase GeographicContourLineSeries.$$p[1]:\r\n\t\t\tthis.ra.cn();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicContourLineSeries.$$p[2]:\r\n\t\t\tthis.ra.co();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicContourLineSeries.$$p[3]:\r\n\t\t\tthis.q6.r6 = this.q5;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"DashArray\":\r\n\t\t\tthis.q6.pi = this.pi;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"DashCap\":\r\n\t\t\tthis.q6.pj = this.pj;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"MiterLimit\":\r\n\t\t\tthis.q6.gw = this.gw;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"LineJoin\":\r\n\t\t\tthis.q6.pl = this.pl;\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\ttriangulationStatusChanged: (sender: any, args: TriangulationStatusEventArgs) => void = null;\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicContourLineSeries, 'raisePropertyChanged', [ 'ActualFillScale:q8:ri', [ (<any>ValueBrushScale).$, null ], 'FillScale:q9:rj', [ (<any>ValueBrushScale).$, null ], 'ValueMemberPath:rd:rk', [ 2, \"value\" ], 'ValueResolver:q5:rl', [ (<any>ContourValueResolver).$, null ] ]);\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcValueBrushScaleComponent } from \"igniteui-charts/igc-value-brush-scale-component\";\r\nimport { IgcContourValueResolverComponent } from \"igniteui-charts/igc-contour-value-resolver-component\";\r\nimport { IgcTriangulationStatusEventArgs } from \"igniteui-core/igc-triangulation-status-event-args\";\r\nimport { IgcGeographicXYTriangulatingSeriesComponent } from \"./igc-geographic-xy-triangulating-series-component\";\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicContourLineSeries } from \"./GeographicContourLineSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\n\r\n/**\r\n * Represents a class for Geographic Contour Series displayed on a map.\r\n*/\r\nexport class IgcGeographicContourLineSeriesComponent extends IgcGeographicXYTriangulatingSeriesComponent\r\n{\r\n\r\nprotected createImplementation() : GeographicContourLineSeries\r\n{\r\n\treturn new GeographicContourLineSeries();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicContourLineSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).connectedCallback) {\r\n\t            (<any>this.i).connectedCallback();\r\n\t        }\r\n\t        \r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }\r\n\t    disconnectedCallback() {\r\n\t        if (super[\"disconnectedCallback\"]) {\r\n\t            super[\"disconnectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).disconnectedCallback) {\r\n\t            (<any>this.i).disconnectedCallback();\r\n\t        }\r\n\t        if (this._attached) {\r\n\t            this._attached = false;\r\n\t        }\r\n\t    }\r\n\t\r\n\t                private static _observedAttributesIgcGeographicContourLineSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicContourLineSeriesComponent._observedAttributesIgcGeographicContourLineSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicContourLineSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicContourLineSeriesComponent._observedAttributesIgcGeographicContourLineSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicContourLineSeriesComponent._observedAttributesIgcGeographicContourLineSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t\r\n\t                public static htmlTagName: string = \"igc-geographic-contour-line-series\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcGeographicContourLineSeriesComponent._isElementRegistered) {\r\n\t                        IgcGeographicContourLineSeriesComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcGeographicContourLineSeriesComponent.htmlTagName,\r\n\t                            IgcGeographicContourLineSeriesComponent);\r\n\t                    }\r\n\t            }\r\n\t/**\r\n\t * Gets whether the current series shows a line contour shape.\r\n\t*/\r\n\tget isLineContour() : boolean {\r\n\t\treturn (this.i.d3 as boolean);\r\n\t}\r\n\t/**\r\n\t * The name of the property from which to retrieve the numeric values from the ItemsSource items.\r\n\t*/\r\n\tget valueMemberPath() : string {\r\n\t\treturn (this.i.rd as string);\r\n\t}\r\n\tset valueMemberPath(v: string) {\r\n\t\tthis.i.rd = v;\r\n\t}\r\n\t/**\r\n\t * The ValueBrushScale to use when determining Brushes for each contour line, based on the values found in ValueMemberPath.\r\n\t*/\r\n\tget fillScale() : IgcValueBrushScaleComponent {\r\n\t                                        const r = this.i.q9;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcValueBrushScaleComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset fillScale(v: IgcValueBrushScaleComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.q9 = null : this.i.q9 = v.i;\r\n\t}\r\n\t/**\r\n\t * Gets actual fill scale that is set on the FillScale property or default FillScale\r\n\t*/\r\n\tget actualFillScale() : IgcValueBrushScaleComponent {\r\n\t                                        const r = this.i.q8;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcValueBrushScaleComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset actualFillScale(v: IgcValueBrushScaleComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.q8 = null : this.i.q8 = v.i;\r\n\t}\r\n\t/**\r\n\t * The ContourValueResolver used to determine the numeric values of contours.\r\n\t*/\r\n\tget valueResolver() : IgcContourValueResolverComponent {\r\n\t                                        const r = this.i.q5;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcContourValueResolverComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset valueResolver(v: IgcContourValueResolverComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.q5 = null : this.i.q5 = v.i;\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    var baseResult = super.findByName(name);\r\n\t    if (baseResult)\r\n\t    {\r\n\t        return baseResult;\r\n\t    }\r\n\t\r\n\tif (this.fillScale && (this.fillScale as any).name && (this.fillScale as any).name == name) { return this.fillScale; }\r\n\tif (this.actualFillScale && (this.actualFillScale as any).name && (this.actualFillScale as any).name == name) { return this.actualFillScale; }\r\n\tif (this.valueResolver && (this.valueResolver as any).name && (this.valueResolver as any).name == name) { return this.valueResolver; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\t\r\n\t        protected _styling(container: any, component: any, parent?: any) {\r\n\t            super._styling(container, component, parent);\r\n\t\r\n\t            this._inStyling = true;\r\n\t            if (this.fillScale && (this.fillScale as any)._styling) {\r\n\t    (this.fillScale as any)._styling(container, component, this);\r\n\t}\r\n\tif (this.actualFillScale && (this.actualFillScale as any)._styling) {\r\n\t    (this.actualFillScale as any)._styling(container, component, this);\r\n\t}\r\n\tif (this.valueResolver && (this.valueResolver as any)._styling) {\r\n\t    (this.valueResolver as any)._styling(container, component, this);\r\n\t}\r\n\t\r\n\t            this._inStyling = false;\r\n\t        }\r\n\t\r\n\t    private _triangulationStatusChanged: (s: IgcGeographicContourLineSeriesComponent, e: IgcTriangulationStatusEventArgs) => void = null;\r\n\t    private _triangulationStatusChanged_wrapped: any = null;\r\n\t/**\r\n\t * Raised when the status of an ongoing Triangulation has changed.\r\n\t*/\r\n\t\r\n\tpublic get triangulationStatusChanged(): (s: IgcGeographicContourLineSeriesComponent, e: IgcTriangulationStatusEventArgs) => void {\r\n\treturn this._triangulationStatusChanged;\r\n\t}\r\n\t    public set triangulationStatusChanged(ev: (s: IgcGeographicContourLineSeriesComponent, e: IgcTriangulationStatusEventArgs) => void) {\r\n\t        if (this._triangulationStatusChanged_wrapped !== null) {\r\n\t            this.i.triangulationStatusChanged = delegateRemove(this.i.triangulationStatusChanged, this._triangulationStatusChanged_wrapped);\r\n\t            this._triangulationStatusChanged_wrapped = null;\r\n\t            this._triangulationStatusChanged = null;\r\n\t        }\r\n\t\r\n\t        this._triangulationStatusChanged = ev;\r\n\t        this._triangulationStatusChanged_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcTriangulationStatusEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeTriangulationStatusChanged) {\r\n\t                        (this as any).beforeTriangulationStatusChanged(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._triangulationStatusChanged) {\r\n\t    this._triangulationStatusChanged(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.triangulationStatusChanged = delegateCombine(this.i.triangulationStatusChanged, this._triangulationStatusChanged_wrapped);;\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcScatterContourSeriesModule } from 'igniteui-charts/igc-scatter-contour-series-module';\r\n\r\nimport { IgcGeographicContourLineSeriesComponent } from './igc-geographic-contour-line-series-component';\r\nimport { GeographicContourLineSeries } from './GeographicContourLineSeries';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcGeographicContourLineSeriesModule {\r\n    public static register(): void {\r\nIgcScatterContourSeriesModule.register();\r\n        IgcGeographicContourLineSeriesComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcGeographicContourLineSeriesComponent\", IgcGeographicContourLineSeriesComponent);\r\n        TypeRegistrar.register(\"GeographicContourLineSeries\", (<any>GeographicContourLineSeries).$type);\r\n    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { HostSeriesView } from \"./HostSeriesView\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { HighDensityScatterSeries } from \"igniteui-charts/HighDensityScatterSeries\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { XamGeographicMap } from \"./XamGeographicMap\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { Color } from \"igniteui-core/Color\";\r\nimport { Defaults } from \"igniteui-charts/Defaults\";\r\nimport { Brush } from \"igniteui-core/Brush\";\r\nimport { Base, typeCast, Type, markType, String_$type, Boolean_$type, Number_$type, typeGetValue, runOn, delegateCombine, markDep } from \"igniteui-core/type\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { Control } from \"igniteui-core/Control\";\r\nimport { ProgressiveLoadStatusEventArgs } from \"igniteui-charts/ProgressiveLoadStatusEventArgs\";\r\nimport { PropertyUpdatedEventArgs } from \"igniteui-core/PropertyUpdatedEventArgs\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\nimport { isNaN_ } from \"igniteui-core/number\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicHighDensityScatterSeriesView extends HostSeriesView {\r\n\tstatic $t: Type = markType(GeographicHighDensityScatterSeriesView, 'GeographicHighDensityScatterSeriesView', (<any>HostSeriesView).$);\r\n\tconstructor(a: GeographicHighDensityScatterSeries) {\r\n\t\tsuper(a);\r\n\t\tthis.ce = a;\r\n\t}\r\n\tprivate ce: GeographicHighDensityScatterSeries = null;\r\n\tb2(): void {\r\n\t\tsuper.b2();\r\n\t\tlet a: HighDensityScatterSeries = typeCast<HighDensityScatterSeries>((<any>HighDensityScatterSeries).$, this.ce.qe);\r\n\t\ta.sm = this.ce.q3;\r\n\t\ta.su = this.ce.q1;\r\n\t\ta.qz = this.ce.qq;\r\n\t\ta.qy = this.ce.qp;\r\n\t\ta.eo = this.ce.qo;\r\n\t\ta.ru = this.ce.qs;\r\n\t\ta.rt = this.ce.qr;\r\n\t\ta.ts = this.ce.rm;\r\n\t\ta.tr = this.ce.rl;\r\n\t\ta.r6 = this.ce.qv;\r\n\t}\r\n\tck(): void {\r\n\t\t(<HighDensityScatterSeries>this.ce.qe).sm = this.ce.q3;\r\n\t}\r\n\tcj(): void {\r\n\t\t(<HighDensityScatterSeries>this.ce.qe).su = this.ce.q1;\r\n\t}\r\n\tcp(): void {\r\n\t\t(<HighDensityScatterSeries>this.ce.qe).qz = this.ce.qq;\r\n\t}\r\n\tcn(): void {\r\n\t\t(<HighDensityScatterSeries>this.ce.qe).qy = this.ce.qp;\r\n\t}\r\n\tcl(): void {\r\n\t\t(<HighDensityScatterSeries>this.ce.qe).eo = this.ce.qo;\r\n\t}\r\n\tci(): void {\r\n\t\t(<HighDensityScatterSeries>this.ce.qe).ru = this.ce.qs;\r\n\t}\r\n\tcg(): void {\r\n\t\t(<HighDensityScatterSeries>this.ce.qe).rt = this.ce.qr;\r\n\t}\r\n\tco(): void {\r\n\t\tlet a: HighDensityScatterSeries = typeCast<HighDensityScatterSeries>((<any>HighDensityScatterSeries).$, this.ce.qe);\r\n\t\tif (this.ce.ce == null) {\r\n\t\t\ta.qj = null;\r\n\t\t\ta.ql = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\ta.qj = (<XamGeographicMap>this.ce.ce).t7;\r\n\t\ta.ql = (<XamGeographicMap>this.ce.ce).t9;\r\n\t}\r\n\tcq(): void {\r\n\t\t(<HighDensityScatterSeries>this.ce.qe).qj = (<XamGeographicMap>this.ce.ce).t7;\r\n\t}\r\n\tcr(): void {\r\n\t\t(<HighDensityScatterSeries>this.ce.qe).ql = (<XamGeographicMap>this.ce.ce).t9;\r\n\t}\r\n\tch(): void {\r\n\t\t(<HighDensityScatterSeries>this.ce.qe).ts = this.ce.rm;\r\n\t}\r\n\tcf(): void {\r\n\t\t(<HighDensityScatterSeries>this.ce.qe).tr = this.ce.rl;\r\n\t}\r\n\tcm(): void {\r\n\t\t(<HighDensityScatterSeries>this.ce.qe).r6 = this.ce.qv;\r\n\t}\r\n\tas(): void {\r\n\t\tsuper.as();\r\n\t\tif (!this.q) {\r\n\t\t\tthis.ce.rm = Defaults.aq;\r\n\t\t\tthis.ce.rl = Defaults.ap;\r\n\t\t\tthis.ce.o9 = Defaults.al;\r\n\t\t\tthis.ce.pe = Defaults.ak;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicHighDensityScatterSeries extends GeographicMapSeriesHost {\r\n\tstatic $t: Type = markType(GeographicHighDensityScatterSeries, 'GeographicHighDensityScatterSeries', (<any>GeographicMapSeriesHost).$);\r\n\tprotected gz(): number {\r\n\t\tif (!isNaN_(this.gy)) {\r\n\t\t\treturn super.gz();\r\n\t\t}\r\n\t\treturn Defaults.q;\r\n\t}\r\n\tprotected get_d8(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>GeographicHighDensityScatterSeries).$;\r\n\t}\r\n\tprotected by(): SeriesView {\r\n\t\treturn new GeographicHighDensityScatterSeriesView(this);\r\n\t}\r\n\tl4(a: SeriesView): void {\r\n\t\tsuper.l4(a);\r\n\t\tthis.qn = <GeographicHighDensityScatterSeriesView>a;\r\n\t}\r\n\tqn: GeographicHighDensityScatterSeriesView;\r\n\tprotected qd(): Series {\r\n\t\tthis.qm = new HighDensityScatterSeries();\r\n\t\treturn this.qm;\r\n\t}\r\n\tprivate qm: HighDensityScatterSeries = null;\r\n\tq1: string;\r\n\tq3: string;\r\n\tqq: boolean;\r\n\tqp: boolean;\r\n\tqo: boolean;\r\n\tqs: number;\r\n\tqr: number;\r\n\trm: Color;\r\n\trl: Color;\r\n\tqv: number;\r\n\tprogressiveLoadStatusChanged: (sender: any, e: ProgressiveLoadStatusEventArgs) => void = null;\r\n\tprivate qu: number = 0;\r\n\tget qw(): number {\r\n\t\treturn this.qu;\r\n\t}\r\n\tset qw(a: number) {\r\n\t\tlet b = this.qu;\r\n\t\tthis.qu = a;\r\n\t\tthis.raisePropertyChanged(\"ProgressiveStatus\", b, this.qu);\r\n\t}\r\n\tprotected qj(): void {\r\n\t\tsuper.qj();\r\n\t\tlet a = (<HighDensityScatterSeries>this.qe);\r\n\t\ta.progressiveLoadStatusChanged = delegateCombine(a.progressiveLoadStatusChanged, runOn(this, this.ra));\r\n\t\tlet b = (<HighDensityScatterSeries>this.qe);\r\n\t\tb.propertyUpdated = delegateCombine(b.propertyUpdated, runOn(this, this.q9));\r\n\t}\r\n\tprivate ra(a: any, b: ProgressiveLoadStatusEventArgs): void {\r\n\t\tthis.qw = b.currentStatus;\r\n\t\tif (this.progressiveLoadStatusChanged != null) {\r\n\t\t\tthis.progressiveLoadStatusChanged(this, b);\r\n\t\t}\r\n\t}\r\n\tprivate q9(a: any, b: PropertyUpdatedEventArgs): void {\r\n\t\tif (this.qm == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\tprotected l9(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.l9(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase \"SeriesViewer\":\r\n\t\t\tthis.qn.co();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[5]:\r\n\t\t\tthis.qn.ck();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[4]:\r\n\t\t\tthis.qn.cj();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[9]:\r\n\t\t\tthis.qn.cp();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[8]:\r\n\t\t\tthis.qn.cn();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[6]:\r\n\t\t\tthis.qn.cl();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"XAxis\":\r\n\t\t\tthis.qn.cq();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"YAxis\":\r\n\t\t\tthis.qn.cr();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[3]:\r\n\t\t\tthis.qn.ci();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[1]:\r\n\t\t\tthis.qn.cg();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[2]:\r\n\t\t\tthis.qn.ch();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[0]:\r\n\t\t\tthis.qn.cf();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[7]:\r\n\t\t\tthis.qn.cm();\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprotected get_e7(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tprotected set_e7(a: boolean): void {\r\n\t\tsuper.set_e7(a);\r\n\t}\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicHighDensityScatterSeries, 'raisePropertyChanged', [ 'HeatMaximumColor:rl:rb', [ (<any>Color).$, Defaults.ap ], 'HeatMaximum:qr:rc', [ 1, 50 ], 'HeatMinimumColor:rm:rd', [ (<any>Color).$, Defaults.aq ], 'HeatMinimum:qs:re', [ 1, 0 ], 'LatitudeMemberPath:q1:rf', [ 2, null ], 'LongitudeMemberPath:q3:rg', [ 2, null ], 'MouseOverEnabled:qo:rh', [ 0, false ], 'PointExtent:qv:ri', [ 1, 1 ], 'ProgressiveLoad:qp:rj', [ 0, true ], 'UseBruteForce:qq:rk', [ 0, false ] ]);\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcProgressiveLoadStatusEventArgs } from \"igniteui-charts/igc-progressive-load-status-event-args\";\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicHighDensityScatterSeries } from \"./GeographicHighDensityScatterSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool, colorToString, stringToColor } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\n\r\n/**\r\n * Series class for a geographic map with points marked at given locations.\r\n * This is the geographic equivalent of a HighDensityScatterSeries.\r\n*/\r\nexport class IgcGeographicHighDensityScatterSeriesComponent extends IgcGeographicMapSeriesHostComponent\r\n{\r\n\r\nprotected createImplementation() : GeographicHighDensityScatterSeries\r\n{\r\n\treturn new GeographicHighDensityScatterSeries();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicHighDensityScatterSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).connectedCallback) {\r\n\t            (<any>this.i).connectedCallback();\r\n\t        }\r\n\t        \r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }\r\n\t    disconnectedCallback() {\r\n\t        if (super[\"disconnectedCallback\"]) {\r\n\t            super[\"disconnectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).disconnectedCallback) {\r\n\t            (<any>this.i).disconnectedCallback();\r\n\t        }\r\n\t        if (this._attached) {\r\n\t            this._attached = false;\r\n\t        }\r\n\t    }\r\n\t\r\n\t                private static _observedAttributesIgcGeographicHighDensityScatterSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicHighDensityScatterSeriesComponent._observedAttributesIgcGeographicHighDensityScatterSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicHighDensityScatterSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicHighDensityScatterSeriesComponent._observedAttributesIgcGeographicHighDensityScatterSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicHighDensityScatterSeriesComponent._observedAttributesIgcGeographicHighDensityScatterSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t\r\n\t                public static htmlTagName: string = \"igc-geographic-high-density-scatter-series\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcGeographicHighDensityScatterSeriesComponent._isElementRegistered) {\r\n\t                        IgcGeographicHighDensityScatterSeriesComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcGeographicHighDensityScatterSeriesComponent.htmlTagName,\r\n\t                            IgcGeographicHighDensityScatterSeriesComponent);\r\n\t                    }\r\n\t            }\r\n\t/**\r\n\t * Gets whether the current series shows pixels.\r\n\t*/\r\n\tget isPixel() : boolean {\r\n\t\treturn (this.i.d8 as boolean);\r\n\t}\r\n\t/**\r\n\t * The name of the property of ItemsSource items which contains the latitude coordinate of the symbol.\r\n\t*/\r\n\tget latitudeMemberPath() : string {\r\n\t\treturn (this.i.q1 as string);\r\n\t}\r\n\tset latitudeMemberPath(v: string) {\r\n\t\tthis.i.q1 = v;\r\n\t}\r\n\t/**\r\n\t * The name of the property of ItemsSource items which contains the longitude coordinate of the symbol.\r\n\t*/\r\n\tget longitudeMemberPath() : string {\r\n\t\treturn (this.i.q3 as string);\r\n\t}\r\n\tset longitudeMemberPath(v: string) {\r\n\t\tthis.i.q3 = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the whether to use use brute force mode.\r\n\t*/\r\n\tget useBruteForce() : boolean {\r\n\t\treturn (this.i.qq as boolean);\r\n\t}\r\n\tset useBruteForce(v: boolean) {\r\n\t\tthis.i.qq = ensureBool(v);\r\n\t                                        this._a(\"useBruteForce\", this.i.qq);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the whether to progressively load the data into the chart.\r\n\t*/\r\n\tget progressiveLoad() : boolean {\r\n\t\treturn (this.i.qp as boolean);\r\n\t}\r\n\tset progressiveLoad(v: boolean) {\r\n\t\tthis.i.qp = ensureBool(v);\r\n\t                                        this._a(\"progressiveLoad\", this.i.qp);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the whether the chart reacts to mouse move events.\r\n\t*/\r\n\tget mouseOverEnabled() : boolean {\r\n\t\treturn (this.i.qo as boolean);\r\n\t}\r\n\tset mouseOverEnabled(v: boolean) {\r\n\t\tthis.i.qo = ensureBool(v);\r\n\t                                        this._a(\"mouseOverEnabled\", this.i.qo);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the density value that maps to the minimum heat color.\r\n\t*/\r\n\tget heatMinimum() : number {\r\n\t\treturn (this.i.qs as number);\r\n\t}\r\n\tset heatMinimum(v: number) {\r\n\t\tthis.i.qs = +v;\r\n\t                                        this._a(\"heatMinimum\", this.i.qs);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the value that maps to the maximum heat color.\r\n\t*/\r\n\tget heatMaximum() : number {\r\n\t\treturn (this.i.qr as number);\r\n\t}\r\n\tset heatMaximum(v: number) {\r\n\t\tthis.i.qr = +v;\r\n\t                                        this._a(\"heatMaximum\", this.i.qr);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the color to use for the minimum end of the scale.\r\n\t*/\r\n\tget heatMinimumColor() : string {\r\n\t\treturn colorToString(this.i.rm);\r\n\t}\r\n\tset heatMinimumColor(v: string) {\r\n\t\tthis.i.rm = stringToColor(v);\r\n\t                                        this._a(\"heatMinimumColor\", colorToString(this.i.rm));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the color to use for the maximum end of the scale.\r\n\t*/\r\n\tget heatMaximumColor() : string {\r\n\t\treturn colorToString(this.i.rl);\r\n\t}\r\n\tset heatMaximumColor(v: string) {\r\n\t\tthis.i.rl = stringToColor(v);\r\n\t                                        this._a(\"heatMaximumColor\", colorToString(this.i.rl));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the the pixel extent of the square data points that are rendered.\r\n\t*/\r\n\tget pointExtent() : number {\r\n\t\treturn (this.i.qv as number);\r\n\t}\r\n\tset pointExtent(v: number) {\r\n\t\tthis.i.qv = +v;\r\n\t                                        this._a(\"pointExtent\", this.i.qv);\r\n\t}\r\n\t/**\r\n\t * Represents the current status of the progressive load of the series. It will range from 0 to 100, where 100 is fully loaded.\r\n\t*/\r\n\tget progressiveStatus() : number {\r\n\t\treturn (this.i.qw as number);\r\n\t}\r\n\tset progressiveStatus(v: number) {\r\n\t\tthis.i.qw = +v;\r\n\t                                        this._a(\"progressiveStatus\", this.i.qw);\r\n\t}\r\n\t\r\n\t    private _progressiveLoadStatusChanged: (s: IgcGeographicHighDensityScatterSeriesComponent, e: IgcProgressiveLoadStatusEventArgs) => void = null;\r\n\t    private _progressiveLoadStatusChanged_wrapped: any = null;\r\n\t/**\r\n\t * Raised when the progressive loading state of the series has changed.\r\n\t*/\r\n\t\r\n\tpublic get progressiveLoadStatusChanged(): (s: IgcGeographicHighDensityScatterSeriesComponent, e: IgcProgressiveLoadStatusEventArgs) => void {\r\n\treturn this._progressiveLoadStatusChanged;\r\n\t}\r\n\t    public set progressiveLoadStatusChanged(ev: (s: IgcGeographicHighDensityScatterSeriesComponent, e: IgcProgressiveLoadStatusEventArgs) => void) {\r\n\t        if (this._progressiveLoadStatusChanged_wrapped !== null) {\r\n\t            this.i.progressiveLoadStatusChanged = delegateRemove(this.i.progressiveLoadStatusChanged, this._progressiveLoadStatusChanged_wrapped);\r\n\t            this._progressiveLoadStatusChanged_wrapped = null;\r\n\t            this._progressiveLoadStatusChanged = null;\r\n\t        }\r\n\t\r\n\t        this._progressiveLoadStatusChanged = ev;\r\n\t        this._progressiveLoadStatusChanged_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcProgressiveLoadStatusEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeProgressiveLoadStatusChanged) {\r\n\t                        (this as any).beforeProgressiveLoadStatusChanged(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._progressiveLoadStatusChanged) {\r\n\t    this._progressiveLoadStatusChanged(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.progressiveLoadStatusChanged = delegateCombine(this.i.progressiveLoadStatusChanged, this._progressiveLoadStatusChanged_wrapped);;\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcHighDensityScatterSeriesModule } from 'igniteui-charts/igc-high-density-scatter-series-module';\r\n\r\nimport { IgcGeographicHighDensityScatterSeriesComponent } from './igc-geographic-high-density-scatter-series-component';\r\nimport { GeographicHighDensityScatterSeries } from './GeographicHighDensityScatterSeries';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcGeographicHighDensityScatterSeriesModule {\r\n    public static register(): void {\r\nIgcHighDensityScatterSeriesModule.register();\r\n        IgcGeographicHighDensityScatterSeriesComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcGeographicHighDensityScatterSeriesComponent\", IgcGeographicHighDensityScatterSeriesComponent);\r\n        TypeRegistrar.register(\"GeographicHighDensityScatterSeries\", (<any>GeographicHighDensityScatterSeries).$type);\r\n    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { GeographicMapImagery } from \"./GeographicMapImagery\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { ArcGISOnlineTileSource } from \"igniteui-core/ArcGISOnlineTileSource\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { Base, Type, String_$type, Boolean_$type, typeCast, markType } from \"igniteui-core/type\";\r\nimport { Uri } from \"igniteui-core/Uri\";\r\nimport { TokenResponseModel } from \"./TokenResponseModel\";\r\nimport { MapServerResponseModel } from \"./MapServerResponseModel\";\r\nimport { TileInfoResponseModel } from \"./TileInfoResponseModel\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\nimport { UriKind } from \"igniteui-core/UriKind\";\r\nimport { HttpRequestUtil } from \"igniteui-core/httpRequestUtil\";\r\nimport { stringIsNullOrEmpty, stringRemove } from \"igniteui-core/string\";\r\nimport { stringFormat1, stringFormat } from \"igniteui-core/stringExtended\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class ArcGISOnlineMapImagery extends GeographicMapImagery {\r\n\tstatic $t: Type = markType(ArcGISOnlineMapImagery, 'ArcGISOnlineMapImagery', (<any>GeographicMapImagery).$);\r\n\tprivate static readonly bv: string = \"generateToken?username={0}&password={1}&client=referer&referer={2}&expiration={3}&f=pjson\";\r\n\tconstructor() {\r\n\t\tsuper(new ArcGISOnlineTileSource());\r\n\t\tthis.bt = \"localhost\";\r\n\t\tthis.bu = \"https://www.arcgis.com/sharing/\";\r\n\t\tthis.bp = 60;\r\n\t\tthis.userToken = null;\r\n\t\tthis.getResponseCompleted_MapServerResponse = this.getResponseCompleted_MapServerResponse.bind(this);\r\n\t\tthis.getResponseCompleted_TokenResponse = this.getResponseCompleted_TokenResponse.bind(this);\r\n\t}\r\n\tstatic readonly mapServerUriProperty: DependencyProperty = DependencyProperty.i(\"MapServerUri\", String_$type, (<any>ArcGISOnlineMapImagery).$, new PropertyMetadata(2, null, ArcGISOnlineMapImagery.cd));\r\n\tget mapServerUri(): string {\r\n\t\treturn <string>this.c(ArcGISOnlineMapImagery.mapServerUriProperty);\r\n\t}\r\n\tset mapServerUri(a: string) {\r\n\t\tthis.h(ArcGISOnlineMapImagery.mapServerUriProperty, a);\r\n\t}\r\n\tprivate static cd(a: DependencyObject, b: DependencyPropertyChangedEventArgs): void {\r\n\t\t(<ArcGISOnlineMapImagery>a).cf(\"MapServerUri\", b.oldValue, b.newValue);\r\n\t}\r\n\tstatic readonly userNameProperty: DependencyProperty = DependencyProperty.i(\"UserName\", String_$type, (<any>ArcGISOnlineMapImagery).$, new PropertyMetadata(2, null, ArcGISOnlineMapImagery.cg));\r\n\tget userName(): string {\r\n\t\treturn <string>this.c(ArcGISOnlineMapImagery.userNameProperty);\r\n\t}\r\n\tset userName(a: string) {\r\n\t\tthis.h(ArcGISOnlineMapImagery.userNameProperty, a);\r\n\t}\r\n\tprivate static cg(a: DependencyObject, b: DependencyPropertyChangedEventArgs): void {\r\n\t\t(<ArcGISOnlineMapImagery>a).cf(\"UserName\", b.oldValue, b.newValue);\r\n\t}\r\n\tstatic readonly passwordProperty: DependencyProperty = DependencyProperty.i(\"Password\", String_$type, (<any>ArcGISOnlineMapImagery).$, new PropertyMetadata(2, null, ArcGISOnlineMapImagery.ce));\r\n\tget password(): string {\r\n\t\treturn <string>this.c(ArcGISOnlineMapImagery.passwordProperty);\r\n\t}\r\n\tset password(a: string) {\r\n\t\tthis.h(ArcGISOnlineMapImagery.passwordProperty, a);\r\n\t}\r\n\tprivate static ce(a: DependencyObject, b: DependencyPropertyChangedEventArgs): void {\r\n\t\t(<ArcGISOnlineMapImagery>a).cf(\"Password\", b.oldValue, b.newValue);\r\n\t}\r\n\tstatic readonly userTokenProperty: DependencyProperty = DependencyProperty.i(\"UserToken\", String_$type, (<any>ArcGISOnlineMapImagery).$, new PropertyMetadata(2, null, ArcGISOnlineMapImagery.ch));\r\n\tget userToken(): string {\r\n\t\treturn <string>this.c(ArcGISOnlineMapImagery.userTokenProperty);\r\n\t}\r\n\tset userToken(a: string) {\r\n\t\tthis.h(ArcGISOnlineMapImagery.userTokenProperty, a);\r\n\t}\r\n\tprivate static ch(a: DependencyObject, b: DependencyPropertyChangedEventArgs): void {\r\n\t\t(<ArcGISOnlineMapImagery>a).cf(\"UserToken\", b.oldValue, b.newValue);\r\n\t}\r\n\tstatic readonly isMapPublicProperty: DependencyProperty = DependencyProperty.i(\"IsMapPublic\", Boolean_$type, (<any>ArcGISOnlineMapImagery).$, new PropertyMetadata(2, true, ArcGISOnlineMapImagery.cc));\r\n\tget isMapPublic(): boolean {\r\n\t\treturn <boolean>this.c(ArcGISOnlineMapImagery.isMapPublicProperty);\r\n\t}\r\n\tset isMapPublic(a: boolean) {\r\n\t\tthis.h(ArcGISOnlineMapImagery.isMapPublicProperty, a);\r\n\t}\r\n\tprivate static cc(a: DependencyObject, b: DependencyPropertyChangedEventArgs): void {\r\n\t\t(<ArcGISOnlineMapImagery>a).cf(\"IsMapPublic\", b.oldValue, b.newValue);\r\n\t}\r\n\tprivate bp: number = 0;\r\n\tget defaultTokenTimeout(): number {\r\n\t\treturn this.bp;\r\n\t}\r\n\tset defaultTokenTimeout(a: number) {\r\n\t\tthis.bp = a;\r\n\t\tthis.b8(true);\r\n\t}\r\n\tprivate bu: string = null;\r\n\tget tokenGenerationEndPoint(): string {\r\n\t\treturn this.bu;\r\n\t}\r\n\tset tokenGenerationEndPoint(a: string) {\r\n\t\tthis.bu = a;\r\n\t\tthis.b8(true);\r\n\t}\r\n\tprivate bt: string = null;\r\n\tget refererUri(): string {\r\n\t\treturn this.bt;\r\n\t}\r\n\tset refererUri(a: string) {\r\n\t\tthis.bt = a;\r\n\t\tthis.b8(true);\r\n\t}\r\n\tacquireNewToken(): void {\r\n\t\tthis.b8(true);\r\n\t}\r\n\tprivate b9(a: () => void): void {\r\n\t\ta();\r\n\t}\r\n\tprivate b8(a: boolean): void {\r\n\t\tif (stringIsNullOrEmpty(this.userToken) && a == false) {\r\n\t\t\tthis.ci();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet b = this.tokenGenerationEndPoint;\r\n\t\tif (stringIsNullOrEmpty(b)) {\r\n\t\t\tthis.userToken = \"\";\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (b.substr(b.length - 1, 1) != \"/\") {\r\n\t\t\tb += \"/\";\r\n\t\t}\r\n\t\tif (stringIsNullOrEmpty(this.refererUri)) {\r\n\t\t\tthis.userToken = \"\";\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet c = this.defaultTokenTimeout;\r\n\t\tif (c < 1) {\r\n\t\t\tc = 1;\r\n\t\t}\r\n\t\tb += stringFormat1(ArcGISOnlineMapImagery.bv, this.userName, this.password, this.refererUri, c);\r\n\t\tif (!Uri.isWellFormedUriString(b, 1)) {\r\n\t\t\tthis.userToken = \"\";\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet url_ = b;\r\n\t\tthis._pendingTokenRequest_ = HttpRequestUtil.submit(url_, this.getResponseCompleted_TokenResponse, null );\r\n\t}\r\n\tprivate ci(): void {\r\n\t\tif (stringIsNullOrEmpty(this.mapServerUri)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet a = this.mapServerUri;\r\n\t\tif (a.substr(a.length - 1, 1) == \"/\") {\r\n\t\t\tstringRemove(a, a.length - 1, 1);\r\n\t\t}\r\n\t\tif (!this.isMapPublic) {\r\n\t\t\tif (stringIsNullOrEmpty(this.userToken)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\ta = stringFormat(\"{0}?f=json&token={1}\", a, this.userToken);\r\n\t\t} else {\r\n\t\t\ta = stringFormat(\"{0}?f=json\", a);\r\n\t\t}\r\n\t\tif (!Uri.isWellFormedUriString(a, 1)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet url_ = a;\r\n\t\tthis._pendingMapServerRequest_ = HttpRequestUtil.submit(url_, this.getResponseCompleted_MapServerResponse, null );\r\n\t}\r\n\tprivate _pendingTokenRequest_: any = null;\r\n\tprivate _pendingMapServerRequest_: any = null;\r\n\tprivate getResponseCompleted_TokenResponse(a: any, b: any): void {\r\n\t\tif (b != this._pendingTokenRequest_) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._pendingTokenRequest_ = null;\r\n\t\tlet data_ = a;\r\n\t\tlet c: TokenResponseModel = <TokenResponseModel>( JSON.parse(data_));\r\n\t\tif (c != null) {\r\n\t\t\tlet d: string = \"\";\r\n\t\t\tif (c.token != null) {\r\n\t\t\t\td = c.token;\r\n\t\t\t}\r\n\t\t\tthis.userToken = d;\r\n\t\t}\r\n\t}\r\n\tprivate getResponseCompleted_MapServerResponse(a: any, b: any): void {\r\n\t\tif (b != this._pendingMapServerRequest_) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._pendingMapServerRequest_ = null;\r\n\t\tlet data_ = a;\r\n\t\tlet c: MapServerResponseModel = <MapServerResponseModel>( JSON.parse(data_));\r\n\t\tif ((c != null) && (c.tileInfo != null)) {\r\n\t\t\t(<ArcGISOnlineTileSource>this.ap).levelOfDetail = c.tileInfo.lods.length;\r\n\t\t}\r\n\t}\r\n\tprivate cf(a: string, b: any, c: any): void {\r\n\t\tlet d = typeCast<ArcGISOnlineTileSource>((<any>ArcGISOnlineTileSource).$, this.ap);\r\n\t\tswitch (a) {\r\n\t\t\tcase \"MapServerUri\":\r\n\t\t\tif (d != null) {\r\n\t\t\t\td.mapServerUri = typeCast<string>(String_$type, c);\r\n\t\t\t}\r\n\t\t\tthis.ci();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"UserName\":\r\n\r\n\t\t\tcase \"Password\":\r\n\t\t\tif (stringIsNullOrEmpty(this.userName) || stringIsNullOrEmpty(this.password)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.b8(true);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"UserToken\":\r\n\t\t\tthis.b9(() => d.userToken = this.userToken);\r\n\t\t\tthis.ci();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"IsMapPublic\":\r\n\t\t\td.isMapPublic = this.isMapPublic;\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t\tsuper.ba(a, b, c);\r\n\t}\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { IgcGeographicMapImagery } from \"./igc-geographic-map-imagery\";\r\nimport { ArcGISOnlineMapImagery as ArcGISOnlineMapImagery_internal } from \"./ArcGISOnlineMapImagery\";\r\nimport { ensureBool } from \"igniteui-core/componentUtil\";\r\n\r\n/**\r\n * UI element class used to display ArcGIS Online Map imagery in the IgxGeographicMap.Component\r\n*/\r\nexport class IgcArcGISOnlineMapImagery extends IgcGeographicMapImagery\r\n{\r\n\r\nprotected createImplementation() : ArcGISOnlineMapImagery_internal\r\n{\r\n\treturn new ArcGISOnlineMapImagery_internal();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : ArcGISOnlineMapImagery_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\t/**\r\n\t * Gets or sets the map tile server uri.\r\n\t*/\r\n\tget mapServerUri() : string {\r\n\t\treturn (this.i.mapServerUri as string);\r\n\t}\r\n\tset mapServerUri(v: string) {\r\n\t\tthis.i.mapServerUri = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the UserName.\r\n\t*/\r\n\tget userName() : string {\r\n\t\treturn (this.i.userName as string);\r\n\t}\r\n\tset userName(v: string) {\r\n\t\tthis.i.userName = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the Password.\r\n\t*/\r\n\tget password() : string {\r\n\t\treturn (this.i.password as string);\r\n\t}\r\n\tset password(v: string) {\r\n\t\tthis.i.password = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the UserToken.\r\n\t*/\r\n\tget userToken() : string {\r\n\t\treturn (this.i.userToken as string);\r\n\t}\r\n\tset userToken(v: string) {\r\n\t\tthis.i.userToken = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the IsMapPublic variable.  A value of false requires authentication parameters.\r\n\t*/\r\n\tget isMapPublic() : boolean {\r\n\t\treturn (this.i.isMapPublic as boolean);\r\n\t}\r\n\tset isMapPublic(v: boolean) {\r\n\t\tthis.i.isMapPublic = ensureBool(v);\r\n\t}\r\n\t/**\r\n\t * Gets or Sets the Default Token Timeout before the Token Expires, this value is in Minutes\r\n\t*/\r\n\tget defaultTokenTimeout() : number {\r\n\t\treturn (this.i.defaultTokenTimeout as number);\r\n\t}\r\n\tset defaultTokenTimeout(v: number) {\r\n\t\tthis.i.defaultTokenTimeout = +v;\r\n\t}\r\n\t/**\r\n\t * Gets or Sets the current endpoint to retrieve the token.\r\n\t*/\r\n\tget tokenGenerationEndPoint() : string {\r\n\t\treturn (this.i.tokenGenerationEndPoint as string);\r\n\t}\r\n\tset tokenGenerationEndPoint(v: string) {\r\n\t\tthis.i.tokenGenerationEndPoint = v;\r\n\t}\r\n\t/**\r\n\t * Contains the User Supplied Referer Uri to be used in Token Generation.\r\n\t*/\r\n\tget refererUri() : string {\r\n\t\treturn (this.i.refererUri as string);\r\n\t}\r\n\tset refererUri(v: string) {\r\n\t\tthis.i.refererUri = v;\r\n\t}\r\n\t/**\r\n\t * Retreives a new token based on the preconfigured parameters and updates the UserToken field, Normal this is called automatically.\r\n\t * The is provided to the end-user to allow them to reteive tokens on their onw.\r\n\t\r\n\t*/\r\n\tpublic acquireNewToken() {\r\n\t\tthis.i.acquireNewToken();\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\n\r\nimport { IgcArcGISOnlineMapImagery } from './igc-arc-gis-online-map-imagery';\r\nimport { ArcGISOnlineMapImagery } from './ArcGISOnlineMapImagery';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcArcGISOnlineMapImageryModule {\r\n    public static register(): void {\r\n        \r\n        TypeRegistrar.registerCons(\"IgcArcGISOnlineMapImagery\", IgcArcGISOnlineMapImagery);\r\n        TypeRegistrar.register(\"ArcGISOnlineMapImagery\", (<any>ArcGISOnlineMapImagery).$type);\r\n    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcSeriesComponent } from 'igniteui-charts/igc-series-component';\r\nimport { GridMode, GridMode_$type } from 'igniteui-charts/GridMode';\r\nimport { IgcSeriesViewerComponent } from 'igniteui-charts/igc-series-viewer-component';\r\nimport { WebComponentRenderer, WebComponentWrapper } from 'igniteui-core/web-component-renderer';\r\nimport { Visibility, Visibility_$type } from 'igniteui-core/Visibility';\r\nimport { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { PointUtil, IEnumerable, TypeRegistrar, delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { Brush } from 'igniteui-core/Brush';\r\nimport { Color } from 'igniteui-core/Color';\r\nimport { Series } from 'igniteui-charts/Series';\r\nimport { Rect } from 'igniteui-core/Rect';\r\nimport { DataTemplate } from 'igniteui-core/DataTemplate';\r\nimport { BrushCollection } from 'igniteui-core/BrushCollection';\r\nimport { XamGeographicMap } from './XamGeographicMap';\r\nimport { CollectionAdapter, brushToString, stringToBrush, toPoint, fromPoint, toRect, fromRect, fromBrushCollection, toBrushCollection, ensureBool, ensureEnum, initializePropertiesFromCss, NamePatcher, enumToString, brushCollectionToString, rectToString, toSpinal } from \"igniteui-core/componentUtil\";\r\nimport { DataChartStylingDefaults } from 'igniteui-charts/DataChartStylingDefaults';\r\nimport { IgcDataContext } from 'igniteui-core/igc-data-context';\r\nimport { IgcSeriesCollection } from 'igniteui-charts/igc-series-collection';\r\nimport { SyncableObservableCollection$2 } from 'igniteui-core/SyncableObservableCollection$2';\r\nimport { NotifyCollectionChangedAction } from 'igniteui-core/NotifyCollectionChangedAction';\r\nimport { getAllPropertyNames, fromSpinal } from \"igniteui-core/componentUtil\";\r\nimport { IgEvent } from 'igniteui-core/IgEvent';\r\n\r\nimport { IgcNumericXAxisComponent } from 'igniteui-charts/igc-numeric-x-axis-component';\r\nimport { IgcNumericYAxisComponent } from 'igniteui-charts/igc-numeric-y-axis-component';\r\nimport { IgcImageTilesReadyEventArgs } from './igc-image-tiles-ready-event-args';\r\nimport { IgcGeographicMapImagery } from './igc-geographic-map-imagery';\r\nimport { RegisterElementHelper } from 'igniteui-core/module-manager';\r\nimport { MapResizeBehavior, MapResizeBehavior_$type } from './MapResizeBehavior';\r\nimport { MapBackgroundTilingMode, MapBackgroundTilingMode_$type } from './MapBackgroundTilingMode';\r\n\r\nexport class IgcGeographicMapComponent extends IgcSeriesViewerComponent {\r\n\r\n    contentSeries: IgcSeriesComponent[] = [];\r\n\r\n\tprivate _height: string;\r\n    private _width: string;\r\n\r\n    set height(value: string) {\r\n        this._height = value;\r\n        this.style.height = value;\r\n        this.notifyContainerResized();\r\n    }\r\n    get height(): string {\r\n        return this._height;\r\n    }\r\n\r\n    set width(value: string) {\r\n        this._width = value;\r\n        this.style.width = value;\r\n        this.notifyContainerResized();\r\n    }\r\n    get width(): string {\r\n        return this._width;\r\n    }\r\n\r\n    public notifyContainerResized() {\r\n        this._chart.notifyContainerResized();\r\n    }\r\n\r\n    /**\r\n\t * Gets or sets the legend used for the current chart.\r\n\t*/\r\n    get legend(): any {\r\n        if (this.i.legend != null)\r\n            return (<any>this.i.legend).externalObject;\r\n    }\r\n    set legend(v: any) {\r\n        if (v != undefined && v != null)\r\n            this.i.legend = v.i;\r\n    }\r\n\r\n\t/**\r\n\t * The series actually present in the chart. Do not directly modify this array.\r\n\t * This array's contents can be modified by causing Angular to reproject the child content.\r\n\t * Or adding and removing series from the manual series collection on the series property.\r\n\t */\r\n\tactualSeries: IgcSeriesComponent[] = [];\r\n\t\r\n\tprivate _container: any;\r\n\r\n\tprivate _series: IgcSeriesCollection = null;\r\n\t/**\r\n\t * A collection or manually added series for the chart.\r\n\t*/\r\n    get series(): IgcSeriesCollection {\r\n        if (this._series === null) {\r\n            let coll = new IgcSeriesCollection();\r\n            let inner: SyncableObservableCollection$2<IgcSeriesComponent, Series> = (<any>coll)._innerColl;\r\n            inner.addListener((sender, e) => {\r\n                if (!this._seriesAdapter) {\r\n                    return;\r\n                }\r\n                switch (e.action) {\r\n                    case NotifyCollectionChangedAction.Add:\r\n                        this._seriesAdapter.addManualItem(e.newItems.item(0));\r\n                        break;\r\n                    case NotifyCollectionChangedAction.Remove:\r\n                        this._seriesAdapter.removeManualItemAt(e.oldStartingIndex);\r\n                        break;\r\n                    case NotifyCollectionChangedAction.Replace:\r\n                        this._seriesAdapter.removeManualItemAt(e.oldStartingIndex);\r\n                        this._seriesAdapter.insertManualItem(e.newStartingIndex, e.newItems.item(0));\r\n                        break;\r\n                    case NotifyCollectionChangedAction.Reset:\r\n                        this._seriesAdapter.clearManualItems();\r\n                        break;\r\n                }\r\n            });\r\n            this._series = coll;\r\n        }\r\n        return this._series;\r\n    }\r\n\r\n    private _renderer: WebComponentRenderer;\r\n\r\n    constructor() {\r\n\r\n        super();\r\n\r\n        if ((this as any)._styling) {\r\n            NamePatcher.ensureStylablePatched(Object.getPrototypeOf(this));\r\n        }\r\n        this._renderer = new WebComponentRenderer(this,\r\n            document,\r\n            true, DataChartStylingDefaults);\r\n\r\n        //this._implementation = this.createImplementation();\r\n        this._container = this._renderer.createElement(\"div\");\r\n        this._renderer.updateRoot(this._container);\r\n        //this._renderer.rootWrapper.append(this._container);\r\n        this._container.setStyleProperty(\"display\", \"block\");\r\n        this._container.setStyleProperty(\"width\", \"100%\");\r\n        this._container.setStyleProperty(\"height\", \"100%\");\r\n\r\n        var root: any;\r\n        root = this._container;\r\n        if (this._container.nativeElement != null) {\r\n            root = this._container.nativeElement;\r\n        }\r\n\r\n        this._wrapper = this._renderer;\r\n        var chart = this.i;\r\n        this._chart = chart;\r\n\r\n        this._seriesAdapter = new CollectionAdapter<IgcSeriesComponent, Series>(\r\n            this.contentSeries,\r\n            this.i.series,\r\n            this.actualSeries,\r\n            (c) => c.i,\r\n            (i) => {\r\n                (<any>i).owner = this;\r\n                (<any>i)._provideRenderer(this._dataSource);\r\n                i.provideData(this._dataSource);\r\n                if (this.parentElement) {\r\n                    (i as any)._styling(this, this, this);\r\n                }\r\n                //i.bindAxes(this.axes);\r\n                this._ensureDefaultTooltip(i);\r\n                this._ensureTooltipCreated(i);\r\n            },\r\n            (i) => { (<any>i)._provideRenderer(null); i.provideData(null); }\r\n        );\r\n\r\n        chart.provideContainer(this._renderer);\r\n\r\n        let mut = new MutationObserver((list) => {\r\n            for (var mutation of list) {\r\n                if (mutation.type == 'childList') {\r\n                    this.updateContentChildren();\r\n                }\r\n            }\r\n        });\r\n        mut.observe(this, {\r\n            childList: true\r\n        });\r\n\r\n        this._renderer.addSizeWatcher(() => {\r\n            this.notifyContainerResized();\r\n        });\r\n    }\r\n\r\n    destroy() {\r\n        this._chart.destroy();\r\n        this._wrapper.destroy();\r\n    }\r\n\r\n\tprivate _wrapper: WebComponentRenderer;\r\n\r\n\tprotected createImplementation() {\r\n\t\treturn new XamGeographicMap();\r\n\t}\r\n\r\n\tprivate _chart: any;\r\n\r\n    private _dataSource: any = null;\r\n    set dataSource(value: any) {\r\n\t\tthis._dataSource = value;\r\n\t\tthis.bindData();\r\n\t}\r\n\tget dataSource(): any {\r\n\t\treturn this._dataSource;\r\n\t}\r\n\r\n\tbindData() {\r\n\t\r\n\t\tif (this.actualSeries && this.actualSeries.length > 0) {\r\n\t\t\tvar currSeries = this.actualSeries;\r\n\t\t\tfor (var i = 0; i < currSeries.length; i++) {\r\n\t\t\t\tcurrSeries[i].provideData(this._dataSource);\r\n\t\t\t}\r\n\t\t}\r\n    }\r\n\r\n    private updateContentChildren() {\r\n        this.contentSeries.length = 0;\r\n        for (var i = 0; i < this.children.length; i++) {\r\n            if (this.children[i] instanceof IgcSeriesComponent) {\r\n                this.contentSeries.push(<IgcSeriesComponent>this.children[i]);\r\n            }\r\n        }\r\n        \r\n        if (this._seriesAdapter != null) {\r\n            this._seriesAdapter.notifyContentChanged();\r\n        }\r\n    }\r\n\r\n    private _seriesAdapter: CollectionAdapter<IgcSeriesComponent, Series> = null;\r\n\r\n    private _disconnected = false;\r\n    disconnectedCallback() {\r\n        this._disconnected = true;\r\n        if (this.i) {\r\n            this.i.onDetachedFromUI();\r\n        }\r\n    }\r\n\r\n    connectedCallback() {\r\n        if (this._disconnected) {\r\n            this._disconnected = false;\r\n            if (this.i) {\r\n                this.i.onAttachedToUI();\r\n            }\r\n            return;\r\n        }\r\n        this.classList.add(\"igc-geographic-map\");\r\n        this.classList.add(\"ig-geographic-map\");\r\n\r\n        this.appendChild(this._renderer.rootWrapper.getNativeElement());\r\n        this._attached = true;\r\n        this.style.display = \"block\";\r\n        this.style.height = this._height;\r\n        this.style.width = this._width;\r\n        this._flushQueuedAttributes();\r\n        // supports themes or custom properties set in CSS \r\n        this._styling(this, this);\r\n        for (let i = 0; i < this.actualSeries.length; i++) {\r\n            let s = this.actualSeries[i];\r\n            (s as any)._styling(this, this, this);\r\n        }\r\n\r\n        this.updateContentChildren();\r\n        this.afterContentInit();\r\n    }\r\n\r\n\tafterContentInit() {\r\n\t\tif (TypeRegistrar.isRegistered(\"IgcDataChartDefaultTooltipsComponent\")) {\r\n\t\t\tlet cr = TypeRegistrar.create(\"IgcDataChartDefaultTooltipsComponent\");\r\n\t\t\t//let cr = cf.create(this._injector);\r\n            this._defaultTooltips = cr;\r\n\t\t\t(<any>cr).onContentReady = () => {\r\n\t\t\t\tthis._onDefaultTooltipsReady(cr);\r\n\t\t\t};\r\n\t\t\t//this._container.appendChild(cr.location.nativeElement);\r\n\t\t}\r\n\r\n\t\t\t\r\n\t\t\r\n\t\tthis.i.notifyContainerResized();\r\n\t}\r\n\r\n    private _ensureTooltipCreated(series: any) {\r\n        (<any>series)._ensureTooltipCreated(\r\n\t\t\t() => this.createTooltip(),\r\n\t\t\t(ele) => {\r\n\t\t\t\tlet wrapper = new WebComponentWrapper(\r\n\t\t\t\t\tele,\r\n\t\t\t\t\tthis._renderer\r\n\t\t\t\t);\r\n\t\t\t\t(<any>wrapper).updateToolTip = (<any>ele).updateToolTip;\r\n\t\t\t\t(<any>wrapper).hideToolTip = (<any>ele).hideToolTip;\r\n\t\t\t\treturn wrapper;\r\n\t\t\t});\r\n    }\r\n\r\n    private _defaultTooltips: any = null;\r\n\tprivate _ensureDefaultTooltip(series: IgcSeriesComponent) {\r\n        if (this._defaultTooltips == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n        this._defaultTooltips[\"ensureDefaultTooltip\"](series);\r\n\t}\r\n\r\n\tprivate _onDefaultTooltipsReady(cr: any) {\r\n\t\tif (this.actualSeries && this.actualSeries.length > 0) {\r\n\t\t\tvar currSeries = this.actualSeries;\r\n\t\t\tfor (var i = 0; i < currSeries.length; i++) {\r\n\t\t\t\tif (currSeries[i].showDefaultTooltip) {\r\n\t\t\t\t\tthis._ensureDefaultTooltip(currSeries[i])\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n    private createTooltip(): Element {\r\n\t\tif (!TypeRegistrar.isRegistered(\"IgcTooltipContainerComponent\")) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tlet cr = TypeRegistrar.create(\"IgcTooltipContainerComponent\");\r\n\t\tlet ele: Element = cr;\r\n\t\tlet self = this;\r\n\r\n\t\t(<any>ele).updateToolTip = function (c, isSubContent?: boolean) {\r\n            if (c.externalObject) {\r\n                c = c.externalObject;\r\n            } else {\r\n                let ext = new IgcDataContext();\r\n                (<any>ext)._implementation = c;\r\n                c = ext;\r\n            }\r\n\r\n            if (!isSubContent) {\r\n                if (ele.parentElement != self._container.getNativeElement()) {\r\n                    if (ele.parentElement != null) {\r\n                        ele.parentElement.removeChild(ele);\r\n                    }\r\n\r\n                    self._container.getNativeElement().appendChild(ele);\r\n                }\r\n            } else {\r\n                c.isSubContent = true;\r\n            }\r\n\t\t\t(<any>cr).context = c;\r\n\t\t\t(<any>ele).style.display = \"block\";\r\n\r\n\t\t\treturn true;\r\n\t\t};\r\n\t\t(<any>ele).hideToolTip = function () {\r\n\t\t\t(<any>ele).style.display = \"none\"\r\n\t\t};\r\n\t\t(<any>ele).style.display = \"none\"\r\n\r\n\t\treturn cr;\r\n    }\r\n\r\n    /**\r\n\t * An imagery to display behind all series, inside the viewport of the IgxGeographicMapComponent control.\r\n\t*/\r\n    get backgroundContent(): IgcGeographicMapImagery {\r\n        if (this.i.backgroundContent != null) {\r\n            return (<any>this.i.backgroundContent).externalObject;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n    set backgroundContent(v: IgcGeographicMapImagery) {\r\n        if (typeof (v) == \"string\" && v == \"empty\") {\r\n            this.i.backgroundContent = null;\r\n            this._a(\"backgroundContent\", \"empty\");\r\n            return;\r\n        }\r\n        if (v != undefined && v != null) {\r\n            this.i.backgroundContent = v.i;\r\n        } else {\r\n            this.i.backgroundContent = null;\r\n            this._a(\"backgroundContent\", \"empty\");\r\n        }\r\n    }\r\n\r\n    \t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : XamGeographicMap {\r\n\t\treturn this._implementation;\r\n\t}\r\n\r\n    \r\n\r\n    \t\r\n\t                private static _observedAttributesIgcGeographicMapComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicMapComponent._observedAttributesIgcGeographicMapComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicMapComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicMapComponent._observedAttributesIgcGeographicMapComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicMapComponent._observedAttributesIgcGeographicMapComponent;               \r\n\t                }                 \r\n\t            \r\n\r\n    \t\r\n\t                public static htmlTagName: string = \"igc-geographic-map\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcGeographicMapComponent._isElementRegistered) {\r\n\t                        IgcGeographicMapComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcGeographicMapComponent.htmlTagName,\r\n\t                            IgcGeographicMapComponent);\r\n\t                    }\r\n\t            }\r\n\r\n\t\t/**\r\n\t * Gets or sets zoomability of the current control\r\n\t*/\r\n\tget zoomable() : boolean {\r\n\t\treturn (this.i.up as boolean);\r\n\t}\r\n\tset zoomable(v: boolean) {\r\n\t\tthis.i.up = ensureBool(v);\r\n\t                                        this._a(\"zoomable\", this.i.up);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the behavior to use during resize.\r\n\t*/\r\n\tget resizeBehavior() : MapResizeBehavior {\r\n\t\treturn this.i.ui;\r\n\t}\r\n\tset resizeBehavior(v: MapResizeBehavior) {\r\n\t\tthis.i.ui = ensureEnum<MapResizeBehavior>(MapResizeBehavior_$type, v);\r\n\t                                        this._a(\"resizeBehavior\", enumToString<MapResizeBehavior>(MapResizeBehavior_$type, this.i.ui));\r\n\t}\r\n\t/**\r\n\t * Gets or sets if the map should horizontally wrap.\r\n\t*/\r\n\tget isHorizontalWrappingEnabled() : boolean {\r\n\t\treturn (this.i.um as boolean);\r\n\t}\r\n\tset isHorizontalWrappingEnabled(v: boolean) {\r\n\t\tthis.i.um = ensureBool(v);\r\n\t                                        this._a(\"isHorizontalWrappingEnabled\", this.i.um);\r\n\t}\r\n\t/**\r\n\t * Gets or sets if the map should horizontally wrap.\r\n\t*/\r\n\tget backgroundTilingMode() : MapBackgroundTilingMode {\r\n\t\treturn this.i.ue;\r\n\t}\r\n\tset backgroundTilingMode(v: MapBackgroundTilingMode) {\r\n\t\tthis.i.ue = ensureEnum<MapBackgroundTilingMode>(MapBackgroundTilingMode_$type, v);\r\n\t                                        this._a(\"backgroundTilingMode\", enumToString<MapBackgroundTilingMode>(MapBackgroundTilingMode_$type, this.i.ue));\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether to use the uncoerced world rect to constrain the zoom bounds.\r\n\t*/\r\n\tget useWorldRectForZoomBounds() : boolean {\r\n\t\treturn (this.i.uo as boolean);\r\n\t}\r\n\tset useWorldRectForZoomBounds(v: boolean) {\r\n\t\tthis.i.uo = ensureBool(v);\r\n\t                                        this._a(\"useWorldRectForZoomBounds\", this.i.uo);\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether skip resetting the zoom when the world rect changes.\r\n\t*/\r\n\tget suppressZoomResetOnWorldRectChange() : boolean {\r\n\t\treturn (this.i.un as boolean);\r\n\t}\r\n\tset suppressZoomResetOnWorldRectChange(v: boolean) {\r\n\t\tthis.i.un = ensureBool(v);\r\n\t                                        this._a(\"suppressZoomResetOnWorldRectChange\", this.i.un);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the world bounding rectangle.\r\n\t*/\r\n\tget worldRect() : IgRect {\r\n\t\treturn fromRect(this.i.wk);\r\n\t}\r\n\tset worldRect(v: IgRect) {\r\n\t\tthis.i.wk = toRect(v);\r\n\t                                        this._a(\"worldRect\", rectToString(this.i.wk));\r\n\t}\r\n\t/**\r\n\t * Gets the actual value of the WorldRect.\r\n\t*/\r\n\tget actualWorldRect() : IgRect {\r\n\t\treturn fromRect(this.i.v8);\r\n\t}\r\n\tset actualWorldRect(v: IgRect) {\r\n\t\tthis.i.v8 = toRect(v);\r\n\t                                        this._a(\"actualWorldRect\", rectToString(this.i.v8));\r\n\t}\r\n\t/**\r\n\t * The X-axis for this IgxGeographicMap.Component\r\n\t * Under normal circumstances, this property should not be set in application code.  By default, it will be set to a numeric axis with a spherical mercator scaler.\r\n\t*/\r\n\tget xAxis() : IgcNumericXAxisComponent {\r\n\t                                        const r = this.i.t7;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcNumericXAxisComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset xAxis(v: IgcNumericXAxisComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.t7 = null : this.i.t7 = v.i;\r\n\t}\r\n\t/**\r\n\t * The Y-axis for this IgxGeographicMap.Component\r\n\t * Under normal circumstances, this property should not be set in application code.  By default, it will be set to a numeric axis with a spherical mercator scaler.\r\n\t*/\r\n\tget yAxis() : IgcNumericYAxisComponent {\r\n\t                                        const r = this.i.t9;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcNumericYAxisComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset yAxis(v: IgcNumericYAxisComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.t9 = null : this.i.t9 = v.i;\r\n\t}\r\n\t/**\r\n\t * Indicates if this SeriesViewer is a map.\r\n\t*/\r\n\tget isMap() : boolean {\r\n\t\treturn (this.i.el as boolean);\r\n\t}\r\n\t/**\r\n\t * A number between 0 and 1 determining the scale of the horizontal/vertical zoom.\r\n\t * This property is effectively a shortcut to the Width/Height of the WindowRect property.\r\n\t*/\r\n\tget windowScale() : number {\r\n\t\treturn (this.i.uu as number);\r\n\t}\r\n\tset windowScale(v: number) {\r\n\t\tthis.i.uu = +v;\r\n\t                                        this._a(\"windowScale\", this.i.uu);\r\n\t}\r\n\t/**\r\n\t * A number between 0 and 1 determining the scale of the horizontal/vertical zoom.\r\n\t * This property is effectively a shortcut to the Width/Height of the ActualWindowRect property.\r\n\t*/\r\n\tget actualWindowScale() : number {\r\n\t\treturn (this.i.ut as number);\r\n\t}\r\n\tset actualWindowScale(v: number) {\r\n\t\tthis.i.ut = +v;\r\n\t                                        this._a(\"actualWindowScale\", this.i.ut);\r\n\t}\r\n\t/**\r\n\t * Gets whether or not the control is ready for zooming\r\n\t*/\r\n\tget zoomIsReady() : boolean {\r\n\t\treturn (this.i.uq as boolean);\r\n\t}\r\n\r\n    \t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    var baseResult = super.findByName(name);\r\n\t    if (baseResult)\r\n\t    {\r\n\t        return baseResult;\r\n\t    }\r\n\t\r\n\tif (this.backgroundContent && (this.backgroundContent as any).name && (this.backgroundContent as any).name == name) { return this.backgroundContent; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\r\n    \t\r\n\t        protected _styling(container: any, component: any, parent?: any) {\r\n\t            super._styling(container, component, parent);\r\n\t\r\n\t            this._inStyling = true;\r\n\t            if (this.xAxis && (this.xAxis as any)._styling) {\r\n\t    (this.xAxis as any)._styling(container, component, this);\r\n\t}\r\n\tif (this.yAxis && (this.yAxis as any)._styling) {\r\n\t    (this.yAxis as any)._styling(container, component, this);\r\n\t}\r\n\t\r\n\t            this._inStyling = false;\r\n\t        }\r\n\r\n\t\t/**\r\n\t * Gets current world rect in geographic coordinates\r\n\t\r\n\t*/\r\n\tpublic getCurrentActualWorldRect() : IgRect {\r\n\t                        \r\n\t\tlet iv = this.i.wc();\r\n\t                        return fromRect(iv);\r\n\t}\r\n\t/**\r\n\t * Given the current plot area of the control and a geographic region, get the WindowRect that would encompass that geographic region.\r\n\t\r\n\t* @param geographic  * The geographic area.\r\n\t*/\r\n\tpublic getZoomRectFromGeoRect(geographic: IgRect) : IgRect {\r\n\t                        \r\n\t\tlet iv = this.i.getZoomRectFromGeoRect(toRect(geographic));\r\n\t                        return fromRect(iv);\r\n\t}\r\n\t/**\r\n\t * Updates zoom window using window coordinates\r\n\t\r\n\t*/\r\n\tpublic updateZoomWindow(zoomWindow: IgRect) {\r\n\t\tthis.i.vo(toRect(zoomWindow));\r\n\t}\r\n\t/**\r\n\t * Updates world rect in geographic coordinates\r\n\t\r\n\t*/\r\n\tpublic updateWorldRect(worldRect: IgRect) {\r\n\t\tthis.i.vn(toRect(worldRect));\r\n\t}\r\n\t/**\r\n\t * Given the current plot area of the control and a geographic region, get the WindowRect that would encompass that geographic region.\r\n\t\r\n\t* @param geographic  * The geographic area.\r\n\t*/\r\n\tpublic getZoomFromGeographicRect(geographic: IgRect) : IgRect {\r\n\t                        \r\n\t\tlet iv = this.i.getZoomFromGeographicRect(toRect(geographic));\r\n\t                        return fromRect(iv);\r\n\t}\r\n\tpublic convertGeographicToZoom(geographic: IgRect, extraPixelPadding: number) : IgRect {\r\n\t                        \r\n\t\tlet iv = this.i.v9(toRect(geographic), extraPixelPadding);\r\n\t                        return fromRect(iv);\r\n\t}\r\n\tpublic getZoomFromGeographicPoints(northWest: IgPoint, southEast: IgPoint) : IgRect {\r\n\t                        \r\n\t\tlet iv = this.i.getZoomFromGeographicPoints(toPoint(northWest), toPoint(southEast));\r\n\t                        return fromRect(iv);\r\n\t}\r\n\t/**\r\n\t * Given a WindowRect and the current plot area, get the geographic region represented by that WindowRect.\r\n\t\r\n\t* @param windowRect  * The zoom area.\r\n\t*/\r\n\tpublic getGeographicFromZoom(windowRect: IgRect) : IgRect {\r\n\t                        \r\n\t\tlet iv = this.i.we(toRect(windowRect));\r\n\t                        return fromRect(iv);\r\n\t}\r\n\t/**\r\n\t * Convert a pixel-based coordinate to a geographic coordinate.\r\n\t\r\n\t* @param pixelCoordinate  * A pixel-based coordinate\r\n\t*/\r\n\tpublic getGeographicPoint(pixelCoordinate: IgPoint) : IgPoint {\r\n\t                        \r\n\t\tlet iv = this.i.v0(toPoint(pixelCoordinate));\r\n\t                        return fromPoint(iv);\r\n\t}\r\n\t/**\r\n\t * Convert a geographic coordinate to a pixel-based coordinate.\r\n\t\r\n\t* @param geographicCoordinate  * A geographic coordinate\r\n\t*/\r\n\tpublic getPixelPoint(geographicCoordinate: IgPoint) : IgPoint {\r\n\t                        \r\n\t\tlet iv = this.i.v1(toPoint(geographicCoordinate));\r\n\t                        return fromPoint(iv);\r\n\t}\r\n\t/**\r\n\t * Convert a geographic coordinate to a pixel-based coordinate.\r\n\t\r\n\t* @param geographicCoordinate  * A geographic coordinate\r\n\t*/\r\n\tpublic getWindowPoint(geographicCoordinate: IgPoint) : IgPoint {\r\n\t                        \r\n\t\tlet iv = this.i.v2(toPoint(geographicCoordinate));\r\n\t                        return fromPoint(iv);\r\n\t}\r\n\t/**\r\n\t * Removes all cached tile images from the map imagery assigned to the map's background content.\r\n\t\r\n\t*/\r\n\tpublic clearTileCache() {\r\n\t\tthis.i.vb();\r\n\t}\r\n\t/**\r\n\t * Notifies the chart that the CSS styles in effect have been updated.\r\n\t\r\n\t*/\r\n\tpublic styleUpdated() {\r\n\t\tthis.i.vj();\r\n\t}\r\n\t/**\r\n\t * Gets actual window scale for horizontal dimension of the control\r\n\t\r\n\t*/\r\n\tpublic getActualWindowScaleHorizontal() : number {\r\n\t                        \r\n\t\tlet iv = this.i.gq();\r\n\t                        return (iv);\r\n\t}\r\n\t/**\r\n\t * Gets actual window scale for vertical dimension of the control\r\n\t\r\n\t*/\r\n\tpublic getActualWindowScaleVertical() : number {\r\n\t                        \r\n\t\tlet iv = this.i.gr();\r\n\t                        return (iv);\r\n\t}\r\n\t/**\r\n\t * Calls for a deferred refresh to the GeographicMap's background.\r\n\t\r\n\t*/\r\n\tpublic deferredRefresh() {\r\n\t\tthis.i.deferredRefresh();\r\n\t}\r\n\t/**\r\n\t * Returns the chart visuals expressed as a ChartVisualData object.\r\n\t\r\n\t*/\r\n\tpublic exportVisualData() : any {\r\n\t                        \r\n\t\tlet iv = this.i.ux();\r\n\t                        return (iv);\r\n\t}\r\n\t/**\r\n\t * Zoom in to the geographic region specified, when possible (may need to wait for map to be initialized).\r\n\t\r\n\t* @param geographic  * The geographic region to zoom to.\r\n\t*/\r\n\tpublic zoomToGeographic(geographic: IgRect) {\r\n\t\tthis.i.vq(toRect(geographic));\r\n\t}\r\n\r\n    \t\r\n\t    private _imageTilesReady: (s: IgcGeographicMapComponent, e: IgcImageTilesReadyEventArgs) => void = null;\r\n\t    private _imageTilesReady_wrapped: any = null;\r\n\t/**\r\n\t * This event is fired whenever the image tiles transition from a loading state (e.g. some are fading in) to a loaded state.\r\n\t*/\r\n\t\r\n\tpublic get imageTilesReady(): (s: IgcGeographicMapComponent, e: IgcImageTilesReadyEventArgs) => void {\r\n\treturn this._imageTilesReady;\r\n\t}\r\n\t    public set imageTilesReady(ev: (s: IgcGeographicMapComponent, e: IgcImageTilesReadyEventArgs) => void) {\r\n\t        if (this._imageTilesReady_wrapped !== null) {\r\n\t            this.i.imageTilesReady = delegateRemove(this.i.imageTilesReady, this._imageTilesReady_wrapped);\r\n\t            this._imageTilesReady_wrapped = null;\r\n\t            this._imageTilesReady = null;\r\n\t        }\r\n\t\r\n\t        this._imageTilesReady = ev;\r\n\t        this._imageTilesReady_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcImageTilesReadyEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeImageTilesReady) {\r\n\t                        (this as any).beforeImageTilesReady(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._imageTilesReady) {\r\n\t    this._imageTilesReady(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.imageTilesReady = delegateCombine(this.i.imageTilesReady, this._imageTilesReady_wrapped);;\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcBingMapsMapImageryModule } from './igc-bing-maps-map-imagery-module';\r\nimport { IgcOpenStreetMapImageryModule } from './igc-open-street-map-imagery-module';\r\nimport { IgcCustomMapImageryModule } from './igc-custom-map-imagery-module';\r\nimport { IgcArcGISOnlineMapImageryModule } from './igc-arc-gis-online-map-imagery-module';\r\nimport { IgcGeographicMapComponent } from './igc-geographic-map-component';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\n\r\nexport class IgcGeographicMapCoreModule {\r\n    public static register() {\r\n                IgcBingMapsMapImageryModule.register();\r\n        IgcOpenStreetMapImageryModule.register();\r\n        IgcCustomMapImageryModule.register();\r\n        IgcArcGISOnlineMapImageryModule.register();\r\n        IgcGeographicMapComponent.register();\r\n        TypeRegistrar.registerCons('IgcGeographicMapComponent', IgcGeographicMapComponent);\r\n    }\r\n}","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { ImagesChangedEventArgs as ImagesChangedEventArgs_internal } from \"./ImagesChangedEventArgs\";\r\n\r\nexport class IgcImagesChangedEventArgs\r\n{\r\n\r\nprotected createImplementation() : ImagesChangedEventArgs_internal\r\n{\r\n\treturn new ImagesChangedEventArgs_internal();\r\n}\r\n\tprotected _implementation: any;\r\n\t                            /**\r\n\t                             * @hidden \r\n\t                             */\r\n\tpublic get i() : ImagesChangedEventArgs_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tprivate onImplementationCreated() {\r\n\t\t\r\n\t}\r\n\tconstructor() {\r\n\tthis._implementation = this.createImplementation();\r\n\t(<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t                                if ((this as any)._initializeAdapters) {\r\n\t                                    (this as any)._initializeAdapters();\r\n\t                                }\r\n\t\r\n\t}\r\n\tprotected _provideImplementation(i: any) {\r\n\t    this._implementation = i;\r\n\t    (<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t                                if ((this as any)._initializeAdapters) {\r\n\t                                    (this as any)._initializeAdapters();\r\n\t                                }\r\n\t\r\n\t}\r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcGeographicMapComponent } from \"./igc-geographic-map-component\";\r\nimport { IgcImageTilesReadyEventArgs } from \"./igc-image-tiles-ready-event-args\";\r\nimport { IgcImagesChangedEventArgs } from \"./igc-images-changed-event-args\";\r\nimport { IgcCancellingMultiScaleImageEventArgs } from \"igniteui-core/igc-cancelling-multi-scale-image-event-args\";\r\nimport { IgcDownloadingMultiScaleImageEventArgs } from \"igniteui-core/igc-downloading-multi-scale-image-event-args\";\r\nimport { GeographicMapImagery as GeographicMapImagery_internal } from \"./GeographicMapImagery\";\r\nimport { TypeRegistrar } from \"igniteui-core/type\";\r\nimport { IMapRenderDeferralHandler } from \"igniteui-core/IMapRenderDeferralHandler\";\r\nimport { fromRect, toRect, ensureBool } from \"igniteui-core/componentUtil\";\r\n\r\n/**\r\n * Control class used for displaying multi-scale TileSource imagery.  Designed to be used for background imagery in the IgxGeographicMap.Component\r\n*/\r\nexport abstract class IgcGeographicMapImagery\r\n{\r\n\r\nprotected createImplementation() : GeographicMapImagery_internal\r\n{\r\n\treturn null;\r\n}\r\n\tprotected _implementation: any;\r\n\t                            /**\r\n\t                             * @hidden \r\n\t                             */\r\n\tpublic get i() : GeographicMapImagery_internal {\r\n\treturn this._implementation;\r\n\t}/**\r\n\t                             * @hidden \r\n\t                             */\r\n\tstatic _createFromInternal(internal: any) : IgcGeographicMapImagery {\r\n\t    if (!internal) {\r\n\t                                    return null;\r\n\t                                }\r\n\t                                if (!internal.$type) {\r\n\t                                    return null;\r\n\t                                }\r\n\t                                let name = internal.$type.name;\r\n\t                                let externalName = \"Igc\" + name + \"Component\";\r\n\t                                if (!TypeRegistrar.isRegistered(externalName)) {\r\n\t                                    return null;\r\n\t                                }\r\n\t                                return TypeRegistrar.create(externalName);\r\n\t                            }\r\n\tprivate onImplementationCreated() {\r\n\t\t\r\n\t}\r\n\tconstructor() {\r\n\tthis._implementation = this.createImplementation();\r\n\t(<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t                                if ((this as any)._initializeAdapters) {\r\n\t                                    (this as any)._initializeAdapters();\r\n\t                                }\r\n\t\r\n\t}\r\n\tprotected _provideImplementation(i: any) {\r\n\t    this._implementation = i;\r\n\t    (<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t                                if ((this as any)._initializeAdapters) {\r\n\t                                    (this as any)._initializeAdapters();\r\n\t                                }\r\n\t\r\n\t}\r\n\t/**\r\n\t * The deferral handler to use for deferred refreshes.\r\n\t*/\r\n\tget deferralHandler() : IMapRenderDeferralHandler {\r\n\t\treturn this.i.deferralHandler as IMapRenderDeferralHandler;\r\n\t}\r\n\tset deferralHandler(v: IMapRenderDeferralHandler) {\r\n\t                                        this.i.deferralHandler = v;\r\n\t}\r\n\t/**\r\n\t * A rectangle representing the portion of the map imagery currently in view.\r\n\t * A rectangle at X=0, Y=0 with a Height and Width of 1 implies the entire plotting area is in view.  A Height and Width of .5 would imply that the view is halfway zoomed in.\r\n\t*/\r\n\tget windowRect() : IgRect {\r\n\t\treturn fromRect(this.i.windowRect);\r\n\t}\r\n\tset windowRect(v: IgRect) {\r\n\t\tthis.i.windowRect = toRect(v);\r\n\t}\r\n\t/**\r\n\t * The IgxGeographicMapComponent which is hosting this GeographicMapImagery control.\r\n\t*/\r\n\tget geographicMap() : IgcGeographicMapComponent {\r\n\t                                        const r = this.i.geographicMap;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset geographicMap(v: IgcGeographicMapComponent) {\r\n\t\tv == null ? this.i.geographicMap = null : this.i.geographicMap = v.i;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the referer sent in the headers of the tile request.\r\n\t*/\r\n\tget referer() : string {\r\n\t\treturn (this.i.referer as string);\r\n\t}\r\n\tset referer(v: string) {\r\n\t\tthis.i.referer = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets if horizontal wrapping is enabled for the imagery.\r\n\t*/\r\n\tget isHorizontalWrappingEnabled() : boolean {\r\n\t\treturn (this.i.isHorizontalWrappingEnabled as boolean);\r\n\t}\r\n\tset isHorizontalWrappingEnabled(v: boolean) {\r\n\t\tthis.i.isHorizontalWrappingEnabled = ensureBool(v);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the UserAgent sent in the headers of the tile request.\r\n\t*/\r\n\tget userAgent() : string {\r\n\t\treturn (this.i.userAgent as string);\r\n\t}\r\n\tset userAgent(v: string) {\r\n\t\tthis.i.userAgent = v;\r\n\t}\r\n\tget opacity() : number {\r\n\t\treturn (this.i.opacity as number);\r\n\t}\r\n\tset opacity(v: number) {\r\n\t\tthis.i.opacity = +v;\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    if ((this as any).findEphemera) {\r\n\t        if (name && name.indexOf(\"@@e:\") == 0) {\r\n\t            return (this as any).findEphemera(name);\r\n\t        }\r\n\t    }\r\n\t\r\n\tif (this.geographicMap && (this.geographicMap as any).name && (this.geographicMap as any).name == name) { return this.geographicMap; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\t/**\r\n\t * Removes all cached tile Imagery from the\r\n\t\r\n\t*/\r\n\tpublic clearTileCache() {\r\n\t\tthis.i.clearTileCache();\r\n\t}\r\n\t\r\n\t    private _imageTilesReady: (s: IgcGeographicMapImagery, e: IgcImageTilesReadyEventArgs) => void = null;\r\n\t    private _imageTilesReady_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when the image tiles have been downloaded.\r\n\t*/\r\n\t\r\n\tpublic get imageTilesReady(): (s: IgcGeographicMapImagery, e: IgcImageTilesReadyEventArgs) => void {\r\n\treturn this._imageTilesReady;\r\n\t}\r\n\t    public set imageTilesReady(ev: (s: IgcGeographicMapImagery, e: IgcImageTilesReadyEventArgs) => void) {\r\n\t        if (this._imageTilesReady_wrapped !== null) {\r\n\t            this.i.imageTilesReady = delegateRemove(this.i.imageTilesReady, this._imageTilesReady_wrapped);\r\n\t            this._imageTilesReady_wrapped = null;\r\n\t            this._imageTilesReady = null;\r\n\t        }\r\n\t\r\n\t        this._imageTilesReady = ev;\r\n\t        this._imageTilesReady_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcImageTilesReadyEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeImageTilesReady) {\r\n\t                        (this as any).beforeImageTilesReady(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._imageTilesReady) {\r\n\t    this._imageTilesReady(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.imageTilesReady = delegateCombine(this.i.imageTilesReady, this._imageTilesReady_wrapped);;\r\n\t    }\r\n\t\r\n\t    private _imagesChanged: (s: IgcGeographicMapImagery, e: IgcImagesChangedEventArgs) => void = null;\r\n\t    private _imagesChanged_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when tile images have changed.\r\n\t*/\r\n\t\r\n\tpublic get imagesChanged(): (s: IgcGeographicMapImagery, e: IgcImagesChangedEventArgs) => void {\r\n\treturn this._imagesChanged;\r\n\t}\r\n\t    public set imagesChanged(ev: (s: IgcGeographicMapImagery, e: IgcImagesChangedEventArgs) => void) {\r\n\t        if (this._imagesChanged_wrapped !== null) {\r\n\t            this.i.imagesChanged = delegateRemove(this.i.imagesChanged, this._imagesChanged_wrapped);\r\n\t            this._imagesChanged_wrapped = null;\r\n\t            this._imagesChanged = null;\r\n\t        }\r\n\t\r\n\t        this._imagesChanged = ev;\r\n\t        this._imagesChanged_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcImagesChangedEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeImagesChanged) {\r\n\t                        (this as any).beforeImagesChanged(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._imagesChanged) {\r\n\t    this._imagesChanged(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.imagesChanged = delegateCombine(this.i.imagesChanged, this._imagesChanged_wrapped);;\r\n\t    }\r\n\t\r\n\t    private _cancellingImage: (s: IgcGeographicMapImagery, e: IgcCancellingMultiScaleImageEventArgs) => void = null;\r\n\t    private _cancellingImage_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when an image is being downloaded.\r\n\t*/\r\n\t\r\n\tpublic get cancellingImage(): (s: IgcGeographicMapImagery, e: IgcCancellingMultiScaleImageEventArgs) => void {\r\n\treturn this._cancellingImage;\r\n\t}\r\n\t    public set cancellingImage(ev: (s: IgcGeographicMapImagery, e: IgcCancellingMultiScaleImageEventArgs) => void) {\r\n\t        if (this._cancellingImage_wrapped !== null) {\r\n\t            this.i.cancellingImage = delegateRemove(this.i.cancellingImage, this._cancellingImage_wrapped);\r\n\t            this._cancellingImage_wrapped = null;\r\n\t            this._cancellingImage = null;\r\n\t        }\r\n\t\r\n\t        this._cancellingImage = ev;\r\n\t        this._cancellingImage_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcCancellingMultiScaleImageEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeCancellingImage) {\r\n\t                        (this as any).beforeCancellingImage(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._cancellingImage) {\r\n\t    this._cancellingImage(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.cancellingImage = delegateCombine(this.i.cancellingImage, this._cancellingImage_wrapped);;\r\n\t    }\r\n\t\r\n\t    private _downloadingImage: (s: IgcGeographicMapImagery, e: IgcDownloadingMultiScaleImageEventArgs) => void = null;\r\n\t    private _downloadingImage_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when an image is being downloaded.\r\n\t*/\r\n\t\r\n\tpublic get downloadingImage(): (s: IgcGeographicMapImagery, e: IgcDownloadingMultiScaleImageEventArgs) => void {\r\n\treturn this._downloadingImage;\r\n\t}\r\n\t    public set downloadingImage(ev: (s: IgcGeographicMapImagery, e: IgcDownloadingMultiScaleImageEventArgs) => void) {\r\n\t        if (this._downloadingImage_wrapped !== null) {\r\n\t            this.i.downloadingImage = delegateRemove(this.i.downloadingImage, this._downloadingImage_wrapped);\r\n\t            this._downloadingImage_wrapped = null;\r\n\t            this._downloadingImage = null;\r\n\t        }\r\n\t\r\n\t        this._downloadingImage = ev;\r\n\t        this._downloadingImage_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcDownloadingMultiScaleImageEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeDownloadingImage) {\r\n\t                        (this as any).beforeDownloadingImage(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._downloadingImage) {\r\n\t    this._downloadingImage(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.downloadingImage = delegateCombine(this.i.downloadingImage, this._downloadingImage_wrapped);;\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcGeographicShapeSeriesModule } from './igc-geographic-shape-series-module';\r\nimport { IgcGeographicPolylineSeriesModule } from './igc-geographic-polyline-series-module';\r\nimport { IgcTileGeneratorMapImageryModule } from './igc-tile-generator-map-imagery-module';\r\nimport { IgcHeatTileGeneratorModule } from 'igniteui-core/igc-heat-tile-generator-module';\r\nimport { IgcGeographicTileSeriesModule } from './igc-geographic-tile-series-module';\r\nimport { IgcSizeScaleModule } from 'igniteui-charts/igc-size-scale-module';\r\nimport { IgcValueBrushScaleModule } from 'igniteui-charts/igc-value-brush-scale-module';\r\nimport { IgcCustomPaletteColorScaleModule } from 'igniteui-charts/igc-custom-palette-color-scale-module';\r\nimport { IgcGeographicProportionalSymbolSeriesModule } from './igc-geographic-proportional-symbol-series-module';\r\nimport { IgcGeographicSymbolSeriesModule } from './igc-geographic-symbol-series-module';\r\nimport { IgcGeographicScatterAreaSeriesModule } from './igc-geographic-scatter-area-series-module';\r\nimport { IgcGeographicHighDensityScatterSeriesModule } from './igc-geographic-high-density-scatter-series-module';\r\nimport { IgcGeographicContourLineSeriesModule } from './igc-geographic-contour-line-series-module';\r\nimport { IgcGeographicMapCoreModule } from './igc-geographic-map-core-module';\r\nimport { IgcShapeDataSourceModule } from 'igniteui-core/igc-shape-data-source-module';\r\n\r\n\r\nexport class IgcGeographicMapModule {\r\n    public static register() {\r\n                IgcGeographicShapeSeriesModule.register();\r\n        IgcGeographicPolylineSeriesModule.register();\r\n        IgcTileGeneratorMapImageryModule.register();\r\n        IgcHeatTileGeneratorModule.register();\r\n        IgcGeographicTileSeriesModule.register();\r\n        IgcSizeScaleModule.register();\r\n        IgcValueBrushScaleModule.register();\r\n        IgcCustomPaletteColorScaleModule.register();\r\n        IgcGeographicProportionalSymbolSeriesModule.register();\r\n        IgcGeographicSymbolSeriesModule.register();\r\n        IgcGeographicScatterAreaSeriesModule.register();\r\n        IgcGeographicHighDensityScatterSeriesModule.register();\r\n        IgcGeographicContourLineSeriesModule.register();\r\n        IgcGeographicMapCoreModule.register();\r\n        IgcShapeDataSourceModule.register();\r\n\r\n    }\r\n}","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool, toPoint, fromPoint, fromRect } from \"igniteui-core/componentUtil\";\r\n\r\n/**\r\n * Base class for hosting chart series in a IgxGeographicMap.Component\r\n*/\r\nexport abstract class IgcGeographicMapSeriesHostComponent extends IgcSeriesComponent\r\n{\r\n\r\n\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicMapSeriesHost {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).connectedCallback) {\r\n\t            (<any>this.i).connectedCallback();\r\n\t        }\r\n\t        \r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }\r\n\t    disconnectedCallback() {\r\n\t        if (super[\"disconnectedCallback\"]) {\r\n\t            super[\"disconnectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).disconnectedCallback) {\r\n\t            (<any>this.i).disconnectedCallback();\r\n\t        }\r\n\t        if (this._attached) {\r\n\t            this._attached = false;\r\n\t        }\r\n\t    }\r\n\t\r\n\t                private static _observedAttributesIgcGeographicMapSeriesHostComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicMapSeriesHostComponent._observedAttributesIgcGeographicMapSeriesHostComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicMapSeriesHostComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicMapSeriesHostComponent._observedAttributesIgcGeographicMapSeriesHostComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicMapSeriesHostComponent._observedAttributesIgcGeographicMapSeriesHostComponent;               \r\n\t                }                 \r\n\t            \r\n\t/**\r\n\t * Checks if this control is geographic coordinate system\r\n\t*/\r\n\tget isGeographic() : boolean {\r\n\t\treturn (this.i.dy as boolean);\r\n\t}\r\n\t/**\r\n\t * Gets whether this series supports markers\r\n\t*/\r\n\tget hasMarkers() : boolean {\r\n\t\treturn (this.i.hasMarkers as boolean);\r\n\t}\r\n\t/**\r\n\t * The minimum scale at which this series becomes visible.\r\n\t * The default value for this property is 1.0, which means the series will always be visible.  At a VisibleFromScale setting of 0.0, the series will never be visible.  At a VisibleFromScale setting of 0.5, the series will be visible as long as the map is zoomed in to at least 200%.\r\n\t*/\r\n\tget visibleFromScale() : number {\r\n\t\treturn (this.i.qg as number);\r\n\t}\r\n\tset visibleFromScale(v: number) {\r\n\t\tthis.i.qg = +v;\r\n\t                                        this._a(\"visibleFromScale\", this.i.qg);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the coercion methods to use when loading data from data sources.\r\n\t * Should be specified before setting any member paths, if being used. Setting it later \r\n\t * will not cause data to be reimported into the chart.\r\n\t*/\r\n\tget coercionMethods() : any {\r\n\t\treturn this.i.coercionMethods as any;\r\n\t}\r\n\tset coercionMethods(v: any) {\r\n\t                                        this.i.coercionMethods = v;\r\n\t}\r\n\t/**\r\n\t * Called to notify about changes to indexed-based properties, e.g. Brushes, Outlines, MarkerBrushes, MarkerOutlines and refresh series\r\n\t\r\n\t*/\r\n\tpublic notifyIndexedPropertiesChanged() {\r\n\t\tthis.i.lp();\r\n\t}\r\n\tpublic getItemValue(item: any, memberPathName: string) : any {\r\n\t                        \r\n\t\tlet iv = this.i.h1(item, memberPathName);\r\n\t                        return (iv);\r\n\t}\r\n\t/**\r\n\t * Gets the item that is the best match for the specified world coordinates.\r\n\t\r\n\t* @param world  * The world coordinates to use.\r\n\t*/\r\n\tpublic getItem(world: IgPoint) : any {\r\n\t                        \r\n\t\tlet iv = this.i.hy(toPoint(world));\r\n\t                        return (iv);\r\n\t}\r\n\tpublic getPreviousOrExactIndex(world: IgPoint, skipUnknowns: boolean) : number {\r\n\t                        \r\n\t\tlet iv = this.i.ho(toPoint(world), skipUnknowns);\r\n\t                        return (iv);\r\n\t}\r\n\tpublic getNextOrExactIndex(world: IgPoint, skipUnknowns: boolean) : number {\r\n\t                        \r\n\t\tlet iv = this.i.hm(toPoint(world), skipUnknowns);\r\n\t                        return (iv);\r\n\t}\r\n\tpublic getSeriesValue(world: IgPoint, useInterpolation: boolean, skipUnknowns: boolean) : number {\r\n\t                        \r\n\t\tlet iv = this.i.gn(toPoint(world), useInterpolation, skipUnknowns);\r\n\t                        return (iv);\r\n\t}\r\n\tpublic getSeriesValuePosition(world: IgPoint, useInterpolation: boolean, skipUnknowns: boolean) : IgPoint {\r\n\t                        \r\n\t\tlet iv = this.i.ps(toPoint(world), useInterpolation, skipUnknowns);\r\n\t                        return fromPoint(iv);\r\n\t}\r\n\t/**\r\n\t * If possible, will return the best available value bounding box within the series that has the best value match for the world position provided.\r\n\t\r\n\t* @param world  * The world coordinate for which to get a value bounding box for\r\n\t*/\r\n\tpublic getSeriesValueBoundingBox(world: IgPoint) : IgRect {\r\n\t                        \r\n\t\tlet iv = this.i.p3(toPoint(world));\r\n\t                        return fromRect(iv);\r\n\t}\r\n\t/**\r\n\t * If possible, will return the best available value marker bounding box within the series that has the best value match for the world position provided.\r\n\t\r\n\t* @param world  * The world coordinates for which to get a value marker bounding box for\r\n\t*/\r\n\tpublic getSeriesValueMarkerBoundingBox(world: IgPoint) : IgRect {\r\n\t                        \r\n\t\tlet iv = this.i.p5(toPoint(world));\r\n\t                        return fromRect(iv);\r\n\t}\r\n\tpublic getSeriesHighValue(world: IgPoint, useInterpolation: boolean, skipUnknowns: boolean) : number {\r\n\t                        \r\n\t\tlet iv = this.i.gj(toPoint(world), useInterpolation, skipUnknowns);\r\n\t                        return (iv);\r\n\t}\r\n\tpublic getSeriesHighValuePosition(world: IgPoint, useInterpolation: boolean, skipUnknowns: boolean) : IgPoint {\r\n\t                        \r\n\t\tlet iv = this.i.po(toPoint(world), useInterpolation, skipUnknowns);\r\n\t                        return fromPoint(iv);\r\n\t}\r\n\tpublic getSeriesLowValue(world: IgPoint, useInterpolation: boolean, skipUnknowns: boolean) : number {\r\n\t                        \r\n\t\tlet iv = this.i.gl(toPoint(world), useInterpolation, skipUnknowns);\r\n\t                        return (iv);\r\n\t}\r\n\tpublic getSeriesLowValuePosition(world: IgPoint, useInterpolation: boolean, skipUnknowns: boolean) : IgPoint {\r\n\t                        \r\n\t\tlet iv = this.i.pq(toPoint(world), useInterpolation, skipUnknowns);\r\n\t                        return fromPoint(iv);\r\n\t}\r\n\tpublic getSeriesValuePositionFromSeriesPixel(mouse: IgPoint, useInterpolation: boolean, skipUnknowns: boolean) : IgPoint {\r\n\t                        \r\n\t\tlet iv = this.i.pt(toPoint(mouse), useInterpolation, skipUnknowns);\r\n\t                        return fromPoint(iv);\r\n\t}\r\n\tpublic getSeriesValueFromSeriesPixel(mouse: IgPoint, useInterpolation: boolean, skipUnknowns: boolean) : number {\r\n\t                        \r\n\t\tlet iv = this.i.go(toPoint(mouse), useInterpolation, skipUnknowns);\r\n\t                        return (iv);\r\n\t}\r\n\t/**\r\n\t * For a category plotted series, returns the current width of the items within the categories. This only returns a value if the items have some form of width (e.g. columns, bars, etc.) otherwise 0 is returned.\r\n\t\r\n\t*/\r\n\tpublic getItemSpan() : number {\r\n\t                        \r\n\t\tlet iv = this.i.ge();\r\n\t                        return (iv);\r\n\t}\r\n\t/**\r\n\t * Renders the series.\r\n\t\r\n\t* @param animate  * True if the change should be animated.\r\n\t*/\r\n\tpublic renderSeries(animate: boolean) {\r\n\t\tthis.i.mn(animate);\r\n\t}\r\n\t/**\r\n\t * Called when this series' Style is updated.\r\n\t\r\n\t*/\r\n\tpublic styleUpdated() {\r\n\t\tthis.i.mx();\r\n\t}\r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { MarkerType, MarkerType_$type } from \"igniteui-charts/MarkerType\";\r\nimport { MarkerOutlineMode, MarkerOutlineMode_$type } from \"igniteui-charts/MarkerOutlineMode\";\r\nimport { MarkerFillMode, MarkerFillMode_$type } from \"igniteui-charts/MarkerFillMode\";\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicMarkerSeries } from \"./GeographicMarkerSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureEnum, enumToString, brushToString, stringToBrush } from \"igniteui-core/componentUtil\";\r\nimport { DataTemplate } from \"igniteui-core/DataTemplate\";\r\n\r\n/**\r\n * Base class for creating marker series in a IgxGeographicMap.Component\r\n*/\r\nexport abstract class IgcGeographicMarkerSeriesComponent extends IgcGeographicMapSeriesHostComponent\r\n{\r\n\r\n\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicMarkerSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).connectedCallback) {\r\n\t            (<any>this.i).connectedCallback();\r\n\t        }\r\n\t        \r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }\r\n\t    disconnectedCallback() {\r\n\t        if (super[\"disconnectedCallback\"]) {\r\n\t            super[\"disconnectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).disconnectedCallback) {\r\n\t            (<any>this.i).disconnectedCallback();\r\n\t        }\r\n\t        if (this._attached) {\r\n\t            this._attached = false;\r\n\t        }\r\n\t    }\r\n\t\r\n\t                private static _observedAttributesIgcGeographicMarkerSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicMarkerSeriesComponent._observedAttributesIgcGeographicMarkerSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicMarkerSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicMarkerSeriesComponent._observedAttributesIgcGeographicMarkerSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicMarkerSeriesComponent._observedAttributesIgcGeographicMarkerSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t/**\r\n\t * Gets or sets the marker type for the current series object.\r\n\t * If the MarkerTemplate property is set, the setting of the MarkerType property will be ignored.\r\n\t*/\r\n\tget markerType() : MarkerType {\r\n\t\treturn this.i.qo;\r\n\t}\r\n\tset markerType(v: MarkerType) {\r\n\t\tthis.i.qo = ensureEnum<MarkerType>(MarkerType_$type, v);\r\n\t                                        this._a(\"markerType\", enumToString<MarkerType>(MarkerType_$type, this.i.qo));\r\n\t}\r\n\t/**\r\n\t * Gets or sets thickness of the marker outline\r\n\t*/\r\n\tget markerThickness() : number {\r\n\t\treturn (this.i.qp as number);\r\n\t}\r\n\tset markerThickness(v: number) {\r\n\t\tthis.i.qp = +v;\r\n\t                                        this._a(\"markerThickness\", this.i.qp);\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether the marker outline is based on the marker brush of the series rather than the marker outlines collection.\r\n\t*/\r\n\tget markerOutlineMode() : MarkerOutlineMode {\r\n\t\treturn this.i.qn;\r\n\t}\r\n\tset markerOutlineMode(v: MarkerOutlineMode) {\r\n\t\tthis.i.qn = ensureEnum<MarkerOutlineMode>(MarkerOutlineMode_$type, v);\r\n\t                                        this._a(\"markerOutlineMode\", enumToString<MarkerOutlineMode>(MarkerOutlineMode_$type, this.i.qn));\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether the marker fill is based on the marker outline of the series rather than the marker brushes collection.\r\n\t*/\r\n\tget markerFillMode() : MarkerFillMode {\r\n\t\treturn this.i.qm;\r\n\t}\r\n\tset markerFillMode(v: MarkerFillMode) {\r\n\t\tthis.i.qm = ensureEnum<MarkerFillMode>(MarkerFillMode_$type, v);\r\n\t                                        this._a(\"markerFillMode\", enumToString<MarkerFillMode>(MarkerFillMode_$type, this.i.qm));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the MarkerTemplate for the current series object.\r\n\t*/\r\n\tget markerTemplate() : IgDataTemplate {\r\n\t\treturn (this.i.q4 as IgDataTemplate);\r\n\t}\r\n\tset markerTemplate(v: IgDataTemplate) {\r\n\t\tthis.i.q4 = ((v as any) as DataTemplate);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the brush that specifies how the current series object's marker interiors are painted.\r\n\t*/\r\n\tget markerBrush() : string {\r\n\t\treturn brushToString(this.i.ri);\r\n\t}\r\n\tset markerBrush(v: string) {\r\n\t\tthis.i.ri = stringToBrush(v);\r\n\t                                        this._a(\"markerBrush\", brushToString(this.i.ri));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the brush that specifies how the current series object's marker outlines are painted.\r\n\t*/\r\n\tget markerOutline() : string {\r\n\t\treturn brushToString(this.i.rj);\r\n\t}\r\n\tset markerOutline(v: string) {\r\n\t\tthis.i.rj = stringToBrush(v);\r\n\t                                        this._a(\"markerOutline\", brushToString(this.i.rj));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the maximum number of markerItems displayed by the current series.\r\n\t * If more than the specified number of markerItems are visible, the series will automatically\r\n\t * choose a representative set.\r\n\t*/\r\n\tget maximumMarkers() : number {\r\n\t\treturn (this.i.qq as number);\r\n\t}\r\n\tset maximumMarkers(v: number) {\r\n\t\tthis.i.qq = +v;\r\n\t                                        this._a(\"maximumMarkers\", this.i.qq);\r\n\t}\r\n\t/**\r\n\t * Gets the effective marker template for the current series object.\r\n\t*/\r\n\tget actualMarkerTemplate() : IgDataTemplate {\r\n\t\treturn (this.i.q3 as IgDataTemplate);\r\n\t}\r\n\tset actualMarkerTemplate(v: IgDataTemplate) {\r\n\t\tthis.i.q3 = ((v as any) as DataTemplate);\r\n\t}\r\n\t/**\r\n\t * Gets the effective marker brush for the current series object.\r\n\t*/\r\n\tget actualMarkerBrush() : string {\r\n\t\treturn brushToString(this.i.rg);\r\n\t}\r\n\tset actualMarkerBrush(v: string) {\r\n\t\tthis.i.rg = stringToBrush(v);\r\n\t                                        this._a(\"actualMarkerBrush\", brushToString(this.i.rg));\r\n\t}\r\n\t/**\r\n\t * Gets the effective marker outline for the current series object.\r\n\t*/\r\n\tget actualMarkerOutline() : string {\r\n\t\treturn brushToString(this.i.rh);\r\n\t}\r\n\tset actualMarkerOutline(v: string) {\r\n\t\tthis.i.rh = stringToBrush(v);\r\n\t                                        this._a(\"actualMarkerOutline\", brushToString(this.i.rh));\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { GeographicShapeSeriesBaseView } from \"./GeographicShapeSeriesBaseView\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { Defaults } from \"igniteui-charts/Defaults\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { ScatterPolylineSeries } from \"igniteui-charts/ScatterPolylineSeries\";\r\nimport { Base, Type, markType, runOn, delegateCombine, markDep } from \"igniteui-core/type\";\r\nimport { GeographicShapeSeriesBase } from \"./GeographicShapeSeriesBase\";\r\nimport { StyleSelector } from \"igniteui-charts/StyleSelector\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { Style } from \"igniteui-core/Style\";\r\nimport { Control } from \"igniteui-core/Control\";\r\nimport { StyleShapeEventArgs } from \"igniteui-charts/StyleShapeEventArgs\";\r\nimport { ShapeSeriesBase } from \"igniteui-charts/ShapeSeriesBase\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicPolylineSeriesView extends GeographicShapeSeriesBaseView {\r\n\tstatic $t: Type = markType(GeographicPolylineSeriesView, 'GeographicPolylineSeriesView', (<any>GeographicShapeSeriesBaseView).$);\r\n\tconstructor(a: GeographicPolylineSeries) {\r\n\t\tsuper(a);\r\n\t\tthis.ci = a;\r\n\t}\r\n\tprotected ci: GeographicPolylineSeries = null;\r\n\tas(): void {\r\n\t\tsuper.as();\r\n\t\tif (!this.q) {\r\n\t\t\tthis.ci.g4 = Defaults.n;\r\n\t\t}\r\n\t}\r\n\tb2(): void {\r\n\t\tsuper.b2();\r\n\t\t(<ScatterPolylineSeries>this.ci.qe).s0 = this.ci.rk;\r\n\t\t(<ScatterPolylineSeries>this.ci.qe).s5 = this.ci.rs;\r\n\t}\r\n\tcj(): void {\r\n\t\t(<ScatterPolylineSeries>this.ci.qe).s0 = this.ci.rk;\r\n\t}\r\n\tck(): void {\r\n\t\t(<ScatterPolylineSeries>this.ci.qe).s5 = this.ci.rs;\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicPolylineSeries extends GeographicShapeSeriesBase {\r\n\tstatic $t: Type = markType(GeographicPolylineSeries, 'GeographicPolylineSeries', (<any>GeographicShapeSeriesBase).$);\r\n\tprotected get_eb(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>GeographicPolylineSeries).$;\r\n\t}\r\n\tprotected by(): SeriesView {\r\n\t\treturn new GeographicPolylineSeriesView(this);\r\n\t}\r\n\tl4(a: SeriesView): void {\r\n\t\tsuper.l4(a);\r\n\t\tthis.rl = <GeographicPolylineSeriesView>a;\r\n\t}\r\n\trl: GeographicPolylineSeriesView;\r\n\trk: StyleSelector;\r\n\trs: Style;\r\n\tprotected qd(): Series {\r\n\t\tlet a = new ScatterPolylineSeries();\r\n\t\ta.styleShape = delegateCombine(a.styleShape, runOn(this, this.rp));\r\n\t\treturn a;\r\n\t}\r\n\tprivate rp(a: any, b: StyleShapeEventArgs): void {\r\n\t\tif (this.styleShape != null) {\r\n\t\t\tthis.styleShape(this, b);\r\n\t\t}\r\n\t}\r\n\tstyleShape: (sender: any, e: StyleShapeEventArgs) => void = null;\r\n\tprotected l9(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.l9(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase GeographicPolylineSeries.$$p[1]:\r\n\t\t\tthis.rl.cj();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicPolylineSeries.$$p[0]:\r\n\t\t\tthis.rl.ck();\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicPolylineSeries, 'raisePropertyChanged', [ 'ShapeStyle:rs:rq', [ (<any>Style).$, null ], 'ShapeStyleSelector:rk:rr', [ (<any>StyleSelector).$, null ] ]);\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcStyleShapeEventArgs } from \"igniteui-charts/igc-style-shape-event-args\";\r\nimport { IgcGeographicShapeSeriesBaseComponent } from \"./igc-geographic-shape-series-base-component\";\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicPolylineSeries } from \"./GeographicPolylineSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\nimport { Style } from \"igniteui-core/Style\";\r\n\r\n/**\r\n * Series class used for displaying multiple polylines, in a geographic context, for datasources which contain multiple lists of points.\r\n*/\r\nexport class IgcGeographicPolylineSeriesComponent extends IgcGeographicShapeSeriesBaseComponent\r\n{\r\n\r\nprotected createImplementation() : GeographicPolylineSeries\r\n{\r\n\treturn new GeographicPolylineSeries();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicPolylineSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).connectedCallback) {\r\n\t            (<any>this.i).connectedCallback();\r\n\t        }\r\n\t        \r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }\r\n\t    disconnectedCallback() {\r\n\t        if (super[\"disconnectedCallback\"]) {\r\n\t            super[\"disconnectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).disconnectedCallback) {\r\n\t            (<any>this.i).disconnectedCallback();\r\n\t        }\r\n\t        if (this._attached) {\r\n\t            this._attached = false;\r\n\t        }\r\n\t    }\r\n\t\r\n\t                private static _observedAttributesIgcGeographicPolylineSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicPolylineSeriesComponent._observedAttributesIgcGeographicPolylineSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicPolylineSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicPolylineSeriesComponent._observedAttributesIgcGeographicPolylineSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicPolylineSeriesComponent._observedAttributesIgcGeographicPolylineSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t\r\n\t                public static htmlTagName: string = \"igc-geographic-polyline-series\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcGeographicPolylineSeriesComponent._isElementRegistered) {\r\n\t                        IgcGeographicPolylineSeriesComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcGeographicPolylineSeriesComponent.htmlTagName,\r\n\t                            IgcGeographicPolylineSeriesComponent);\r\n\t                    }\r\n\t            }\r\n\t/**\r\n\t * Gets whether the current series shows a polyline shape.\r\n\t*/\r\n\tget isPolyline() : boolean {\r\n\t\treturn (this.i.eb as boolean);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the fill brush.\r\n\t*/\r\n\tget shapeFill() : string {\r\n\t\treturn this.i.rs ? (this.i.rs.fill as string) : null;\r\n\t}\r\n\tset shapeFill(v: string) {\r\n\t\tthis.ensureShapeStyle();\r\n\t                                        this.i.rs.fill = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the stroke brush.\r\n\t*/\r\n\tget shapeStroke() : string {\r\n\t\treturn this.i.rs ? (this.i.rs.stroke as string) : null;\r\n\t}\r\n\tset shapeStroke(v: string) {\r\n\t\tthis.ensureShapeStyle();\r\n\t                                        this.i.rs.stroke = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the stroke thickness.\r\n\t*/\r\n\tget shapeStrokeThickness() : number {\r\n\t\treturn this.i.rs ? (this.i.rs.strokeThickness as number) : NaN;\r\n\t}\r\n\tset shapeStrokeThickness(v: number) {\r\n\t                                        this.ensureShapeStyle();\r\n\t\tthis.i.rs.strokeThickness = +v;\r\n\t                                        this._a(\"shapeStrokeThickness\", this.i.rs.strokeThickness);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the opacity.\r\n\t*/\r\n\tget shapeOpacity() : number {\r\n\t\treturn this.i.rs ? (this.i.rs.opacity as number) : NaN;\r\n\t}\r\n\tset shapeOpacity(v: number) {\r\n\t                                        this.ensureShapeStyle();\r\n\t\tthis.i.rs.opacity = +v;\r\n\t                                        this._a(\"shapeOpacity\", this.i.rs.opacity);\r\n\t}\r\n\tensureShapeStyle() {\r\n\tif (this.i.rs) {\r\n\t                                            return;\r\n\t                                        }\r\n\t                                        this.i.rs = new Style();\r\n\t\r\n\t                                }\r\n\t\r\n\t    private _styleShape: (s: IgcGeographicPolylineSeriesComponent, e: IgcStyleShapeEventArgs) => void = null;\r\n\t    private _styleShape_wrapped: any = null;\r\n\t\r\n\tpublic get styleShape(): (s: IgcGeographicPolylineSeriesComponent, e: IgcStyleShapeEventArgs) => void {\r\n\treturn this._styleShape;\r\n\t}\r\n\t    public set styleShape(ev: (s: IgcGeographicPolylineSeriesComponent, e: IgcStyleShapeEventArgs) => void) {\r\n\t        if (this._styleShape_wrapped !== null) {\r\n\t            this.i.styleShape = delegateRemove(this.i.styleShape, this._styleShape_wrapped);\r\n\t            this._styleShape_wrapped = null;\r\n\t            this._styleShape = null;\r\n\t        }\r\n\t\r\n\t        this._styleShape = ev;\r\n\t        this._styleShape_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcStyleShapeEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeStyleShape) {\r\n\t                        (this as any).beforeStyleShape(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._styleShape) {\r\n\t    this._styleShape(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.styleShape = delegateCombine(this.i.styleShape, this._styleShape_wrapped);;\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcScatterPolylineSeriesModule } from 'igniteui-charts/igc-scatter-polyline-series-module';\r\n\r\nimport { IgcGeographicPolylineSeriesComponent } from './igc-geographic-polyline-series-component';\r\nimport { GeographicPolylineSeries } from './GeographicPolylineSeries';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcGeographicPolylineSeriesModule {\r\n    public static register(): void {\r\nIgcScatterPolylineSeriesModule.register();\r\n        IgcGeographicPolylineSeriesComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcGeographicPolylineSeriesComponent\", IgcGeographicPolylineSeriesComponent);\r\n        TypeRegistrar.register(\"GeographicPolylineSeries\", (<any>GeographicPolylineSeries).$type);\r\n    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { HostSeriesView } from \"./HostSeriesView\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { BubbleSeries } from \"igniteui-charts/BubbleSeries\";\r\nimport { ScatterBase } from \"igniteui-charts/ScatterBase\";\r\nimport { GeographicMarkerSeries } from \"./GeographicMarkerSeries\";\r\nimport { MarkerSeries } from \"igniteui-charts/MarkerSeries\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { XamGeographicMap } from \"./XamGeographicMap\";\r\nimport { Base, Type, markType, String_$type, Boolean_$type, Number_$type, enumGetBox, EnumUtil, typeGetValue, runOn, delegateCombine, delegateRemove, markDep } from \"igniteui-core/type\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { SizeScale } from \"igniteui-charts/SizeScale\";\r\nimport { BrushScale } from \"igniteui-charts/BrushScale\";\r\nimport { ScatterItemSearchMode, ScatterItemSearchMode_$type } from \"igniteui-charts/ScatterItemSearchMode\";\r\nimport { Control } from \"igniteui-core/Control\";\r\nimport { AssigningScatterStyleEventArgs } from \"igniteui-charts/AssigningScatterStyleEventArgs\";\r\nimport { AssigningScatterMarkerStyleEventArgs } from \"igniteui-charts/AssigningScatterMarkerStyleEventArgs\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicProportionalSymbolSeriesView extends HostSeriesView {\r\n\tstatic $t: Type = markType(GeographicProportionalSymbolSeriesView, 'GeographicProportionalSymbolSeriesView', (<any>HostSeriesView).$);\r\n\tconstructor(a: GeographicProportionalSymbolSeries) {\r\n\t\tsuper(a);\r\n\t\tthis.ce = a;\r\n\t}\r\n\tprivate ce: GeographicProportionalSymbolSeries = null;\r\n\tas(): void {\r\n\t\tsuper.as();\r\n\t\tif (!this.q) {\r\n\t\t}\r\n\t}\r\n\tb2(): void {\r\n\t\tsuper.b2();\r\n\t\tlet a = <BubbleSeries>this.ce.qe;\r\n\t\ta.tr = this.ce.sd;\r\n\t\ta.tz = this.ce.sb;\r\n\t\ta.ql = this.ce.qo;\r\n\t\ta.q7 = this.ce.q4;\r\n\t\ta.qq = this.ce.qp;\r\n\t\ta.vv = this.ce.rx;\r\n\t\ta.wl = this.ce.si;\r\n\t\ta.vl = this.ce.rp;\r\n\t\ta.wb = this.ce.r9;\r\n\t\ta.v6 = this.ce.r1;\r\n\t\ta.vi = this.ce.rm;\r\n\t\ta.vt = this.ce.rt;\r\n\t\ta.vu = this.ce.rw;\r\n\t\ta.v0 = this.ce.rz;\r\n\t\ta.vz = this.ce.ry;\r\n\t}\r\n\tcn(): void {\r\n\t\t(<BubbleSeries>this.ce.qe).tr = this.ce.sd;\r\n\t}\r\n\tcm(): void {\r\n\t\t(<BubbleSeries>this.ce.qe).tz = this.ce.sb;\r\n\t}\r\n\tcs(): void {\r\n\t\t(<BubbleSeries>this.ce.qe).ql = this.ce.qo;\r\n\t}\r\n\tcq(): void {\r\n\t\t(<BubbleSeries>this.ce.qe).q7 = this.ce.q4;\r\n\t}\r\n\tcr(): void {\r\n\t\t(<BubbleSeries>this.ce.qe).qq = this.ce.qp;\r\n\t}\r\n\tct(): void {\r\n\t\t(<BubbleSeries>this.ce.qe).tb = this.ce.qq;\r\n\t}\r\n\tcv(): void {\r\n\t\t(<BubbleSeries>this.ce.qe).xAxis = (<XamGeographicMap>this.ce.ce).t7;\r\n\t}\r\n\tcw(): void {\r\n\t\t(<BubbleSeries>this.ce.qe).yAxis = (<XamGeographicMap>this.ce.ce).t9;\r\n\t}\r\n\tcu(): void {\r\n\t\tlet a = <BubbleSeries>this.ce.qe;\r\n\t\tif (this.ce.ce == null) {\r\n\t\t\ta.xAxis = null;\r\n\t\t\ta.yAxis = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\ta.xAxis = (<XamGeographicMap>this.ce.ce).t7;\r\n\t\ta.yAxis = (<XamGeographicMap>this.ce.ce).t9;\r\n\t}\r\n\tco(): void {\r\n\t\t(<BubbleSeries>this.ce.qe).rn = this.ce.ri;\r\n\t}\r\n\tcp(): void {\r\n\t\t(<BubbleSeries>this.ce.qe).ro = this.ce.rj;\r\n\t}\r\n\tcx(): void {\r\n\t\t(<BubbleSeries>this.ce.qe).wl = this.ce.si;\r\n\t}\r\n\tcy(): void {\r\n\t\t(<BubbleSeries>this.ce.qe).vl = this.ce.rp;\r\n\t\t(<BubbleSeries>this.ce.qe).vv = this.ce.rx;\r\n\t}\r\n\tci(): void {\r\n\t\t(<BubbleSeries>this.ce.qe).wb = this.ce.r9;\r\n\t}\r\n\tcg(): void {\r\n\t\t(<BubbleSeries>this.ce.qe).vi = this.ce.rm;\r\n\t\t(<BubbleSeries>this.ce.qe).vt = this.ce.rt;\r\n\t\t(<BubbleSeries>this.ce.qe).vu = this.ce.rw;\r\n\t\t(<BubbleSeries>this.ce.qe).v0 = this.ce.rz;\r\n\t\t(<BubbleSeries>this.ce.qe).vz = this.ce.ry;\r\n\t}\r\n\tcf(): void {\r\n\t\t(<BubbleSeries>this.ce.qe).v6 = this.ce.r1;\r\n\t}\r\n\tcz(): void {\r\n\t\t(<BubbleSeries>this.ce.qe).vv = this.ce.rx;\r\n\t}\r\n\tch(): void {\r\n\t\t(<BubbleSeries>this.ce.qe).vt = this.ce.rt;\r\n\t}\r\n\tcl(): void {\r\n\t\t(<BubbleSeries>this.ce.qe).vu = this.ce.rw;\r\n\t}\r\n\tck(): void {\r\n\t\t(<BubbleSeries>this.ce.qe).v0 = this.ce.rz;\r\n\t}\r\n\tcj(): void {\r\n\t\t(<BubbleSeries>this.ce.qe).vz = this.ce.ry;\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicProportionalSymbolSeries extends GeographicMarkerSeries {\r\n\tstatic $t: Type = markType(GeographicProportionalSymbolSeries, 'GeographicProportionalSymbolSeries', (<any>GeographicMarkerSeries).$);\r\n\tprotected get_c5(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>GeographicProportionalSymbolSeries).$;\r\n\t}\r\n\tprotected by(): SeriesView {\r\n\t\treturn new GeographicProportionalSymbolSeriesView(this);\r\n\t}\r\n\tl4(a: SeriesView): void {\r\n\t\tsuper.l4(a);\r\n\t\tthis.rq = <GeographicProportionalSymbolSeriesView>a;\r\n\t}\r\n\trq: GeographicProportionalSymbolSeriesView;\r\n\tprotected g0(): number {\r\n\t\treturn 0.7;\r\n\t}\r\n\tprotected qd(): Series {\r\n\t\treturn new BubbleSeries();\r\n\t}\r\n\tprivate rn: BubbleSeries = null;\r\n\tsb: string;\r\n\tsd: string;\r\n\tsi: string;\r\n\trp: SizeScale;\r\n\tr9: string;\r\n\tr1: string;\r\n\trm: BrushScale;\r\n\trt: boolean;\r\n\trw: boolean;\r\n\trz: number;\r\n\try: number;\r\n\trx: boolean;\r\n\trv: boolean;\r\n\tru: boolean;\r\n\tprotected rs: boolean = false;\r\n\tprotected rr: boolean = false;\r\n\tprotected get_d0(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tassigningScatterStyle: (sender: any, args: AssigningScatterStyleEventArgs) => void = null;\r\n\tassigningScatterMarkerStyle: (sender: any, args: AssigningScatterMarkerStyleEventArgs) => void = null;\r\n\tro: ScatterItemSearchMode;\r\n\tr0: number;\r\n\tprotected l9(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.l9(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase \"SeriesViewer\":\r\n\t\t\tthis.rq.cu();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[9]:\r\n\t\t\tthis.rq.cn();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[8]:\r\n\t\t\tthis.rq.cm();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"XAxis\":\r\n\t\t\tthis.rq.cv();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"YAxis\":\r\n\t\t\tthis.rq.cw();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[13]:\r\n\t\t\tthis.rq.cx();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[14]:\r\n\t\t\tthis.rq.cy();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[15]:\r\n\t\t\tthis.rq.cz();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[7]:\r\n\t\t\tthis.rq.ci();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[0]:\r\n\t\t\tthis.rq.cf();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[1]:\r\n\t\t\tthis.rq.cg();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[2]:\r\n\t\t\tthis.rq.ch();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[12]:\r\n\t\t\tthis.rq.cl();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[11]:\r\n\t\t\tthis.rq.ck();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[10]:\r\n\t\t\tthis.rq.cj();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[4]:\r\n\t\t\t(<ScatterBase>this.qe).st = this.rv;\r\n\t\t\tthis.rs = this.rv;\r\n\t\t\tif (this.rv) {\r\n\t\t\t\tlet e = (<ScatterBase>this.qe);\r\n\t\t\t\te.assigningScatterStyle = delegateCombine(e.assigningScatterStyle, runOn(this, this.sn));\r\n\t\t\t} else {\r\n\t\t\t\tlet f = (<ScatterBase>this.qe);\r\n\t\t\t\tf.assigningScatterStyle = delegateRemove(f.assigningScatterStyle, runOn(this, this.sn));\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[3]:\r\n\t\t\t(<ScatterBase>this.qe).ss = this.ru;\r\n\t\t\tthis.rr = this.ru;\r\n\t\t\tif (this.rv) {\r\n\t\t\t\tlet g = (<ScatterBase>this.qe);\r\n\t\t\t\tg.assigningScatterMarkerStyle = delegateCombine(g.assigningScatterMarkerStyle, runOn(this, this.sm));\r\n\t\t\t} else {\r\n\t\t\t\tlet h = (<ScatterBase>this.qe);\r\n\t\t\t\th.assigningScatterMarkerStyle = delegateRemove(h.assigningScatterMarkerStyle, runOn(this, this.sm));\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[5]:\r\n\t\t\t(<ScatterBase>this.qe).sh = this.ro;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[6]:\r\n\t\t\t(<ScatterBase>this.qe).ta = this.r0;\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprivate sn(a: any, b: AssigningScatterStyleEventArgs): void {\r\n\t\tif (this.assigningScatterStyle != null) {\r\n\t\t\tthis.assigningScatterStyle(this, b);\r\n\t\t}\r\n\t}\r\n\tprivate sm(a: any, b: AssigningScatterMarkerStyleEventArgs): void {\r\n\t\tif (this.assigningScatterMarkerStyle != null) {\r\n\t\t\tthis.assigningScatterMarkerStyle(this, b);\r\n\t\t}\r\n\t}\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicProportionalSymbolSeries, 'raisePropertyChanged', [ 'FillMemberPath:r1:so', [ 2 ], 'FillScale:rm:sp', [ (<any>BrushScale).$ ], 'FillScaleUseGlobalValues:rt:sq', [ 0, false ], 'IsCustomScatterMarkerStyleAllowed:ru:sr', [ 0, false ], 'IsCustomScatterStyleAllowed:rv:ss', [ 0, false ], 'ItemSearchMode:ro:st', [ ScatterItemSearchMode_$type, enumGetBox<ScatterItemSearchMode>(ScatterItemSearchMode_$type, 0) ], 'ItemSearchThreshold:r0:su', [ 1, 10000 ], 'LabelMemberPath:r9:sv', [ 2 ], 'LatitudeMemberPath:sb:sw', [ 2, null ], 'LongitudeMemberPath:sd:sx', [ 2, null ], 'MarkerBrushBrightness:ry:sy', [ 1, NaN ], 'MarkerOutlineBrightness:rz:sz', [ 1, NaN ], 'MarkerOutlineUsesFillScale:rw:s0', [ 0, false ], 'RadiusMemberPath:si:s1', [ 2, null ], 'RadiusScale:rp:s2', [ (<any>SizeScale).$ ], 'RadiusScaleUseGlobalValues:rx:s3', [ 0, false ] ]);\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcSizeScaleComponent } from \"igniteui-charts/igc-size-scale-component\";\r\nimport { IgcBrushScaleComponent } from \"igniteui-charts/igc-brush-scale-component\";\r\nimport { ScatterItemSearchMode, ScatterItemSearchMode_$type } from \"igniteui-charts/ScatterItemSearchMode\";\r\nimport { IgcAssigningScatterStyleEventArgs } from \"igniteui-charts/igc-assigning-scatter-style-event-args\";\r\nimport { IgcAssigningScatterMarkerStyleEventArgs } from \"igniteui-charts/igc-assigning-scatter-marker-style-event-args\";\r\nimport { IgcGeographicMarkerSeriesComponent } from \"./igc-geographic-marker-series-component\";\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicProportionalSymbolSeries } from \"./GeographicProportionalSymbolSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool, ensureEnum, enumToString } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\n\r\n/**\r\n * Series class for a geographic map with points marked at given locations.\r\n * This is the geographic equivalent of a ScatterSeries.\r\n*/\r\nexport class IgcGeographicProportionalSymbolSeriesComponent extends IgcGeographicMarkerSeriesComponent\r\n{\r\n\r\nprotected createImplementation() : GeographicProportionalSymbolSeries\r\n{\r\n\treturn new GeographicProportionalSymbolSeries();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicProportionalSymbolSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).connectedCallback) {\r\n\t            (<any>this.i).connectedCallback();\r\n\t        }\r\n\t        \r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }\r\n\t    disconnectedCallback() {\r\n\t        if (super[\"disconnectedCallback\"]) {\r\n\t            super[\"disconnectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).disconnectedCallback) {\r\n\t            (<any>this.i).disconnectedCallback();\r\n\t        }\r\n\t        if (this._attached) {\r\n\t            this._attached = false;\r\n\t        }\r\n\t    }\r\n\t\r\n\t                private static _observedAttributesIgcGeographicProportionalSymbolSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicProportionalSymbolSeriesComponent._observedAttributesIgcGeographicProportionalSymbolSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicProportionalSymbolSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicProportionalSymbolSeriesComponent._observedAttributesIgcGeographicProportionalSymbolSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicProportionalSymbolSeriesComponent._observedAttributesIgcGeographicProportionalSymbolSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t\r\n\t                public static htmlTagName: string = \"igc-geographic-proportional-symbol-series\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcGeographicProportionalSymbolSeriesComponent._isElementRegistered) {\r\n\t                        IgcGeographicProportionalSymbolSeriesComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcGeographicProportionalSymbolSeriesComponent.htmlTagName,\r\n\t                            IgcGeographicProportionalSymbolSeriesComponent);\r\n\t                    }\r\n\t            }\r\n\t/**\r\n\t * Gets whether the series has only marker as visuals\r\n\t*/\r\n\tget hasOnlyMarkers() : boolean {\r\n\t\treturn (this.i.c5 as boolean);\r\n\t}\r\n\t/**\r\n\t * The name of the property of ItemsSource items which contains the latitude coordinate of the symbol.\r\n\t*/\r\n\tget latitudeMemberPath() : string {\r\n\t\treturn (this.i.sb as string);\r\n\t}\r\n\tset latitudeMemberPath(v: string) {\r\n\t\tthis.i.sb = v;\r\n\t}\r\n\t/**\r\n\t * The name of the property of ItemsSource items which contains the longitude coordinate of the symbol.\r\n\t*/\r\n\tget longitudeMemberPath() : string {\r\n\t\treturn (this.i.sd as string);\r\n\t}\r\n\tset longitudeMemberPath(v: string) {\r\n\t\tthis.i.sd = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the radius mapping property for the current series object.\r\n\t*/\r\n\tget radiusMemberPath() : string {\r\n\t\treturn (this.i.si as string);\r\n\t}\r\n\tset radiusMemberPath(v: string) {\r\n\t\tthis.i.si = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the radius size scale for the bubbles.\r\n\t*/\r\n\tget radiusScale() : IgcSizeScaleComponent {\r\n\t                                        const r = this.i.rp;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcSizeScaleComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset radiusScale(v: IgcSizeScaleComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.rp = null : this.i.rp = v.i;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the Label mapping property for the current series object.\r\n\t*/\r\n\tget labelMemberPath() : string {\r\n\t\treturn (this.i.r9 as string);\r\n\t}\r\n\tset labelMemberPath(v: string) {\r\n\t\tthis.i.r9 = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the fill mapping property for the current series object.\r\n\t*/\r\n\tget fillMemberPath() : string {\r\n\t\treturn (this.i.r1 as string);\r\n\t}\r\n\tset fillMemberPath(v: string) {\r\n\t\tthis.i.r1 = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the brush scale for the marker brush.\r\n\t*/\r\n\tget fillScale() : IgcBrushScaleComponent {\r\n\t                                        const r = this.i.rm;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcBrushScaleComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset fillScale(v: IgcBrushScaleComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.rm = null : this.i.rm = v.i;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the whether or not the FillScale uses global values of FillMemberPath of multiple series.\r\n\t * This setting applies only if multiple series are using the same FillScale.\r\n\t*/\r\n\tget fillScaleUseGlobalValues() : boolean {\r\n\t\treturn (this.i.rt as boolean);\r\n\t}\r\n\tset fillScaleUseGlobalValues(v: boolean) {\r\n\t\tthis.i.rt = ensureBool(v);\r\n\t                                        this._a(\"fillScaleUseGlobalValues\", this.i.rt);\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether or not the marker outline should use FillScale like the marker fill does.\r\n\t * This setting applies only if the current series has a FillScale set and it overrides MarkerOutline setting.\r\n\t*/\r\n\tget markerOutlineUsesFillScale() : boolean {\r\n\t\treturn (this.i.rw as boolean);\r\n\t}\r\n\tset markerOutlineUsesFillScale(v: boolean) {\r\n\t\tthis.i.rw = ensureBool(v);\r\n\t                                        this._a(\"markerOutlineUsesFillScale\", this.i.rw);\r\n\t}\r\n\t/**\r\n\t * Gets or sets brightness of the marker outline. Using negative value will change marker outline to darker color and positive value will change marker outline to brighter color \r\n\t * Note you can use any values between minimum value of -1 (darkest outline) and maximum value of 1 (brightest outline)\r\n\t*/\r\n\tget markerOutlineBrightness() : number {\r\n\t\treturn (this.i.rz as number);\r\n\t}\r\n\tset markerOutlineBrightness(v: number) {\r\n\t\tthis.i.rz = +v;\r\n\t                                        this._a(\"markerOutlineBrightness\", this.i.rz);\r\n\t}\r\n\t/**\r\n\t * Gets or sets brightness of the marker fill. Using negative value will change marker fill to darker color and positive value will change marker fill to brighter color \r\n\t * Note you can use any values between minimum value of -1 (darkest fill) and maximum value of 1 (brightest fill)\r\n\t*/\r\n\tget markerBrushBrightness() : number {\r\n\t\treturn (this.i.ry as number);\r\n\t}\r\n\tset markerBrushBrightness(v: number) {\r\n\t\tthis.i.ry = +v;\r\n\t                                        this._a(\"markerBrushBrightness\", this.i.ry);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the whether or not the RadiusScale uses global values of RadiusMemberPath of multiple series.\r\n\t * This setting applies only if multiple series are using the same RadiusScale.\r\n\t*/\r\n\tget radiusScaleUseGlobalValues() : boolean {\r\n\t\treturn (this.i.rx as boolean);\r\n\t}\r\n\tset radiusScaleUseGlobalValues(v: boolean) {\r\n\t\tthis.i.rx = ensureBool(v);\r\n\t                                        this._a(\"radiusScaleUseGlobalValues\", this.i.rx);\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether this Scatter series should allow custom style overrides of its individual visuals.\r\n\t*/\r\n\tget isCustomScatterStyleAllowed() : boolean {\r\n\t\treturn (this.i.rv as boolean);\r\n\t}\r\n\tset isCustomScatterStyleAllowed(v: boolean) {\r\n\t\tthis.i.rv = ensureBool(v);\r\n\t                                        this._a(\"isCustomScatterStyleAllowed\", this.i.rv);\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether this Scatter series should allow custom style overrides of its individual marker visuals.\r\n\t*/\r\n\tget isCustomScatterMarkerStyleAllowed() : boolean {\r\n\t\treturn (this.i.ru as boolean);\r\n\t}\r\n\tset isCustomScatterMarkerStyleAllowed(v: boolean) {\r\n\t\tthis.i.ru = ensureBool(v);\r\n\t                                        this._a(\"isCustomScatterMarkerStyleAllowed\", this.i.ru);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the mode the series will use to find the closest point to the cursor.\r\n\t*/\r\n\tget itemSearchMode() : ScatterItemSearchMode {\r\n\t\treturn this.i.ro;\r\n\t}\r\n\tset itemSearchMode(v: ScatterItemSearchMode) {\r\n\t\tthis.i.ro = ensureEnum<ScatterItemSearchMode>(ScatterItemSearchMode_$type, v);\r\n\t                                        this._a(\"itemSearchMode\", enumToString<ScatterItemSearchMode>(ScatterItemSearchMode_$type, this.i.ro));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the threshold to use when searching for items using ItemSearchMode.\r\n\t*/\r\n\tget itemSearchThreshold() : number {\r\n\t\treturn (this.i.r0 as number);\r\n\t}\r\n\tset itemSearchThreshold(v: number) {\r\n\t\tthis.i.r0 = +v;\r\n\t                                        this._a(\"itemSearchThreshold\", this.i.r0);\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    var baseResult = super.findByName(name);\r\n\t    if (baseResult)\r\n\t    {\r\n\t        return baseResult;\r\n\t    }\r\n\t\r\n\tif (this.radiusScale && (this.radiusScale as any).name && (this.radiusScale as any).name == name) { return this.radiusScale; }\r\n\tif (this.fillScale && (this.fillScale as any).name && (this.fillScale as any).name == name) { return this.fillScale; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\t\r\n\t        protected _styling(container: any, component: any, parent?: any) {\r\n\t            super._styling(container, component, parent);\r\n\t\r\n\t            this._inStyling = true;\r\n\t            if (this.radiusScale && (this.radiusScale as any)._styling) {\r\n\t    (this.radiusScale as any)._styling(container, component, this);\r\n\t}\r\n\tif (this.fillScale && (this.fillScale as any)._styling) {\r\n\t    (this.fillScale as any)._styling(container, component, this);\r\n\t}\r\n\t\r\n\t            this._inStyling = false;\r\n\t        }\r\n\t\r\n\t    private _assigningScatterStyle: (s: IgcGeographicProportionalSymbolSeriesComponent, e: IgcAssigningScatterStyleEventArgs) => void = null;\r\n\t    private _assigningScatterStyle_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when Assigning Category Style\r\n\t*/\r\n\t\r\n\tpublic get assigningScatterStyle(): (s: IgcGeographicProportionalSymbolSeriesComponent, e: IgcAssigningScatterStyleEventArgs) => void {\r\n\treturn this._assigningScatterStyle;\r\n\t}\r\n\t    public set assigningScatterStyle(ev: (s: IgcGeographicProportionalSymbolSeriesComponent, e: IgcAssigningScatterStyleEventArgs) => void) {\r\n\t        if (this._assigningScatterStyle_wrapped !== null) {\r\n\t            this.i.assigningScatterStyle = delegateRemove(this.i.assigningScatterStyle, this._assigningScatterStyle_wrapped);\r\n\t            this._assigningScatterStyle_wrapped = null;\r\n\t            this._assigningScatterStyle = null;\r\n\t        }\r\n\t\r\n\t        this._assigningScatterStyle = ev;\r\n\t        this._assigningScatterStyle_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcAssigningScatterStyleEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeAssigningScatterStyle) {\r\n\t                        (this as any).beforeAssigningScatterStyle(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._assigningScatterStyle) {\r\n\t    this._assigningScatterStyle(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.assigningScatterStyle = delegateCombine(this.i.assigningScatterStyle, this._assigningScatterStyle_wrapped);;\r\n\t    }\r\n\t\r\n\t    private _assigningScatterMarkerStyle: (s: IgcGeographicProportionalSymbolSeriesComponent, e: IgcAssigningScatterMarkerStyleEventArgs) => void = null;\r\n\t    private _assigningScatterMarkerStyle_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when Assigning Scatter Marker Style\r\n\t*/\r\n\t\r\n\tpublic get assigningScatterMarkerStyle(): (s: IgcGeographicProportionalSymbolSeriesComponent, e: IgcAssigningScatterMarkerStyleEventArgs) => void {\r\n\treturn this._assigningScatterMarkerStyle;\r\n\t}\r\n\t    public set assigningScatterMarkerStyle(ev: (s: IgcGeographicProportionalSymbolSeriesComponent, e: IgcAssigningScatterMarkerStyleEventArgs) => void) {\r\n\t        if (this._assigningScatterMarkerStyle_wrapped !== null) {\r\n\t            this.i.assigningScatterMarkerStyle = delegateRemove(this.i.assigningScatterMarkerStyle, this._assigningScatterMarkerStyle_wrapped);\r\n\t            this._assigningScatterMarkerStyle_wrapped = null;\r\n\t            this._assigningScatterMarkerStyle = null;\r\n\t        }\r\n\t\r\n\t        this._assigningScatterMarkerStyle = ev;\r\n\t        this._assigningScatterMarkerStyle_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcAssigningScatterMarkerStyleEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeAssigningScatterMarkerStyle) {\r\n\t                        (this as any).beforeAssigningScatterMarkerStyle(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._assigningScatterMarkerStyle) {\r\n\t    this._assigningScatterMarkerStyle(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.assigningScatterMarkerStyle = delegateCombine(this.i.assigningScatterMarkerStyle, this._assigningScatterMarkerStyle_wrapped);;\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcBubbleSeriesModule } from 'igniteui-charts/igc-bubble-series-module';\r\n\r\nimport { IgcGeographicProportionalSymbolSeriesComponent } from './igc-geographic-proportional-symbol-series-component';\r\nimport { GeographicProportionalSymbolSeries } from './GeographicProportionalSymbolSeries';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcGeographicProportionalSymbolSeriesModule {\r\n    public static register(): void {\r\nIgcBubbleSeriesModule.register();\r\n        IgcGeographicProportionalSymbolSeriesComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcGeographicProportionalSymbolSeriesComponent\", IgcGeographicProportionalSymbolSeriesComponent);\r\n        TypeRegistrar.register(\"GeographicProportionalSymbolSeries\", (<any>GeographicProportionalSymbolSeries).$type);\r\n    }\r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcColorScaleComponent } from \"igniteui-charts/igc-color-scale-component\";\r\nimport { IgcTriangulationStatusEventArgs } from \"igniteui-core/igc-triangulation-status-event-args\";\r\nimport { IgcGeographicXYTriangulatingSeriesComponent } from \"./igc-geographic-xy-triangulating-series-component\";\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicScatterAreaSeries } from \"./GeographicScatterAreaSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\n\r\n/**\r\n * Series class which draws a colored 2D surface, in a geographic context, based on a triangulation of XY data with numeric values assigned to each point.\r\n*/\r\nexport class IgcGeographicScatterAreaSeriesComponent extends IgcGeographicXYTriangulatingSeriesComponent\r\n{\r\n\r\nprotected createImplementation() : GeographicScatterAreaSeries\r\n{\r\n\treturn new GeographicScatterAreaSeries();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicScatterAreaSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).connectedCallback) {\r\n\t            (<any>this.i).connectedCallback();\r\n\t        }\r\n\t        \r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }\r\n\t    disconnectedCallback() {\r\n\t        if (super[\"disconnectedCallback\"]) {\r\n\t            super[\"disconnectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).disconnectedCallback) {\r\n\t            (<any>this.i).disconnectedCallback();\r\n\t        }\r\n\t        if (this._attached) {\r\n\t            this._attached = false;\r\n\t        }\r\n\t    }\r\n\t\r\n\t                private static _observedAttributesIgcGeographicScatterAreaSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicScatterAreaSeriesComponent._observedAttributesIgcGeographicScatterAreaSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicScatterAreaSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicScatterAreaSeriesComponent._observedAttributesIgcGeographicScatterAreaSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicScatterAreaSeriesComponent._observedAttributesIgcGeographicScatterAreaSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t\r\n\t                public static htmlTagName: string = \"igc-geographic-scatter-area-series\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcGeographicScatterAreaSeriesComponent._isElementRegistered) {\r\n\t                        IgcGeographicScatterAreaSeriesComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcGeographicScatterAreaSeriesComponent.htmlTagName,\r\n\t                            IgcGeographicScatterAreaSeriesComponent);\r\n\t                    }\r\n\t            }\r\n\t/**\r\n\t * Gets whether the current series shows an area shape.\r\n\t*/\r\n\tget isArea() : boolean {\r\n\t\treturn (this.i.df as boolean);\r\n\t}\r\n\t/**\r\n\t * The name of the property on each data item containing a numeric value which can be converted to a color by the ColorScale.\r\n\t*/\r\n\tget colorMemberPath() : string {\r\n\t\treturn (this.i.rc as string);\r\n\t}\r\n\tset colorMemberPath(v: string) {\r\n\t\tthis.i.rc = v;\r\n\t}\r\n\t/**\r\n\t * The ColorScale used to resolve the color values of points in the series.\r\n\t*/\r\n\tget colorScale() : IgcColorScaleComponent {\r\n\t                                        const r = this.i.q7;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcColorScaleComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset colorScale(v: IgcColorScaleComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.q7 = null : this.i.q7 = v.i;\r\n\t}\r\n\t/**\r\n\t * Gets actual color scale that is set on ColorScale property or default ColorScale\r\n\t*/\r\n\tget actualColorScale() : IgcColorScaleComponent {\r\n\t                                        const r = this.i.q6;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcColorScaleComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset actualColorScale(v: IgcColorScaleComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.q6 = null : this.i.q6 = v.i;\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    var baseResult = super.findByName(name);\r\n\t    if (baseResult)\r\n\t    {\r\n\t        return baseResult;\r\n\t    }\r\n\t\r\n\tif (this.colorScale && (this.colorScale as any).name && (this.colorScale as any).name == name) { return this.colorScale; }\r\n\tif (this.actualColorScale && (this.actualColorScale as any).name && (this.actualColorScale as any).name == name) { return this.actualColorScale; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\t\r\n\t        protected _styling(container: any, component: any, parent?: any) {\r\n\t            super._styling(container, component, parent);\r\n\t\r\n\t            this._inStyling = true;\r\n\t            if (this.colorScale && (this.colorScale as any)._styling) {\r\n\t    (this.colorScale as any)._styling(container, component, this);\r\n\t}\r\n\tif (this.actualColorScale && (this.actualColorScale as any)._styling) {\r\n\t    (this.actualColorScale as any)._styling(container, component, this);\r\n\t}\r\n\t\r\n\t            this._inStyling = false;\r\n\t        }\r\n\t/**\r\n\t * Updates ActualColorScale properties using HostedSeries's ColorScale properties\r\n\t\r\n\t*/\r\n\tpublic updateActualColorScale() {\r\n\t\tthis.i.rh();\r\n\t}\r\n\t\r\n\t    private _triangulationStatusChanged: (s: IgcGeographicScatterAreaSeriesComponent, e: IgcTriangulationStatusEventArgs) => void = null;\r\n\t    private _triangulationStatusChanged_wrapped: any = null;\r\n\t/**\r\n\t * Raised when the status of an ongoing Triangulation has changed.\r\n\t*/\r\n\t\r\n\tpublic get triangulationStatusChanged(): (s: IgcGeographicScatterAreaSeriesComponent, e: IgcTriangulationStatusEventArgs) => void {\r\n\treturn this._triangulationStatusChanged;\r\n\t}\r\n\t    public set triangulationStatusChanged(ev: (s: IgcGeographicScatterAreaSeriesComponent, e: IgcTriangulationStatusEventArgs) => void) {\r\n\t        if (this._triangulationStatusChanged_wrapped !== null) {\r\n\t            this.i.triangulationStatusChanged = delegateRemove(this.i.triangulationStatusChanged, this._triangulationStatusChanged_wrapped);\r\n\t            this._triangulationStatusChanged_wrapped = null;\r\n\t            this._triangulationStatusChanged = null;\r\n\t        }\r\n\t\r\n\t        this._triangulationStatusChanged = ev;\r\n\t        this._triangulationStatusChanged_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcTriangulationStatusEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeTriangulationStatusChanged) {\r\n\t                        (this as any).beforeTriangulationStatusChanged(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._triangulationStatusChanged) {\r\n\t    this._triangulationStatusChanged(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.triangulationStatusChanged = delegateCombine(this.i.triangulationStatusChanged, this._triangulationStatusChanged_wrapped);;\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcScatterAreaSeriesModule } from 'igniteui-charts/igc-scatter-area-series-module';\r\n\r\nimport { IgcGeographicScatterAreaSeriesComponent } from './igc-geographic-scatter-area-series-component';\r\nimport { GeographicScatterAreaSeries } from './GeographicScatterAreaSeries';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcGeographicScatterAreaSeriesModule {\r\n    public static register(): void {\r\nIgcScatterAreaSeriesModule.register();\r\n        IgcGeographicScatterAreaSeriesComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcGeographicScatterAreaSeriesComponent\", IgcGeographicScatterAreaSeriesComponent);\r\n        TypeRegistrar.register(\"GeographicScatterAreaSeries\", (<any>GeographicScatterAreaSeries).$type);\r\n    }\r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicShapeSeriesBase } from \"./GeographicShapeSeriesBase\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool, ensureEnum, enumToString } from \"igniteui-core/componentUtil\";\r\nimport { IgcShapeDataSource } from \"igniteui-core/igc-shape-data-source\";\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcAssigningShapeStyleEventArgs } from 'igniteui-charts/igc-assigning-shape-style-event-args';\r\nimport { IgcAssigningShapeMarkerStyleEventArgs } from 'igniteui-charts/igc-assigning-shape-marker-style-event-args';\r\nimport { ShapeItemSearchMode, ShapeItemSearchMode_$type } from 'igniteui-charts/ShapeItemSearchMode';\r\n\r\n/**\r\n * Base class for series which render polygons on a map.\r\n*/\r\nexport abstract class IgcGeographicShapeSeriesBaseComponent extends IgcGeographicMapSeriesHostComponent\r\n{\r\n\r\n\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicShapeSeriesBase {\r\n\t\treturn this._implementation;\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).connectedCallback) {\r\n\t            (<any>this.i).connectedCallback();\r\n\t        }\r\n\t        \r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }\r\n\t    disconnectedCallback() {\r\n\t        if (super[\"disconnectedCallback\"]) {\r\n\t            super[\"disconnectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).disconnectedCallback) {\r\n\t            (<any>this.i).disconnectedCallback();\r\n\t        }\r\n\t        if (this._attached) {\r\n\t            this._attached = false;\r\n\t        }\r\n\t    }\r\n\t\r\n\t                private static _observedAttributesIgcGeographicShapeSeriesBaseComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicShapeSeriesBaseComponent._observedAttributesIgcGeographicShapeSeriesBaseComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicShapeSeriesBaseComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicShapeSeriesBaseComponent._observedAttributesIgcGeographicShapeSeriesBaseComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicShapeSeriesBaseComponent._observedAttributesIgcGeographicShapeSeriesBaseComponent;               \r\n\t                }                 \r\n\t            \r\n\r\n    private _shapeDataSource: string;\r\n\t/**\r\n \t * Gets or sets the string path of the .shp portion of the Shapefile.\r\n\t*/\r\n    set shapeDataSource(value: string) {\r\n        this._shapeDataSource = value;\r\n        this.updateShapeDataSource();\r\n    }\r\n    get shapeDataSource(): string {\r\n        return this._shapeDataSource;\r\n    }\r\n\r\n    private _databaseSource: string;\r\n\t/**\r\n\t * Gets or sets the string path of the .dbf portion of the Shapefile.\r\n\t*/\r\n    set databaseSource(value: string) {\r\n        this._databaseSource = value;\r\n        this.updateShapeDataSource();\r\n    }\r\n    get databaseSource(): string {\r\n        return this._databaseSource;\r\n    }\r\n\r\n    private _currData: any = null;\r\n    private _onImportCompleted: any = null;\r\n    protected onUpdateDataSource(dataSource: any): any {\r\n        if (this._onImportCompleted == null) {\r\n            this._onImportCompleted = (s, e) => {\r\n                if (this._currData) {\r\n                    this._currData.i.importCompleted = delegateRemove(this._currData.i.importCompleted, this._onImportCompleted);\r\n                    var data = this._currData;\r\n                    this._currData = null;\r\n                    this.i.itemsSource = data.getPointData();\r\n                }\r\n            };\r\n        }\r\n        \r\n        if (dataSource && dataSource.getPointData) {\r\n            if (dataSource.count > 0) {\r\n                return dataSource.getPointData();\r\n            }\r\n            this._currData = dataSource;\r\n            this._currData.i.importCompleted = delegateCombine(this._currData.i.importCompleted, this._onImportCompleted);\r\n            return null;\r\n        }\r\n        return dataSource;\r\n    }\r\n\r\n    private _cachedShapeDataSource: IgcShapeDataSource;\r\n    private updateShapeDataSource() {\r\n        if (this._cachedShapeDataSource == null) {\r\n            this._cachedShapeDataSource = new IgcShapeDataSource();\r\n            this.onShapeDataSourceImportCompleted = this.onShapeDataSourceImportCompleted.bind(this);\r\n            this._cachedShapeDataSource.importCompleted = this.onShapeDataSourceImportCompleted;\r\n        }\r\n\r\n        this._cachedShapeDataSource.shapefileSource = this._shapeDataSource;\r\n       \tthis._cachedShapeDataSource.databaseSource = this._databaseSource;\r\n\r\n        if (this._shapeDataSource && this._databaseSource) {\r\n            this._cachedShapeDataSource.dataBind();\r\n        }\r\n    }\r\n\r\n    private onShapeDataSourceImportCompleted(s: any, e: any) {\r\n        this.dataSource = this._cachedShapeDataSource.getPointData();\r\n    }\r\n\r\n\t/**\r\n\t * The name of the property on ItemsSource items which, for each shape, contains a list of points to be converted to a polygon.\r\n\t * To be consistent with the Shapefile technical description, it is expected that each list of points is defined as an IEnumerable of IEnumerable of Point, or in other words, a list of lists of points.\r\n\t*/\r\n\tget shapeMemberPath() : string {\r\n\t\treturn (this.i.q7 as string);\r\n\t}\r\n\tset shapeMemberPath(v: string) {\r\n\t\tthis.i.q7 = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether this Shape series should allow custom style overrides of its individual visuals.\r\n\t*/\r\n\tget isCustomShapeStyleAllowed() : boolean {\r\n\t\treturn (this.i.qw as boolean);\r\n\t}\r\n\tset isCustomShapeStyleAllowed(v: boolean) {\r\n\t\tthis.i.qw = ensureBool(v);\r\n\t                                        this._a(\"isCustomShapeStyleAllowed\", this.i.qw);\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether this Shape series should allow custom style overrides of its individual marker visuals.\r\n\t*/\r\n\tget isCustomShapeMarkerStyleAllowed() : boolean {\r\n\t\treturn (this.i.qv as boolean);\r\n\t}\r\n\tset isCustomShapeMarkerStyleAllowed(v: boolean) {\r\n\t\tthis.i.qv = ensureBool(v);\r\n\t                                        this._a(\"isCustomShapeMarkerStyleAllowed\", this.i.qv);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the mode the series will use to find the closest point to the cursor.\r\n\t*/\r\n\tget itemSearchMode() : ShapeItemSearchMode {\r\n\t\treturn this.i.qo;\r\n\t}\r\n\tset itemSearchMode(v: ShapeItemSearchMode) {\r\n\t\tthis.i.qo = ensureEnum<ShapeItemSearchMode>(ShapeItemSearchMode_$type, v);\r\n\t                                        this._a(\"itemSearchMode\", enumToString<ShapeItemSearchMode>(ShapeItemSearchMode_$type, this.i.qo));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the threshold to use when searching for items using ItemSearchMode.\r\n\t*/\r\n\tget itemSearchThreshold() : number {\r\n\t\treturn (this.i.qz as number);\r\n\t}\r\n\tset itemSearchThreshold(v: number) {\r\n\t\tthis.i.qz = +v;\r\n\t                                        this._a(\"itemSearchThreshold\", this.i.qz);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the points threshold to use when searching for items using ItemSearchMode.\r\n\t*/\r\n\tget itemSearchPointsThreshold() : number {\r\n\t\treturn (this.i.qy as number);\r\n\t}\r\n\tset itemSearchPointsThreshold(v: number) {\r\n\t\tthis.i.qy = +v;\r\n\t                                        this._a(\"itemSearchPointsThreshold\", this.i.qy);\r\n\t}\r\n\t/**\r\n\t * Set a shapefile datasource to use with the series.\r\n\t*/\r\n\tget shapefileDataSource() : IgcShapeDataSource {\r\n\t                                        const r = this.i.qr;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = new IgcShapeDataSource();\r\n\t                                            if ((r as any).$type) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            } else {\r\n\t                                                if ((e.i as any).setNativeElement) {\r\n\t                                                    (e.i as any).setNativeElement(r);\r\n\t                                                }\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset shapefileDataSource(v: IgcShapeDataSource) {\r\n\t\tv == null ? this.i.qr = null : this.i.qr = v.i;\r\n\t}\r\n\t/**\r\n\t * The resolution at which to filter out shapes in the series.  For example, if the ShapeFilterResolution is set to 3, then elements with a bounding rectangle smaller than 3 X 3 pixels will be filtered out.\r\n\t * In the case of GeographicPolylineSeries, the resolution is compared to either dimension, rather than both.  In other words, a polyline will not be filtered if its height or its width exceeds the value of this property.  Whereas with a ShapeSeries, both the height and the width must exceed the value of this property.\r\n\t*/\r\n\tget shapeFilterResolution() : number {\r\n\t\treturn (this.i.qx as number);\r\n\t}\r\n\tset shapeFilterResolution(v: number) {\r\n\t\tthis.i.qx = +v;\r\n\t                                        this._a(\"shapeFilterResolution\", this.i.qx);\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    var baseResult = super.findByName(name);\r\n\t    if (baseResult)\r\n\t    {\r\n\t        return baseResult;\r\n\t    }\r\n\t\r\n\tif (this.shapefileDataSource && (this.shapefileDataSource as any).name && (this.shapefileDataSource as any).name == name) { return this.shapefileDataSource; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\r\n\r\n\t\r\n\t    private _assigningShapeStyle: (s: IgcGeographicShapeSeriesBaseComponent, e: IgcAssigningShapeStyleEventArgs) => void = null;\r\n\t    private _assigningShapeStyle_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when Assigning Shape Style. Note, if using this event, or highlighting, its best to avoid use of ShapeStyle/StyleShape/ShapeStyleSelector.\r\n\t*/\r\n\t\r\n\tpublic get assigningShapeStyle(): (s: IgcGeographicShapeSeriesBaseComponent, e: IgcAssigningShapeStyleEventArgs) => void {\r\n\treturn this._assigningShapeStyle;\r\n\t}\r\n\t    public set assigningShapeStyle(ev: (s: IgcGeographicShapeSeriesBaseComponent, e: IgcAssigningShapeStyleEventArgs) => void) {\r\n\t        if (this._assigningShapeStyle_wrapped !== null) {\r\n\t            this.i.assigningShapeStyle = delegateRemove(this.i.assigningShapeStyle, this._assigningShapeStyle_wrapped);\r\n\t            this._assigningShapeStyle_wrapped = null;\r\n\t            this._assigningShapeStyle = null;\r\n\t        }\r\n\t\r\n\t        this._assigningShapeStyle = ev;\r\n\t        this._assigningShapeStyle_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcAssigningShapeStyleEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeAssigningShapeStyle) {\r\n\t                        (this as any).beforeAssigningShapeStyle(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._assigningShapeStyle) {\r\n\t    this._assigningShapeStyle(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.assigningShapeStyle = delegateCombine(this.i.assigningShapeStyle, this._assigningShapeStyle_wrapped);;\r\n\t    }\r\n\t\r\n\t    private _assigningShapeMarkerStyle: (s: IgcGeographicShapeSeriesBaseComponent, e: IgcAssigningShapeMarkerStyleEventArgs) => void = null;\r\n\t    private _assigningShapeMarkerStyle_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when Assigning Shape Marker Style\r\n\t*/\r\n\t\r\n\tpublic get assigningShapeMarkerStyle(): (s: IgcGeographicShapeSeriesBaseComponent, e: IgcAssigningShapeMarkerStyleEventArgs) => void {\r\n\treturn this._assigningShapeMarkerStyle;\r\n\t}\r\n\t    public set assigningShapeMarkerStyle(ev: (s: IgcGeographicShapeSeriesBaseComponent, e: IgcAssigningShapeMarkerStyleEventArgs) => void) {\r\n\t        if (this._assigningShapeMarkerStyle_wrapped !== null) {\r\n\t            this.i.assigningShapeMarkerStyle = delegateRemove(this.i.assigningShapeMarkerStyle, this._assigningShapeMarkerStyle_wrapped);\r\n\t            this._assigningShapeMarkerStyle_wrapped = null;\r\n\t            this._assigningShapeMarkerStyle = null;\r\n\t        }\r\n\t\r\n\t        this._assigningShapeMarkerStyle = ev;\r\n\t        this._assigningShapeMarkerStyle_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcAssigningShapeMarkerStyleEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeAssigningShapeMarkerStyle) {\r\n\t                        (this as any).beforeAssigningShapeMarkerStyle(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._assigningShapeMarkerStyle) {\r\n\t    this._assigningShapeMarkerStyle(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.assigningShapeMarkerStyle = delegateCombine(this.i.assigningShapeMarkerStyle, this._assigningShapeMarkerStyle_wrapped);;\r\n\t    }\r\n}","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { GeographicShapeSeriesBaseView } from \"./GeographicShapeSeriesBaseView\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { GeographicShapeSeriesBase } from \"./GeographicShapeSeriesBase\";\r\nimport { Brush } from \"igniteui-core/Brush\";\r\nimport { Defaults } from \"igniteui-charts/Defaults\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { MarkerType, MarkerType_$type } from \"igniteui-charts/MarkerType\";\r\nimport { MarkerFillMode, MarkerFillMode_$type } from \"igniteui-charts/MarkerFillMode\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { ScatterPolygonSeries } from \"igniteui-charts/ScatterPolygonSeries\";\r\nimport { Base, Type, markType, runOn, delegateCombine, typeCast, enumGetBox, EnumUtil, Number_$type, markDep } from \"igniteui-core/type\";\r\nimport { StyleSelector } from \"igniteui-charts/StyleSelector\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { Style } from \"igniteui-core/Style\";\r\nimport { MarkerOutlineMode, MarkerOutlineMode_$type } from \"igniteui-charts/MarkerOutlineMode\";\r\nimport { DataTemplate } from \"igniteui-core/DataTemplate\";\r\nimport { CollisionAvoidanceType, CollisionAvoidanceType_$type } from \"igniteui-charts/CollisionAvoidanceType\";\r\nimport { Control } from \"igniteui-core/Control\";\r\nimport { StyleShapeEventArgs } from \"igniteui-charts/StyleShapeEventArgs\";\r\nimport { ShapeSeriesBase } from \"igniteui-charts/ShapeSeriesBase\";\r\nimport { PropertyUpdatedEventArgs } from \"igniteui-core/PropertyUpdatedEventArgs\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\nimport { DeviceUtils } from \"igniteui-core/DeviceUtils\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicShapeSeriesView extends GeographicShapeSeriesBaseView {\r\n\tstatic $t: Type = markType(GeographicShapeSeriesView, 'GeographicShapeSeriesView', (<any>GeographicShapeSeriesBaseView).$);\r\n\tconstructor(a: GeographicShapeSeries) {\r\n\t\tsuper(a);\r\n\t\tthis.ci = a;\r\n\t\tif (!this.q) {\r\n\t\t\tthis.ci.q7 = \"points\";\r\n\t\t}\r\n\t}\r\n\tprotected ci: GeographicShapeSeries = null;\r\n\tas(): void {\r\n\t\tsuper.as();\r\n\t\tif (!this.q) {\r\n\t\t\tthis.ci.sr = Defaults.aj;\r\n\t\t\tthis.ci.g4 = Defaults.p;\r\n\t\t\tthis.ci.rq = Defaults.o;\r\n\t\t\tthis.ci.rn = Defaults.d;\r\n\t\t\tthis.ci.rl = Defaults.a;\r\n\t\t}\r\n\t}\r\n\tb2(): void {\r\n\t\tsuper.b2();\r\n\t\t(<ScatterPolygonSeries>this.ci.qe).ul = this.ci.st;\r\n\t\t(<ScatterPolygonSeries>this.ci.qe).te = this.ci.ro;\r\n\t\t(<ScatterPolygonSeries>this.ci.qe).t0 = this.ci.r9;\r\n\t\t(<ScatterPolygonSeries>this.ci.qe).th = this.ci.rq;\r\n\t\t(<ScatterPolygonSeries>this.ci.qe).s0 = this.ci.rk;\r\n\t}\r\n\tcn(): void {\r\n\t\t(<ScatterPolygonSeries>this.ci.qe).t0 = this.ci.r9;\r\n\t}\r\n\tcp(): void {\r\n\t\t(<ScatterPolygonSeries>this.ci.qe).th = this.ci.rq;\r\n\t}\r\n\tck(): void {\r\n\t\t(<ScatterPolygonSeries>this.ci.qe).s0 = this.ci.rk;\r\n\t}\r\n\tco(): void {\r\n\t\t(<ScatterPolygonSeries>this.ci.qe).s9 = this.ci.rn;\r\n\t}\r\n\tcj(): void {\r\n\t\t(<ScatterPolygonSeries>this.ci.qe).uh = this.ci.sq;\r\n\t}\r\n\tcl(): void {\r\n\t\t(<ScatterPolygonSeries>this.ci.qe).ui = this.ci.sr;\r\n\t}\r\n\tcm(): void {\r\n\t\t(<ScatterPolygonSeries>this.ci.qe).uk = this.ci.ss;\r\n\t}\r\n\tcq(): void {\r\n\t\t(<ScatterPolygonSeries>this.ci.qe).te = this.ci.ro;\r\n\t}\r\n\tcr(): void {\r\n\t\t(<ScatterPolygonSeries>this.ci.qe).ul = this.ci.st;\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicShapeSeries extends GeographicShapeSeriesBase {\r\n\tstatic $t: Type = markType(GeographicShapeSeries, 'GeographicShapeSeries', (<any>GeographicShapeSeriesBase).$);\r\n\tprotected get_ea(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>GeographicShapeSeries).$;\r\n\t}\r\n\tprotected by(): SeriesView {\r\n\t\treturn new GeographicShapeSeriesView(this);\r\n\t}\r\n\trp: GeographicShapeSeriesView;\r\n\tl4(a: SeriesView): void {\r\n\t\tsuper.l4(a);\r\n\t\tthis.rp = <GeographicShapeSeriesView>a;\r\n\t}\r\n\tprotected qd(): Series {\r\n\t\tlet a = new ScatterPolygonSeries();\r\n\t\ta.styleShape = delegateCombine(a.styleShape, runOn(this, this.r6));\r\n\t\ta.propertyUpdated = delegateCombine(a.propertyUpdated, runOn(this, this.r7));\r\n\t\treturn a;\r\n\t}\r\n\tprivate r6(a: any, b: StyleShapeEventArgs): void {\r\n\t\tif (this.styleShape != null) {\r\n\t\t\tthis.styleShape(this, b);\r\n\t\t}\r\n\t}\r\n\tstyleShape: (sender: any, e: StyleShapeEventArgs) => void = null;\r\n\tprivate r7(a: any, b: PropertyUpdatedEventArgs): void {\r\n\t\tlet c = typeCast<ScatterPolygonSeries>((<any>ScatterPolygonSeries).$, this.qe);\r\n\t\tif (c == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\tro: StyleSelector;\r\n\tst: Style;\r\n\trn: MarkerType;\r\n\trm: MarkerOutlineMode;\r\n\trl: MarkerFillMode;\r\n\tr9: DataTemplate;\r\n\tsq: Brush;\r\n\tsr: Brush;\r\n\tss: Style;\r\n\trq: number;\r\n\tf6(): number {\r\n\t\treturn this.rq;\r\n\t}\r\n\tpc(): Brush {\r\n\t\treturn this.so;\r\n\t}\r\n\tpd(): Brush {\r\n\t\treturn this.sp;\r\n\t}\r\n\tnj(): DataTemplate {\r\n\t\treturn this.r8;\r\n\t}\r\n\ti2(): string {\r\n\t\tlet a = typeCast<ScatterPolygonSeries>((<any>ScatterPolygonSeries).$, this.qe);\r\n\t\tif (a == null) {\r\n\t\t\treturn \"Unknown\";\r\n\t\t}\r\n\t\treturn a.i2();\r\n\t}\r\n\trk: CollisionAvoidanceType;\r\n\tprotected l9(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.l9(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase GeographicShapeSeries.$$p[6]:\r\n\t\t\t(<ScatterPolygonSeries>this.qe).s7 = this.rm;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[5]:\r\n\t\t\t(<ScatterPolygonSeries>this.qe).s3 = this.rl;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[9]:\r\n\t\t\tthis.rp.cn();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[10]:\r\n\t\t\tthis.rp.cp();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[4]:\r\n\t\t\tthis.rp.ck();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[11]:\r\n\t\t\tthis.rp.co();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[3]:\r\n\t\t\tthis.rp.cj();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[7]:\r\n\t\t\tthis.rp.cl();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[8]:\r\n\t\t\tthis.rp.cm();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[13]:\r\n\t\t\tthis.rp.cq();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[12]:\r\n\t\t\tthis.rp.cr();\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprotected g0(): number {\r\n\t\treturn 0.7;\r\n\t}\r\n\tr8: DataTemplate;\r\n\tso: Brush;\r\n\tsp: Brush;\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicShapeSeries, 'raisePropertyChanged', [ 'ActualMarkerBrush:so:sa', [ (<any>Brush).$ ], 'ActualMarkerOutline:sp:sb', [ (<any>Brush).$ ], 'ActualMarkerTemplate:r8:sc', [ (<any>DataTemplate).$, null ], 'MarkerBrush:sq:sd', [ (<any>Brush).$ ], 'MarkerCollisionAvoidance:rk:se', [ CollisionAvoidanceType_$type, enumGetBox<CollisionAvoidanceType>(CollisionAvoidanceType_$type, 0) ], 'MarkerFillMode:rl:sf', [ MarkerFillMode_$type, enumGetBox<MarkerFillMode>(MarkerFillMode_$type, 0) ], 'MarkerOutlineMode:rm:sg', [ MarkerOutlineMode_$type, enumGetBox<MarkerOutlineMode>(MarkerOutlineMode_$type, 0) ], 'MarkerOutline:sr:sh', [ (<any>Brush).$ ], 'MarkerStyle:ss:si', [ (<any>Style).$ ], 'MarkerTemplate:r9:sj', [ (<any>DataTemplate).$, null ], 'MarkerThickness:rq:sk', [ 1, DeviceUtils.g(2) ], 'MarkerType:rn:sl', [ MarkerType_$type, enumGetBox<MarkerType>(MarkerType_$type, 2) ], 'ShapeStyle:st:sm', [ (<any>Style).$, null ], 'ShapeStyleSelector:ro:sn', [ (<any>StyleSelector).$, null ] ]);\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { MarkerType, MarkerType_$type } from \"igniteui-charts/MarkerType\";\r\nimport { MarkerOutlineMode, MarkerOutlineMode_$type } from \"igniteui-charts/MarkerOutlineMode\";\r\nimport { MarkerFillMode, MarkerFillMode_$type } from \"igniteui-charts/MarkerFillMode\";\r\nimport { CollisionAvoidanceType, CollisionAvoidanceType_$type } from \"igniteui-charts/CollisionAvoidanceType\";\r\nimport { IgcStyleShapeEventArgs } from \"igniteui-charts/igc-style-shape-event-args\";\r\nimport { IgcGeographicShapeSeriesBaseComponent } from \"./igc-geographic-shape-series-base-component\";\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicShapeSeries } from \"./GeographicShapeSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool, ensureEnum, enumToString, brushToString, stringToBrush } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\nimport { Style } from \"igniteui-core/Style\";\r\nimport { DataTemplate } from \"igniteui-core/DataTemplate\";\r\n\r\n/**\r\n * Series class which renders polygons as Paths, in a geographic context, based on lists of points in the ItemsSource.\r\n*/\r\nexport class IgcGeographicShapeSeriesComponent extends IgcGeographicShapeSeriesBaseComponent\r\n{\r\n\r\nprotected createImplementation() : GeographicShapeSeries\r\n{\r\n\treturn new GeographicShapeSeries();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicShapeSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).connectedCallback) {\r\n\t            (<any>this.i).connectedCallback();\r\n\t        }\r\n\t        \r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }\r\n\t    disconnectedCallback() {\r\n\t        if (super[\"disconnectedCallback\"]) {\r\n\t            super[\"disconnectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).disconnectedCallback) {\r\n\t            (<any>this.i).disconnectedCallback();\r\n\t        }\r\n\t        if (this._attached) {\r\n\t            this._attached = false;\r\n\t        }\r\n\t    }\r\n\t\r\n\t                private static _observedAttributesIgcGeographicShapeSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicShapeSeriesComponent._observedAttributesIgcGeographicShapeSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicShapeSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicShapeSeriesComponent._observedAttributesIgcGeographicShapeSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicShapeSeriesComponent._observedAttributesIgcGeographicShapeSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t\r\n\t                public static htmlTagName: string = \"igc-geographic-shape-series\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcGeographicShapeSeriesComponent._isElementRegistered) {\r\n\t                        IgcGeographicShapeSeriesComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcGeographicShapeSeriesComponent.htmlTagName,\r\n\t                            IgcGeographicShapeSeriesComponent);\r\n\t                    }\r\n\t            }\r\n\t/**\r\n\t * Gets whether the current series shows a polygon shape.\r\n\t*/\r\n\tget isPolygon() : boolean {\r\n\t\treturn (this.i.ea as boolean);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the fill brush.\r\n\t*/\r\n\tget shapeFill() : string {\r\n\t\treturn this.i.st ? (this.i.st.fill as string) : null;\r\n\t}\r\n\tset shapeFill(v: string) {\r\n\t\tthis.ensureShapeStyle();\r\n\t                                        this.i.st.fill = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the stroke brush.\r\n\t*/\r\n\tget shapeStroke() : string {\r\n\t\treturn this.i.st ? (this.i.st.stroke as string) : null;\r\n\t}\r\n\tset shapeStroke(v: string) {\r\n\t\tthis.ensureShapeStyle();\r\n\t                                        this.i.st.stroke = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the stroke thickness.\r\n\t*/\r\n\tget shapeStrokeThickness() : number {\r\n\t\treturn this.i.st ? (this.i.st.strokeThickness as number) : NaN;\r\n\t}\r\n\tset shapeStrokeThickness(v: number) {\r\n\t                                        this.ensureShapeStyle();\r\n\t\tthis.i.st.strokeThickness = +v;\r\n\t                                        this._a(\"shapeStrokeThickness\", this.i.st.strokeThickness);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the opacity.\r\n\t*/\r\n\tget shapeOpacity() : number {\r\n\t\treturn this.i.st ? (this.i.st.opacity as number) : NaN;\r\n\t}\r\n\tset shapeOpacity(v: number) {\r\n\t                                        this.ensureShapeStyle();\r\n\t\tthis.i.st.opacity = +v;\r\n\t                                        this._a(\"shapeOpacity\", this.i.st.opacity);\r\n\t}\r\n\tensureShapeStyle() {\r\n\tif (this.i.st) {\r\n\t                                            return;\r\n\t                                        }\r\n\t                                        this.i.st = new Style();\r\n\t\r\n\t                                }\r\n\t/**\r\n\t * Gets or sets the marker type for the current series object.\r\n\t * If the MarkerTemplate property is set, the setting of the MarkerType property will be ignored.\r\n\t*/\r\n\tget markerType() : MarkerType {\r\n\t\treturn this.i.rn;\r\n\t}\r\n\tset markerType(v: MarkerType) {\r\n\t\tthis.i.rn = ensureEnum<MarkerType>(MarkerType_$type, v);\r\n\t                                        this._a(\"markerType\", enumToString<MarkerType>(MarkerType_$type, this.i.rn));\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether the marker outline is based on the marker brush of the series rather than the marker outlines collection.\r\n\t*/\r\n\tget markerOutlineMode() : MarkerOutlineMode {\r\n\t\treturn this.i.rm;\r\n\t}\r\n\tset markerOutlineMode(v: MarkerOutlineMode) {\r\n\t\tthis.i.rm = ensureEnum<MarkerOutlineMode>(MarkerOutlineMode_$type, v);\r\n\t                                        this._a(\"markerOutlineMode\", enumToString<MarkerOutlineMode>(MarkerOutlineMode_$type, this.i.rm));\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether the marker brush is based on the marker outline of the series rather than the marker brushes collection.\r\n\t*/\r\n\tget markerFillMode() : MarkerFillMode {\r\n\t\treturn this.i.rl;\r\n\t}\r\n\tset markerFillMode(v: MarkerFillMode) {\r\n\t\tthis.i.rl = ensureEnum<MarkerFillMode>(MarkerFillMode_$type, v);\r\n\t                                        this._a(\"markerFillMode\", enumToString<MarkerFillMode>(MarkerFillMode_$type, this.i.rl));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the MarkerTemplate for the current series object.\r\n\t*/\r\n\tget markerTemplate() : IgDataTemplate {\r\n\t\treturn (this.i.r9 as IgDataTemplate);\r\n\t}\r\n\tset markerTemplate(v: IgDataTemplate) {\r\n\t\tthis.i.r9 = ((v as any) as DataTemplate);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the brush that specifies how the current series object's marker interiors are painted.\r\n\t*/\r\n\tget markerBrush() : string {\r\n\t\treturn brushToString(this.i.sq);\r\n\t}\r\n\tset markerBrush(v: string) {\r\n\t\tthis.i.sq = stringToBrush(v);\r\n\t                                        this._a(\"markerBrush\", brushToString(this.i.sq));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the brush that specifies how the current series object's marker outlines are painted.\r\n\t*/\r\n\tget markerOutline() : string {\r\n\t\treturn brushToString(this.i.sr);\r\n\t}\r\n\tset markerOutline(v: string) {\r\n\t\tthis.i.sr = stringToBrush(v);\r\n\t                                        this._a(\"markerOutline\", brushToString(this.i.sr));\r\n\t}\r\n\t/**\r\n\t * Gets or sets thickness of the marker outline\r\n\t*/\r\n\tget markerThickness() : number {\r\n\t\treturn (this.i.rq as number);\r\n\t}\r\n\tset markerThickness(v: number) {\r\n\t\tthis.i.rq = +v;\r\n\t                                        this._a(\"markerThickness\", this.i.rq);\r\n\t}\r\n\t/**\r\n\t * The desired behavior for markers in this series which are placed too close together for the current view, resulting in a collision.\r\n\t*/\r\n\tget markerCollisionAvoidance() : CollisionAvoidanceType {\r\n\t\treturn this.i.rk;\r\n\t}\r\n\tset markerCollisionAvoidance(v: CollisionAvoidanceType) {\r\n\t\tthis.i.rk = ensureEnum<CollisionAvoidanceType>(CollisionAvoidanceType_$type, v);\r\n\t                                        this._a(\"markerCollisionAvoidance\", enumToString<CollisionAvoidanceType>(CollisionAvoidanceType_$type, this.i.rk));\r\n\t}\r\n\t/**\r\n\t * Gets the effective marker template for the current series object.\r\n\t*/\r\n\tget actualMarkerTemplate() : IgDataTemplate {\r\n\t\treturn (this.i.r8 as IgDataTemplate);\r\n\t}\r\n\tset actualMarkerTemplate(v: IgDataTemplate) {\r\n\t\tthis.i.r8 = ((v as any) as DataTemplate);\r\n\t}\r\n\t/**\r\n\t * Gets the effective marker brush for the current series object.\r\n\t*/\r\n\tget actualMarkerBrush() : string {\r\n\t\treturn brushToString(this.i.so);\r\n\t}\r\n\tset actualMarkerBrush(v: string) {\r\n\t\tthis.i.so = stringToBrush(v);\r\n\t                                        this._a(\"actualMarkerBrush\", brushToString(this.i.so));\r\n\t}\r\n\t/**\r\n\t * Gets the effective marker outline for the current series object.\r\n\t*/\r\n\tget actualMarkerOutline() : string {\r\n\t\treturn brushToString(this.i.sp);\r\n\t}\r\n\tset actualMarkerOutline(v: string) {\r\n\t\tthis.i.sp = stringToBrush(v);\r\n\t                                        this._a(\"actualMarkerOutline\", brushToString(this.i.sp));\r\n\t}\r\n\t\r\n\t    private _styleShape: (s: IgcGeographicShapeSeriesComponent, e: IgcStyleShapeEventArgs) => void = null;\r\n\t    private _styleShape_wrapped: any = null;\r\n\t\r\n\tpublic get styleShape(): (s: IgcGeographicShapeSeriesComponent, e: IgcStyleShapeEventArgs) => void {\r\n\treturn this._styleShape;\r\n\t}\r\n\t    public set styleShape(ev: (s: IgcGeographicShapeSeriesComponent, e: IgcStyleShapeEventArgs) => void) {\r\n\t        if (this._styleShape_wrapped !== null) {\r\n\t            this.i.styleShape = delegateRemove(this.i.styleShape, this._styleShape_wrapped);\r\n\t            this._styleShape_wrapped = null;\r\n\t            this._styleShape = null;\r\n\t        }\r\n\t\r\n\t        this._styleShape = ev;\r\n\t        this._styleShape_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcStyleShapeEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeStyleShape) {\r\n\t                        (this as any).beforeStyleShape(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._styleShape) {\r\n\t    this._styleShape(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.styleShape = delegateCombine(this.i.styleShape, this._styleShape_wrapped);;\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcScatterPolygonSeriesModule } from 'igniteui-charts/igc-scatter-polygon-series-module';\r\n\r\nimport { IgcGeographicShapeSeriesComponent } from './igc-geographic-shape-series-component';\r\nimport { GeographicShapeSeries } from './GeographicShapeSeries';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcGeographicShapeSeriesModule {\r\n    public static register(): void {\r\nIgcScatterPolygonSeriesModule.register();\r\n        IgcGeographicShapeSeriesComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcGeographicShapeSeriesComponent\", IgcGeographicShapeSeriesComponent);\r\n        TypeRegistrar.register(\"GeographicShapeSeries\", (<any>GeographicShapeSeries).$type);\r\n    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { HostSeriesView } from \"./HostSeriesView\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { ScatterSeries } from \"igniteui-charts/ScatterSeries\";\r\nimport { ScatterBase } from \"igniteui-charts/ScatterBase\";\r\nimport { GeographicMarkerSeries } from \"./GeographicMarkerSeries\";\r\nimport { MarkerSeries } from \"igniteui-charts/MarkerSeries\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { XamGeographicMap } from \"./XamGeographicMap\";\r\nimport { Base, Type, markType, String_$type, enumGetBox, EnumUtil, Boolean_$type, typeGetValue, Number_$type, runOn, delegateCombine, delegateRemove, markDep } from \"igniteui-core/type\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { CollisionAvoidanceType, CollisionAvoidanceType_$type } from \"igniteui-charts/CollisionAvoidanceType\";\r\nimport { ScatterItemSearchMode, ScatterItemSearchMode_$type } from \"igniteui-charts/ScatterItemSearchMode\";\r\nimport { Control } from \"igniteui-core/Control\";\r\nimport { AssigningScatterStyleEventArgs } from \"igniteui-charts/AssigningScatterStyleEventArgs\";\r\nimport { AssigningScatterMarkerStyleEventArgs } from \"igniteui-charts/AssigningScatterMarkerStyleEventArgs\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicSymbolSeriesView extends HostSeriesView {\r\n\tstatic $t: Type = markType(GeographicSymbolSeriesView, 'GeographicSymbolSeriesView', (<any>HostSeriesView).$);\r\n\tconstructor(a: GeographicSymbolSeries) {\r\n\t\tsuper(a);\r\n\t\tthis.ce = a;\r\n\t}\r\n\tprivate ce: GeographicSymbolSeries = null;\r\n\tas(): void {\r\n\t\tsuper.as();\r\n\t\tif (!this.q) {\r\n\t\t}\r\n\t}\r\n\tb2(): void {\r\n\t\tlet a = <ScatterSeries>this.ce.qe;\r\n\t\tsuper.b2();\r\n\t\ta.tr = this.ce.r2;\r\n\t\ta.tz = this.ce.r0;\r\n\t\ta.ql = this.ce.qo;\r\n\t\ta.q7 = this.ce.q4;\r\n\t\ta.qq = this.ce.qp;\r\n\t}\r\n\tcg(): void {\r\n\t\t(<ScatterSeries>this.ce.qe).tr = this.ce.r2;\r\n\t}\r\n\tcf(): void {\r\n\t\t(<ScatterSeries>this.ce.qe).tz = this.ce.r0;\r\n\t}\r\n\tcm(): void {\r\n\t\t(<ScatterSeries>this.ce.qe).ql = this.ce.qo;\r\n\t}\r\n\tck(): void {\r\n\t\t(<ScatterSeries>this.ce.qe).q7 = this.ce.q4;\r\n\t}\r\n\tcl(): void {\r\n\t\t(<ScatterSeries>this.ce.qe).qq = this.ce.qp;\r\n\t}\r\n\tcn(): void {\r\n\t\t(<ScatterSeries>this.ce.qe).tb = this.ce.qq;\r\n\t}\r\n\tcp(): void {\r\n\t\t(<ScatterSeries>this.ce.qe).xAxis = (<XamGeographicMap>this.ce.ce).t7;\r\n\t}\r\n\tcq(): void {\r\n\t\t(<ScatterSeries>this.ce.qe).yAxis = (<XamGeographicMap>this.ce.ce).t9;\r\n\t}\r\n\tco(): void {\r\n\t\tlet a = <ScatterSeries>this.ce.qe;\r\n\t\tif (this.ce.ce == null) {\r\n\t\t\ta.xAxis = null;\r\n\t\t\ta.yAxis = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\ta.xAxis = (<XamGeographicMap>this.ce.ce).t7;\r\n\t\ta.yAxis = (<XamGeographicMap>this.ce.ce).t9;\r\n\t}\r\n\tci(): void {\r\n\t\t(<ScatterSeries>this.ce.qe).rx = this.ce.rm;\r\n\t}\r\n\tch(): void {\r\n\t\t(<ScatterSeries>this.ce.qe).rn = this.ce.ri;\r\n\t}\r\n\tcj(): void {\r\n\t\t(<ScatterSeries>this.ce.qe).ro = this.ce.rj;\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicSymbolSeries extends GeographicMarkerSeries {\r\n\tstatic $t: Type = markType(GeographicSymbolSeries, 'GeographicSymbolSeries', (<any>GeographicMarkerSeries).$);\r\n\tprotected get_c5(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>GeographicSymbolSeries).$;\r\n\t}\r\n\tprotected by(): SeriesView {\r\n\t\treturn new GeographicSymbolSeriesView(this);\r\n\t}\r\n\tl4(a: SeriesView): void {\r\n\t\tsuper.l4(a);\r\n\t\tthis.rp = <GeographicSymbolSeriesView>a;\r\n\t}\r\n\trp: GeographicSymbolSeriesView;\r\n\tprotected g0(): number {\r\n\t\treturn 0.7;\r\n\t}\r\n\tprotected qd(): Series {\r\n\t\treturn new ScatterSeries();\r\n\t}\r\n\tprivate ro: ScatterSeries = null;\r\n\tr0: string;\r\n\tr2: string;\r\n\trm: CollisionAvoidanceType;\r\n\trt: boolean;\r\n\trs: boolean;\r\n\tprotected rr: boolean = false;\r\n\tprotected rq: boolean = false;\r\n\tprotected get_d0(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tassigningScatterStyle: (sender: any, args: AssigningScatterStyleEventArgs) => void = null;\r\n\tassigningScatterMarkerStyle: (sender: any, args: AssigningScatterMarkerStyleEventArgs) => void = null;\r\n\trn: ScatterItemSearchMode;\r\n\trv: number;\r\n\tprotected l9(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.l9(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase \"SeriesViewer\":\r\n\t\t\tthis.rp.co();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicSymbolSeries.$$p[5]:\r\n\t\t\tthis.rp.cg();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicSymbolSeries.$$p[4]:\r\n\t\t\tthis.rp.cf();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicSymbolSeries.$$p[6]:\r\n\t\t\tthis.rp.ci();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"XAxis\":\r\n\t\t\tthis.rp.cp();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"YAxis\":\r\n\t\t\tthis.rp.cq();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicSymbolSeries.$$p[1]:\r\n\t\t\t(<ScatterBase>this.qe).st = this.rt;\r\n\t\t\tthis.rr = this.rt;\r\n\t\t\tif (this.rt) {\r\n\t\t\t\tlet e = (<ScatterBase>this.qe);\r\n\t\t\t\te.assigningScatterStyle = delegateCombine(e.assigningScatterStyle, runOn(this, this.r7));\r\n\t\t\t} else {\r\n\t\t\t\tlet f = (<ScatterBase>this.qe);\r\n\t\t\t\tf.assigningScatterStyle = delegateRemove(f.assigningScatterStyle, runOn(this, this.r7));\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicSymbolSeries.$$p[0]:\r\n\t\t\t(<ScatterBase>this.qe).ss = this.rs;\r\n\t\t\tthis.rq = this.rs;\r\n\t\t\tif (this.rt) {\r\n\t\t\t\tlet g = (<ScatterBase>this.qe);\r\n\t\t\t\tg.assigningScatterMarkerStyle = delegateCombine(g.assigningScatterMarkerStyle, runOn(this, this.r6));\r\n\t\t\t} else {\r\n\t\t\t\tlet h = (<ScatterBase>this.qe);\r\n\t\t\t\th.assigningScatterMarkerStyle = delegateRemove(h.assigningScatterMarkerStyle, runOn(this, this.r6));\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicSymbolSeries.$$p[2]:\r\n\t\t\t(<ScatterBase>this.qe).sh = this.rn;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicSymbolSeries.$$p[3]:\r\n\t\t\t(<ScatterBase>this.qe).ta = this.rv;\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprivate r7(a: any, b: AssigningScatterStyleEventArgs): void {\r\n\t\tif (this.assigningScatterStyle != null) {\r\n\t\t\tthis.assigningScatterStyle(this, b);\r\n\t\t}\r\n\t}\r\n\tprivate r6(a: any, b: AssigningScatterMarkerStyleEventArgs): void {\r\n\t\tif (this.assigningScatterMarkerStyle != null) {\r\n\t\t\tthis.assigningScatterMarkerStyle(this, b);\r\n\t\t}\r\n\t}\r\n\tru: boolean;\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicSymbolSeries, 'raisePropertyChanged', [ 'IsCustomScatterMarkerStyleAllowed:rs:r8', [ 0, false ], 'IsCustomScatterStyleAllowed:rt:r9', [ 0, false ], 'ItemSearchMode:rn:sa', [ ScatterItemSearchMode_$type, enumGetBox<ScatterItemSearchMode>(ScatterItemSearchMode_$type, 0) ], 'ItemSearchThreshold:rv:sb', [ 1, 10000 ], 'LatitudeMemberPath:r0:sc', [ 2, null ], 'LongitudeMemberPath:r2:sd', [ 2, null ], 'MarkerCollisionAvoidance:rm:se', [ CollisionAvoidanceType_$type, enumGetBox<CollisionAvoidanceType>(CollisionAvoidanceType_$type, 0) ], 'UseLightweightMarkers:ru:sf', [ 0, false ] ]);\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { CollisionAvoidanceType, CollisionAvoidanceType_$type } from \"igniteui-charts/CollisionAvoidanceType\";\r\nimport { ScatterItemSearchMode, ScatterItemSearchMode_$type } from \"igniteui-charts/ScatterItemSearchMode\";\r\nimport { IgcAssigningScatterStyleEventArgs } from \"igniteui-charts/igc-assigning-scatter-style-event-args\";\r\nimport { IgcAssigningScatterMarkerStyleEventArgs } from \"igniteui-charts/igc-assigning-scatter-marker-style-event-args\";\r\nimport { IgcGeographicMarkerSeriesComponent } from \"./igc-geographic-marker-series-component\";\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicSymbolSeries } from \"./GeographicSymbolSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool, ensureEnum, enumToString } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\n\r\n/**\r\n * Series class for a geographic map with points marked at given locations.\r\n * This is the geographic equivalent of a ScatterSeries.\r\n*/\r\nexport class IgcGeographicSymbolSeriesComponent extends IgcGeographicMarkerSeriesComponent\r\n{\r\n\r\nprotected createImplementation() : GeographicSymbolSeries\r\n{\r\n\treturn new GeographicSymbolSeries();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicSymbolSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).connectedCallback) {\r\n\t            (<any>this.i).connectedCallback();\r\n\t        }\r\n\t        \r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }\r\n\t    disconnectedCallback() {\r\n\t        if (super[\"disconnectedCallback\"]) {\r\n\t            super[\"disconnectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).disconnectedCallback) {\r\n\t            (<any>this.i).disconnectedCallback();\r\n\t        }\r\n\t        if (this._attached) {\r\n\t            this._attached = false;\r\n\t        }\r\n\t    }\r\n\t\r\n\t                private static _observedAttributesIgcGeographicSymbolSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicSymbolSeriesComponent._observedAttributesIgcGeographicSymbolSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicSymbolSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicSymbolSeriesComponent._observedAttributesIgcGeographicSymbolSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicSymbolSeriesComponent._observedAttributesIgcGeographicSymbolSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t\r\n\t                public static htmlTagName: string = \"igc-geographic-symbol-series\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcGeographicSymbolSeriesComponent._isElementRegistered) {\r\n\t                        IgcGeographicSymbolSeriesComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcGeographicSymbolSeriesComponent.htmlTagName,\r\n\t                            IgcGeographicSymbolSeriesComponent);\r\n\t                    }\r\n\t            }\r\n\t/**\r\n\t * Gets whether the series has only marker as visuals\r\n\t*/\r\n\tget hasOnlyMarkers() : boolean {\r\n\t\treturn (this.i.c5 as boolean);\r\n\t}\r\n\t/**\r\n\t * The name of the property of ItemsSource items which contains the latitude coordinate of the symbol.\r\n\t*/\r\n\tget latitudeMemberPath() : string {\r\n\t\treturn (this.i.r0 as string);\r\n\t}\r\n\tset latitudeMemberPath(v: string) {\r\n\t\tthis.i.r0 = v;\r\n\t}\r\n\t/**\r\n\t * The name of the property of ItemsSource items which contains the longitude coordinate of the symbol.\r\n\t*/\r\n\tget longitudeMemberPath() : string {\r\n\t\treturn (this.i.r2 as string);\r\n\t}\r\n\tset longitudeMemberPath(v: string) {\r\n\t\tthis.i.r2 = v;\r\n\t}\r\n\t/**\r\n\t * The desired behavior for markers in this series which are placed too close together for the current view, resulting in a collision.\r\n\t*/\r\n\tget markerCollisionAvoidance() : CollisionAvoidanceType {\r\n\t\treturn this.i.rm;\r\n\t}\r\n\tset markerCollisionAvoidance(v: CollisionAvoidanceType) {\r\n\t\tthis.i.rm = ensureEnum<CollisionAvoidanceType>(CollisionAvoidanceType_$type, v);\r\n\t                                        this._a(\"markerCollisionAvoidance\", enumToString<CollisionAvoidanceType>(CollisionAvoidanceType_$type, this.i.rm));\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether this Scatter series should allow custom style overrides of its individual visuals.\r\n\t*/\r\n\tget isCustomScatterStyleAllowed() : boolean {\r\n\t\treturn (this.i.rt as boolean);\r\n\t}\r\n\tset isCustomScatterStyleAllowed(v: boolean) {\r\n\t\tthis.i.rt = ensureBool(v);\r\n\t                                        this._a(\"isCustomScatterStyleAllowed\", this.i.rt);\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether this Scatter series should allow custom style overrides of its individual marker visuals.\r\n\t*/\r\n\tget isCustomScatterMarkerStyleAllowed() : boolean {\r\n\t\treturn (this.i.rs as boolean);\r\n\t}\r\n\tset isCustomScatterMarkerStyleAllowed(v: boolean) {\r\n\t\tthis.i.rs = ensureBool(v);\r\n\t                                        this._a(\"isCustomScatterMarkerStyleAllowed\", this.i.rs);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the mode the series will use to find the closest point to the cursor.\r\n\t*/\r\n\tget itemSearchMode() : ScatterItemSearchMode {\r\n\t\treturn this.i.rn;\r\n\t}\r\n\tset itemSearchMode(v: ScatterItemSearchMode) {\r\n\t\tthis.i.rn = ensureEnum<ScatterItemSearchMode>(ScatterItemSearchMode_$type, v);\r\n\t                                        this._a(\"itemSearchMode\", enumToString<ScatterItemSearchMode>(ScatterItemSearchMode_$type, this.i.rn));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the threshold to use when searching for items using ItemSearchMode.\r\n\t*/\r\n\tget itemSearchThreshold() : number {\r\n\t\treturn (this.i.rv as number);\r\n\t}\r\n\tset itemSearchThreshold(v: number) {\r\n\t\tthis.i.rv = +v;\r\n\t                                        this._a(\"itemSearchThreshold\", this.i.rv);\r\n\t}\r\n\t\r\n\t    private _assigningScatterStyle: (s: IgcGeographicSymbolSeriesComponent, e: IgcAssigningScatterStyleEventArgs) => void = null;\r\n\t    private _assigningScatterStyle_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when Assigning Category Style\r\n\t*/\r\n\t\r\n\tpublic get assigningScatterStyle(): (s: IgcGeographicSymbolSeriesComponent, e: IgcAssigningScatterStyleEventArgs) => void {\r\n\treturn this._assigningScatterStyle;\r\n\t}\r\n\t    public set assigningScatterStyle(ev: (s: IgcGeographicSymbolSeriesComponent, e: IgcAssigningScatterStyleEventArgs) => void) {\r\n\t        if (this._assigningScatterStyle_wrapped !== null) {\r\n\t            this.i.assigningScatterStyle = delegateRemove(this.i.assigningScatterStyle, this._assigningScatterStyle_wrapped);\r\n\t            this._assigningScatterStyle_wrapped = null;\r\n\t            this._assigningScatterStyle = null;\r\n\t        }\r\n\t\r\n\t        this._assigningScatterStyle = ev;\r\n\t        this._assigningScatterStyle_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcAssigningScatterStyleEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeAssigningScatterStyle) {\r\n\t                        (this as any).beforeAssigningScatterStyle(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._assigningScatterStyle) {\r\n\t    this._assigningScatterStyle(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.assigningScatterStyle = delegateCombine(this.i.assigningScatterStyle, this._assigningScatterStyle_wrapped);;\r\n\t    }\r\n\t\r\n\t    private _assigningScatterMarkerStyle: (s: IgcGeographicSymbolSeriesComponent, e: IgcAssigningScatterMarkerStyleEventArgs) => void = null;\r\n\t    private _assigningScatterMarkerStyle_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when Assigning Scatter Marker Style\r\n\t*/\r\n\t\r\n\tpublic get assigningScatterMarkerStyle(): (s: IgcGeographicSymbolSeriesComponent, e: IgcAssigningScatterMarkerStyleEventArgs) => void {\r\n\treturn this._assigningScatterMarkerStyle;\r\n\t}\r\n\t    public set assigningScatterMarkerStyle(ev: (s: IgcGeographicSymbolSeriesComponent, e: IgcAssigningScatterMarkerStyleEventArgs) => void) {\r\n\t        if (this._assigningScatterMarkerStyle_wrapped !== null) {\r\n\t            this.i.assigningScatterMarkerStyle = delegateRemove(this.i.assigningScatterMarkerStyle, this._assigningScatterMarkerStyle_wrapped);\r\n\t            this._assigningScatterMarkerStyle_wrapped = null;\r\n\t            this._assigningScatterMarkerStyle = null;\r\n\t        }\r\n\t\r\n\t        this._assigningScatterMarkerStyle = ev;\r\n\t        this._assigningScatterMarkerStyle_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcAssigningScatterMarkerStyleEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeAssigningScatterMarkerStyle) {\r\n\t                        (this as any).beforeAssigningScatterMarkerStyle(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._assigningScatterMarkerStyle) {\r\n\t    this._assigningScatterMarkerStyle(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.assigningScatterMarkerStyle = delegateCombine(this.i.assigningScatterMarkerStyle, this._assigningScatterMarkerStyle_wrapped);;\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcScatterSeriesModule } from 'igniteui-charts/igc-scatter-series-module';\r\n\r\nimport { IgcGeographicSymbolSeriesComponent } from './igc-geographic-symbol-series-component';\r\nimport { GeographicSymbolSeries } from './GeographicSymbolSeries';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcGeographicSymbolSeriesModule {\r\n    public static register(): void {\r\nIgcScatterSeriesModule.register();\r\n        IgcGeographicSymbolSeriesComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcGeographicSymbolSeriesComponent\", IgcGeographicSymbolSeriesComponent);\r\n        TypeRegistrar.register(\"GeographicSymbolSeries\", (<any>GeographicSymbolSeries).$type);\r\n    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { TileSeries } from \"./TileSeries\";\r\nimport { GeographicShapeSeriesBase } from \"./GeographicShapeSeriesBase\";\r\nimport { GeographicMapImagery } from \"./GeographicMapImagery\";\r\nimport { Base, Type, EventArgs, runOn, delegateRemove, delegateCombine, markType } from \"igniteui-core/type\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { Control } from \"igniteui-core/Control\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { ImageTilesReadyEventArgs } from \"./ImageTilesReadyEventArgs\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicTileSeries extends GeographicShapeSeriesBase {\r\n\tstatic $t: Type = markType(GeographicTileSeries, 'GeographicTileSeries', (<any>GeographicShapeSeriesBase).$);\r\n\tprotected get_el(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>GeographicTileSeries).$;\r\n\t}\r\n\tget rm(): GeographicMapImagery {\r\n\t\treturn this.rl;\r\n\t}\r\n\tset rm(a: GeographicMapImagery) {\r\n\t\tlet b: boolean = a != this.rm;\r\n\t\tif (b) {\r\n\t\t\tlet c: any = this.rm;\r\n\t\t\tthis.rl = a;\r\n\t\t\tthis.raisePropertyChanged(\"TileImagery\", c, a);\r\n\t\t}\r\n\t}\r\n\tprivate rl: GeographicMapImagery = null;\r\n\trq(): void {\r\n\t\tif (this.rm != null) {\r\n\t\t\tthis.rm.clearTileCache();\r\n\t\t}\r\n\t}\r\n\tprotected l9(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.l9(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase \"TileImagery\":\r\n\t\t\tif (this.qe != null) {\r\n\t\t\t\t(<TileSeries>this.qe).s3 = this.rm;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprivate rk: TileSeries = null;\r\n\tprotected qj(): void {\r\n\t\tsuper.qj();\r\n\t\t(<TileSeries>this.qe).s3 = this.rm;\r\n\t\tif (this.rk != null) {\r\n\t\t\tlet a = this.rk;\r\n\t\t\ta.imageTilesReady = delegateRemove(a.imageTilesReady, runOn(this, this.rp));\r\n\t\t}\r\n\t\tthis.rk = <TileSeries>this.qe;\r\n\t\tif (this.rk != null) {\r\n\t\t\tlet b = this.rk;\r\n\t\t\tb.imageTilesReady = delegateCombine(b.imageTilesReady, runOn(this, this.rp));\r\n\t\t}\r\n\t}\r\n\tprotected qd(): Series {\r\n\t\treturn new TileSeries();\r\n\t}\r\n\timageTilesReady: (sender: any, e: ImageTilesReadyEventArgs) => void = null;\r\n\tprivate rp(a: any, b: EventArgs): void {\r\n\t\tif (this.imageTilesReady != null) {\r\n\t\t\tthis.imageTilesReady(this, new ImageTilesReadyEventArgs());\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcGeographicMapImagery } from \"./igc-geographic-map-imagery\";\r\nimport { IgcImageTilesReadyEventArgs } from \"./igc-image-tiles-ready-event-args\";\r\nimport { IgcGeographicShapeSeriesBaseComponent } from \"./igc-geographic-shape-series-base-component\";\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicTileSeries } from \"./GeographicTileSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\n\r\n/**\r\n * Series class used for displaying a tile set, and using shapes to define the areas that should be rendered.\r\n*/\r\nexport class IgcGeographicTileSeriesComponent extends IgcGeographicShapeSeriesBaseComponent\r\n{\r\n\r\nprotected createImplementation() : GeographicTileSeries\r\n{\r\n\treturn new GeographicTileSeries();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicTileSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).connectedCallback) {\r\n\t            (<any>this.i).connectedCallback();\r\n\t        }\r\n\t        \r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }\r\n\t    disconnectedCallback() {\r\n\t        if (super[\"disconnectedCallback\"]) {\r\n\t            super[\"disconnectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).disconnectedCallback) {\r\n\t            (<any>this.i).disconnectedCallback();\r\n\t        }\r\n\t        if (this._attached) {\r\n\t            this._attached = false;\r\n\t        }\r\n\t    }\r\n\t\r\n\t                private static _observedAttributesIgcGeographicTileSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicTileSeriesComponent._observedAttributesIgcGeographicTileSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicTileSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicTileSeriesComponent._observedAttributesIgcGeographicTileSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicTileSeriesComponent._observedAttributesIgcGeographicTileSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t\r\n\t                public static htmlTagName: string = \"igc-geographic-tile-series\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcGeographicTileSeriesComponent._isElementRegistered) {\r\n\t                        IgcGeographicTileSeriesComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcGeographicTileSeriesComponent.htmlTagName,\r\n\t                            IgcGeographicTileSeriesComponent);\r\n\t                    }\r\n\t            }\r\n\t/**\r\n\t * Gets whether the current series shows a tile imagery.\r\n\t*/\r\n\tget isTile() : boolean {\r\n\t\treturn (this.i.el as boolean);\r\n\t}\r\n\t/**\r\n\t * The MapImagery which is used to provide the tiles for display.\r\n\t*/\r\n\tget tileImagery() : IgcGeographicMapImagery {\r\n\t                                        const r = this.i.rm;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset tileImagery(v: IgcGeographicMapImagery) {\r\n\t\tv == null ? this.i.rm = null : this.i.rm = v.i;\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    var baseResult = super.findByName(name);\r\n\t    if (baseResult)\r\n\t    {\r\n\t        return baseResult;\r\n\t    }\r\n\t\r\n\tif (this.tileImagery && (this.tileImagery as any).name && (this.tileImagery as any).name == name) { return this.tileImagery; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\t/**\r\n\t * Removes all cached tile Imagery from the\r\n\t\r\n\t*/\r\n\tpublic clearTileCache() {\r\n\t\tthis.i.rq();\r\n\t}\r\n\t\r\n\t    private _imageTilesReady: (s: IgcGeographicTileSeriesComponent, e: IgcImageTilesReadyEventArgs) => void = null;\r\n\t    private _imageTilesReady_wrapped: any = null;\r\n\t/**\r\n\t * This event is fired whenever the image tiles transition from a loading state (e.g. some are fading in) to a loaded state.\r\n\t*/\r\n\t\r\n\tpublic get imageTilesReady(): (s: IgcGeographicTileSeriesComponent, e: IgcImageTilesReadyEventArgs) => void {\r\n\treturn this._imageTilesReady;\r\n\t}\r\n\t    public set imageTilesReady(ev: (s: IgcGeographicTileSeriesComponent, e: IgcImageTilesReadyEventArgs) => void) {\r\n\t        if (this._imageTilesReady_wrapped !== null) {\r\n\t            this.i.imageTilesReady = delegateRemove(this.i.imageTilesReady, this._imageTilesReady_wrapped);\r\n\t            this._imageTilesReady_wrapped = null;\r\n\t            this._imageTilesReady = null;\r\n\t        }\r\n\t\r\n\t        this._imageTilesReady = ev;\r\n\t        this._imageTilesReady_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcImageTilesReadyEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeImageTilesReady) {\r\n\t                        (this as any).beforeImageTilesReady(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._imageTilesReady) {\r\n\t    this._imageTilesReady(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.imageTilesReady = delegateCombine(this.i.imageTilesReady, this._imageTilesReady_wrapped);;\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcTileSeriesModule } from './igc-tile-series-module';\r\n\r\nimport { IgcGeographicTileSeriesComponent } from './igc-geographic-tile-series-component';\r\nimport { GeographicTileSeries } from './GeographicTileSeries';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcGeographicTileSeriesModule {\r\n    public static register(): void {\r\nIgcTileSeriesModule.register();\r\n        IgcGeographicTileSeriesComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcGeographicTileSeriesComponent\", IgcGeographicTileSeriesComponent);\r\n        TypeRegistrar.register(\"GeographicTileSeries\", (<any>GeographicTileSeries).$type);\r\n    }\r\n}\r\n","import { IgRect } from \"igniteui-core/IgRect\"\r\nimport { IgSize } from \"igniteui-core/IgSize\"\r\nimport { IgPoint } from \"igniteui-core/IgPoint\"\r\nimport { IgDataTemplate } from \"igniteui-core/IgDataTemplate\"\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicXYTriangulatingSeries } from \"./GeographicXYTriangulatingSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, initializePropertiesFromCss, NamePatcher } from \"igniteui-core/componentUtil\";\r\nimport { IgcTriangulationDataSource } from \"igniteui-core/igc-triangulation-data-source\";\r\nimport { IEnumerable } from \"igniteui-core/type\";\r\nimport { RegisterElementHelper } from 'igniteui-core/module-manager';\r\n\r\n/**\r\n * Base class for geographic series which triangulate XY data prior to rendering.\r\n*/\r\nexport abstract class IgcGeographicXYTriangulatingSeriesComponent extends IgcGeographicMapSeriesHostComponent {\r\n\r\n\r\n    public get i(): GeographicXYTriangulatingSeries {\r\n        return this._implementation;\r\n    }\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    private static _observedAttributesIgcGeographicXYTriangulatingSeriesComponent: string[] = null;\r\n    static get observedAttributes() {\r\n        if (IgcGeographicXYTriangulatingSeriesComponent._observedAttributesIgcGeographicXYTriangulatingSeriesComponent == null) {\r\n            let names = getAllPropertyNames(IgcGeographicXYTriangulatingSeriesComponent);\r\n            for (let i = 0; i < names.length; i++) {\r\n                names[i] = toSpinal(names[i]);\r\n            }\r\n            IgcGeographicXYTriangulatingSeriesComponent._observedAttributesIgcGeographicXYTriangulatingSeriesComponent = names;\r\n        }\r\n        return IgcGeographicXYTriangulatingSeriesComponent._observedAttributesIgcGeographicXYTriangulatingSeriesComponent;\r\n    }\r\n\r\n    private _triangulationDataSource: string;\r\n\t/**\r\n\t * Gets or sets the string path specifying the location of the Itf file.\r\n\t*/\r\n    set triangulationDataSource(value: string) {\r\n        this._triangulationDataSource = value;\r\n        this.updateTriangulationDataSource();\r\n    }\r\n    get triangulationDataSource(): string {\r\n        return this._triangulationDataSource;\r\n    }\r\n\r\n    private _cachedTriangulationDataSource: IgcTriangulationDataSource;\r\n    private updateTriangulationDataSource() {\r\n        if (this._cachedTriangulationDataSource == null) {\r\n            this._cachedTriangulationDataSource = new IgcTriangulationDataSource();\r\n            this.onTriangulationDataSourceImportCompleted = this.onTriangulationDataSourceImportCompleted.bind(this);\r\n            this._cachedTriangulationDataSource.importCompleted = this.onTriangulationDataSourceImportCompleted;\r\n        }\r\n\r\n       \tthis._cachedTriangulationDataSource.source = this._triangulationDataSource;\r\n    }\r\n\r\n    private onTriangulationDataSourceImportCompleted(s: any, e: any) {\r\n        this.dataSource = this._cachedTriangulationDataSource.getPointData();\r\n        this.trianglesSource = <any[]><any>this._cachedTriangulationDataSource.getTriangleData();\r\n    }\r\n\r\n\t\t/**\r\n\t * The name of the property from which to extract the Longitude for each item in the ItemsSource.\r\n\t*/\r\n\tget longitudeMemberPath() : string {\r\n\t\treturn (this.i.qq as string);\r\n\t}\r\n\tset longitudeMemberPath(v: string) {\r\n\t\tthis.i.qq = v;\r\n\t}\r\n\t/**\r\n\t * The name of the property from which to extract the Latitude for each item in the ItemsSource.\r\n\t*/\r\n\tget latitudeMemberPath() : string {\r\n\t\treturn (this.i.qo as string);\r\n\t}\r\n\tset latitudeMemberPath(v: string) {\r\n\t\tthis.i.qo = v;\r\n\t}\r\n\t/**\r\n\t * The source of triangulation data.\r\n\t * This property is optional.  If it is left as null, the triangulation will be created based on the items in the ItemsSource.  Triangulation is a demanding operation, so the runtime performance will be better when specifying a TriangulationSource, especially when a large number of data items are present.\r\n\t*/\r\n\tget trianglesSource() : any[] {\r\n\t\treturn (this.i.qn as any) as any[];\r\n\t}\r\n\tset trianglesSource(v: any[]) {\r\n\t                                        this.i.qn = (v as any) as IEnumerable;\r\n\t}\r\n\t/**\r\n\t * The name of the property of the TrianglesSource items which, for each triangle, contains the index of the first vertex point in the ItemsSource.\r\n\t*/\r\n\tget triangleVertexMemberPath1() : string {\r\n\t\treturn (this.i.qt as string);\r\n\t}\r\n\tset triangleVertexMemberPath1(v: string) {\r\n\t\tthis.i.qt = v;\r\n\t}\r\n\t/**\r\n\t * The name of the property of the TrianglesSource items which, for each triangle, contains the index of the second vertex point in the ItemsSource.\r\n\t*/\r\n\tget triangleVertexMemberPath2() : string {\r\n\t\treturn (this.i.qv as string);\r\n\t}\r\n\tset triangleVertexMemberPath2(v: string) {\r\n\t\tthis.i.qv = v;\r\n\t}\r\n\t/**\r\n\t * The name of the property of the TrianglesSource items which, for each triangle, contains the index of the third vertex point in the ItemsSource.\r\n\t*/\r\n\tget triangleVertexMemberPath3() : string {\r\n\t\treturn (this.i.qx as string);\r\n\t}\r\n\tset triangleVertexMemberPath3(v: string) {\r\n\t\tthis.i.qx = v;\r\n\t}\r\n\r\n    \r\n\r\n    \r\n\r\n\t\r\n\r\n    \r\n\r\n    //@@ZoneRunner\r\n    \r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { ImageTilesReadyEventArgs as ImageTilesReadyEventArgs_internal } from \"./ImageTilesReadyEventArgs\";\r\n\r\nexport class IgcImageTilesReadyEventArgs\r\n{\r\n\r\nprotected createImplementation() : ImageTilesReadyEventArgs_internal\r\n{\r\n\treturn new ImageTilesReadyEventArgs_internal();\r\n}\r\n\tprotected _implementation: any;\r\n\t                            /**\r\n\t                             * @hidden \r\n\t                             */\r\n\tpublic get i() : ImageTilesReadyEventArgs_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tprivate onImplementationCreated() {\r\n\t\t\r\n\t}\r\n\tconstructor() {\r\n\tthis._implementation = this.createImplementation();\r\n\t(<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t                                if ((this as any)._initializeAdapters) {\r\n\t                                    (this as any)._initializeAdapters();\r\n\t                                }\r\n\t\r\n\t}\r\n\tprotected _provideImplementation(i: any) {\r\n\t    this._implementation = i;\r\n\t    (<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t                                if ((this as any)._initializeAdapters) {\r\n\t                                    (this as any)._initializeAdapters();\r\n\t                                }\r\n\t\r\n\t}\r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { IgcGeographicMapImagery } from \"./igc-geographic-map-imagery\";\r\nimport { OpenStreetMapImagery as OpenStreetMapImagery_internal } from \"./OpenStreetMapImagery\";\r\n\r\n/**\r\n * UI element class used to display OpenStreetMap imagery in the IgxGeographicMap.Component\r\n*/\r\nexport class IgcOpenStreetMapImagery extends IgcGeographicMapImagery\r\n{\r\n\r\nprotected createImplementation() : OpenStreetMapImagery_internal\r\n{\r\n\treturn new OpenStreetMapImagery_internal();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : OpenStreetMapImagery_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\t/**\r\n\t * Gets or sets the tile path URL.\r\n\t*/\r\n\tget tilePath() : string {\r\n\t\treturn (this.i.tilePath as string);\r\n\t}\r\n\tset tilePath(v: string) {\r\n\t\tthis.i.tilePath = v;\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\n\r\nimport { IgcOpenStreetMapImagery } from './igc-open-street-map-imagery';\r\nimport { OpenStreetMapImagery } from './OpenStreetMapImagery';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcOpenStreetMapImageryModule {\r\n    public static register(): void {\r\n        \r\n        TypeRegistrar.registerCons(\"IgcOpenStreetMapImagery\", IgcOpenStreetMapImagery);\r\n        TypeRegistrar.register(\"OpenStreetMapImagery\", (<any>OpenStreetMapImagery).$type);\r\n    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { GeographicMapImagery } from \"./GeographicMapImagery\";\r\nimport { ITileGenerator, ITileGenerator_$type } from \"igniteui-core/ITileGenerator\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { TileGeneratorTileSource } from \"igniteui-core/TileGeneratorTileSource\";\r\nimport { Base, Type, runOn, delegateCombine, markType, markDep } from \"igniteui-core/type\";\r\nimport { DownloadingMultiScaleImageEventArgs } from \"igniteui-core/DownloadingMultiScaleImageEventArgs\";\r\nimport { CancellingMultiScaleImageEventArgs } from \"igniteui-core/CancellingMultiScaleImageEventArgs\";\r\nimport { TileImageCreatedEventArgs } from \"igniteui-core/TileImageCreatedEventArgs\";\r\nimport { TileImageZoomChangingEventArgs } from \"igniteui-core/TileImageZoomChangingEventArgs\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\nimport { IMapRenderDeferralHandler } from \"igniteui-core/IMapRenderDeferralHandler\";\r\nimport { stringReplace } from \"igniteui-core/string\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class TileGeneratorMapImagery extends GeographicMapImagery {\r\n\tstatic $t: Type = markType(TileGeneratorMapImagery, 'TileGeneratorMapImagery', (<any>GeographicMapImagery).$);\r\n\tconstructor() {\r\n\t\tsuper(new TileGeneratorTileSource());\r\n\t\tthis.downloadingImage = delegateCombine(this.downloadingImage, runOn(this, this.br));\r\n\t\tthis.cancellingImage = delegateCombine(this.cancellingImage, runOn(this, this.bq));\r\n\t}\r\n\tprivate bq(a: any, b: CancellingMultiScaleImageEventArgs): void {\r\n\t\tlet c = b.uri.toString().split('/');\r\n\t\tlet d = parseInt(stringReplace(c[3], \"/\", \"\"));\r\n\t\tlet e = parseInt(stringReplace(c[4], \"/\", \"\"));\r\n\t\tlet f = parseInt(stringReplace(stringReplace(c[5], \"/\", \"\"), \".png\", \"\"));\r\n\t\tif (this.tileGenerator != null) {\r\n\t\t\tthis.tileGenerator.cancelTile(d, e, f);\r\n\t\t}\r\n\t}\r\n\tprivate br(a: any, b: DownloadingMultiScaleImageEventArgs): void {\r\n\t\tlet c = b.uri.toString().split('/');\r\n\t\tlet d = parseInt(stringReplace(c[3], \"/\", \"\"));\r\n\t\tlet e = parseInt(stringReplace(c[4], \"/\", \"\"));\r\n\t\tlet f = parseInt(stringReplace(stringReplace(c[5], \"/\", \"\"), \".png\", \"\"));\r\n\t\tb.uri = null;\r\n\t\tlet img_ = b.image;\r\n\t\tif (this.tileGenerator != null) {\r\n\t\t\tthis.tileGenerator.getTile(d, e, f, (g: any, h: TileImageCreatedEventArgs) => this.deferralHandler.deferAction(() => img_.src = h.url), (g: any, h: TileImageCreatedEventArgs) => {\r\n\t\t\t}, (g: any, h: TileImageZoomChangingEventArgs) => {\r\n\t\t\t}, img_);\r\n\t\t}\r\n\t}\r\n\ttileGenerator: ITileGenerator;\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, TileGeneratorMapImagery, 'ba', [ 'TileGenerator', [ ITileGenerator_$type, null ] ]);\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { IgcGeographicMapImagery } from \"./igc-geographic-map-imagery\";\r\nimport { TileGeneratorMapImagery as TileGeneratorMapImagery_internal } from \"./TileGeneratorMapImagery\";\r\nimport { ITileGenerator } from \"igniteui-core/ITileGenerator\";\r\n\r\n/**\r\n * Represents a CustomMapImagery MapImagery\r\n*/\r\nexport class IgcTileGeneratorMapImagery extends IgcGeographicMapImagery\r\n{\r\n\r\nprotected createImplementation() : TileGeneratorMapImagery_internal\r\n{\r\n\treturn new TileGeneratorMapImagery_internal();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : TileGeneratorMapImagery_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\t/**\r\n\t * Gets or sets the culture name for this tile source.\r\n\t*/\r\n\tget tileGenerator() : ITileGenerator {\r\n\t\treturn this.i.tileGenerator as ITileGenerator;\r\n\t}\r\n\tset tileGenerator(v: ITileGenerator) {\r\n\t                                        this.i.tileGenerator = v;\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\n\r\nimport { IgcTileGeneratorMapImagery } from './igc-tile-generator-map-imagery';\r\nimport { TileGeneratorMapImagery } from './TileGeneratorMapImagery';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcTileGeneratorMapImageryModule {\r\n    public static register(): void {\r\n        \r\n        TypeRegistrar.registerCons(\"IgcTileGeneratorMapImagery\", IgcTileGeneratorMapImagery);\r\n        TypeRegistrar.register(\"TileGeneratorMapImagery\", (<any>TileGeneratorMapImagery).$type);\r\n    }\r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcGeographicMapImagery } from \"./igc-geographic-map-imagery\";\r\nimport { IgcShapeSeriesBaseComponent } from \"igniteui-charts/igc-shape-series-base-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { TileSeries } from \"./TileSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\n\r\n/**\r\n * Represents a tile series class that can render imagery tiles\r\n*/\r\nexport class IgcTileSeriesComponent extends IgcShapeSeriesBaseComponent\r\n{\r\n\r\nprotected createImplementation() : TileSeries\r\n{\r\n\treturn new TileSeries();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : TileSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).connectedCallback) {\r\n\t            (<any>this.i).connectedCallback();\r\n\t        }\r\n\t        \r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }\r\n\t    disconnectedCallback() {\r\n\t        if (super[\"disconnectedCallback\"]) {\r\n\t            super[\"disconnectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).disconnectedCallback) {\r\n\t            (<any>this.i).disconnectedCallback();\r\n\t        }\r\n\t        if (this._attached) {\r\n\t            this._attached = false;\r\n\t        }\r\n\t    }\r\n\t\r\n\t                private static _observedAttributesIgcTileSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcTileSeriesComponent._observedAttributesIgcTileSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcTileSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcTileSeriesComponent._observedAttributesIgcTileSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcTileSeriesComponent._observedAttributesIgcTileSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t\r\n\t                public static htmlTagName: string = \"igc-tile-series\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcTileSeriesComponent._isElementRegistered) {\r\n\t                        IgcTileSeriesComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcTileSeriesComponent.htmlTagName,\r\n\t                            IgcTileSeriesComponent);\r\n\t                    }\r\n\t            }\r\n\t/**\r\n\t * Gets whether the current series shows a tile imagery.\r\n\t*/\r\n\tget isTile() : boolean {\r\n\t\treturn (this.i.el as boolean);\r\n\t}\r\n\t/**\r\n\t * The MapImagery which is used to provide the tiles for display.\r\n\t*/\r\n\tget tileImagery() : IgcGeographicMapImagery {\r\n\t                                        const r = this.i.s3;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset tileImagery(v: IgcGeographicMapImagery) {\r\n\t\tv == null ? this.i.s3 = null : this.i.s3 = v.i;\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    var baseResult = super.findByName(name);\r\n\t    if (baseResult)\r\n\t    {\r\n\t        return baseResult;\r\n\t    }\r\n\t\r\n\tif (this.tileImagery && (this.tileImagery as any).name && (this.tileImagery as any).name == name) { return this.tileImagery; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\t/**\r\n\t * Defers rendering of the series\r\n\t\r\n\t*/\r\n\tpublic deferredRefresh() {\r\n\t\tthis.i.deferredRefresh();\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\n\r\nimport { IgcTileSeriesComponent } from './igc-tile-series-component';\r\nimport { TileSeries } from './TileSeries';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcTileSeriesModule {\r\n    public static register(): void {\r\n        IgcTileSeriesComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcTileSeriesComponent\", IgcTileSeriesComponent);\r\n        TypeRegistrar.register(\"TileSeries\", (<any>TileSeries).$type);\r\n    }\r\n}\r\n"],"names":["GeographicMapSeriesHost","lp","super","this","qe","constructor","qc","qd","get_dy","h1","a","b","c","jv","c2","d","ag","bf","qj","get_hasMarkers","hasMarkers","hostedSeries_","externalObject","createFromInternal","Prefix","Postfix","_implementation","k7","qf","b2","ax","az","ay","a0","hy","h3","ho","hm","gn","ps","p3","ak","p4","al","p5","p6","gj","po","gl","pq","pt","go","pp","gk","pr","gm","hj","ge","ga","hz","by","HostSeriesView","l4","$","qg","ql","h","l9","ce","o0","mc","p7","index","ld","ht","e","S","actualWindowRectChanged","qk","f","qi","b9","b3","ca","cd","b7","hs_","v_","_visibility","visibility","eo","expectFunctions","cc","b1","bz","gv","b6","f3","b0","b8","cb","title","b4","b5","legend","at","tk","width","v2_","mn","mm","au","mx","get_coercionMethods","_coercionMethods","set_coercionMethods","coercionMethods","lc","hx","k4","$t","i","raisePropertyChanged","oldValue","newValue","bx","ar","qb","itemsSource","o9","pe","bu","gy","hr","_opacity","g4","ev","legendItemBadgeShape","ba","o5","o8","GeographicMarkerSeries","propertyUpdated","q2","nj","q3","pc","rg","pd","rh","f6","qp","i2","propertyName","q5","rm","rl","$$p","rn","ri","ro","rj","qn","qm","qo","q7","q4","qq","tb","B","g","GeographicShapeSeriesBase","qu","qt","assigningShapeStyle","assigningShapeMarkerStyle","qs","GeographicShapeSeriesBaseView","get_d0","get_c3","cf","ch","cg","rd","qw","ra","rc","qv","q9","qz","ru","qy","rv","importCompleted","rb","j","count","ext_","qr","getPointData","get_e7","set_e7","r5","t7","t9","rr","qx","ImageTilesReadyEventArgs","ImagesChangedEventArgs","MapBackgroundTilingMode","MapBackgroundTilingMode_$type","MapResizeBehavior","MapResizeBehavior_$type","TileSeries","ShapeSeriesBase","get_el","s1","s0","imageTilesReady","s4","s5","ab","TileSeriesView","sz","get_rf","s3","s2","propertyChanged","s8","de","lu","s9","deferralHandler","dd","type","XamGeographicMap","geographicMap","da","dh","be","w","lw","df","register","unRegister","deferredRefresh","deferAction","he","setTimeout","window","na","dg","mo","ta","getViewInfo","p0","p1","fg","item","a1","cy","sj","ao","isEmpty","height","k2","db","IMapRenderDeferralHandler","ShapeSeriesViewBase","c7","di","GeometryGroup","c9","c8","as","q","Defaults","an","add","c3","c1","cl","cj","cr","clear","cq","aq","windowRect","createElement","get2DCanvasContext","RenderingContext","CanvasViewRenderer","setAttribute","toString","bd","imagesChanged","dc","a6","k","aa","r","clip","Math","round","left","top","o","getNativeElement","z","SphericalMercatorVerticalScaler","VerticalLinearScaler","getMercatorUnscaledValue","p","getMercatorScaledValue1","af","values_","Array","isArray","v","x","y","m","n","s","t","u","ac","ah","sin","log","ai","aj","l5","am","Rect","getMercatorScaledValue3","getMercatorScaledValue2","static","exp","asin","SphericalMercatorHorizontalScaler","HorizontalLinearScaler","l","SeriesViewer","uw","ul","ud","us","v3","ua","t6","t8","uc","vz","$type","NaN","v6","ur","uk","v5","empty","v4","bottom","backgroundContent","OpenStreetMapImagery","$ret","NumericXAxis","bi","nl","NumericYAxis","ve","vl","mb","provideContainer","provideRenderer","uj","fv","gg","et","up","eu","ug","ue","uf","v8","l_op_Inequality","oj","wc","wk","wi","right","getZoomRectFromGeoRect","getZoomFromGeographicRect","vo","t0","vn","wa","v9","ScalerParams","v7","tz","to","ej","intersect","getZoomFromGeographicPoints","we","tn","em","v0","l8","v1","e4","v2","vb","GeographicMapImagery","clearTileCache","vh","fi","vj","ee","series","vm","ui","vi","tl","tv","uo","floor","ceil","abs","wb","d8","lm","Tuple$2","MathUtil","tm","wd","ct","XamGeographicMapView","vd","n2","od","pf","vp","ut","gq","gr","min","fa","um","oe","isHorizontalWrappingEnabled","vf","fu","fr","vk","un","fs","uu","fh","pm","getFontInfo","fo","sp","fw","getFontBrush","fx","o7","ItfConverter","triangulationSource","points","triangles","ox","lz","vc","pl","ux","ChartVisualData","axes","add1","_inner","name","contentArea","RectData","centralArea","plotArea","tr","vg","wj","vq","uq","uh","DependencyProperty","PropertyMetadata","Control","ap","cancellingImage","downloadingImage","bb","GeographicMapImageryView","a5","a9","a4","a3","a2","referer","bj","userAgent","av","bg","geographicMapProperty","a7","bs","bn","cm","bc","a8","XamMultiScaleImage","Size","GeographicXYTriangulatingSeriesView","re","trianglesSource","q6","ci","ck","GeographicScatterAreaSeriesView","q8","sl","r9","cn","co","SeriesViewerView","fn","fz","fp","sk","hp","bk","bw","el","get_ap","d4","p2","BrushCollection","du","ae","dv","fy","remove","ft","d1","fd","ad","fe","_stroke","fq","OpenStreetMapTileSource","tilePath","tilePathProperty","bq","setTilePathUrl","br","GeographicXYTriangulatingSeries","GeographicScatterAreaSeries","get_df","triangulationStatusChanged","rf","r8","m1","ScatterAreaSeries","ColorScale","BingMapsImageryStyle","IgcSubDomainsCollection","IgCollection","list","length","_createInnerColl","coll","SyncableObservableCollection$2","compare","ext","int","comp","equals","createTo","createFrom","BingMapsImageryStyle_$type","SubDomainsCollection","ObservableCollection$1","_rest","specialize","BingMapsMapImageryView","subDomains","actualTilePath","actualSubDomains","cultureName","BingMapsMapImagery","BingMapsTileSource","_pendingBingRequest_","_isInitialized","getResponseCompleted","bind","bp","actualBingImageryRestUri","isInitialized","bingImageryRestUri","requestMapSettings","bv","isDeferredLoad","cp","string","apiKey","Uri","isWellFormedUriString","imageryStyle","url_","submit","data_","resourceSets_","JSON","parse","resourceSets","resources_","resources","imageUrl_","subDomains_","List$1","imageUrlSubdomains","collectionChanged","IgcBingMapsMapImagery","createImplementation","_subDomains","_actualSubDomains","innerColl","_fromInner","_setSyncTarget","_fromOuter","syncColl","SyncableObservableCollection$1","IgcBingMapsMapImageryModule","registerCons","IgcCustomMapImagery","_getTileImageUri","_getTileImageUri_wrapped","getTileImageUri","outerArgs","_provideImplementation","beforeGetTileImageUri","CustomMapImagery","IgcCustomMapImageryModule","GeographicContourLineSeriesView","GeographicContourLineSeries","get_d3","ScatterContourSeries","r6","pi","pj","gw","ValueBrushScale","ContourValueResolver","C","IgcGeographicContourLineSeriesComponent","_triangulationStatusChanged","_triangulationStatusChanged_wrapped","connectedCallback","_attached","_flushQueuedAttributes","disconnectedCallback","observedAttributes","_observedAttributesIgcGeographicContourLineSeriesComponent","names","_isElementRegistered","registerElement","htmlTagName","isLineContour","d3","valueMemberPath","fillScale","_createFromInternal","_stylingContainer","_styling","actualFillScale","valueResolver","I","findByName","container","component","parent","_inStyling","beforeTriangulationStatusChanged","IgcGeographicContourLineSeriesModule","IgcScatterContourSeriesModule","GeographicHighDensityScatterSeriesView","HighDensityScatterSeries","sm","su","q1","rt","ts","GeographicHighDensityScatterSeries","gz","get_d8","progressiveLoadStatusChanged","currentStatus","Color","IgcGeographicHighDensityScatterSeriesComponent","_progressiveLoadStatusChanged","_progressiveLoadStatusChanged_wrapped","_observedAttributesIgcGeographicHighDensityScatterSeriesComponent","isPixel","latitudeMemberPath","longitudeMemberPath","useBruteForce","_a","progressiveLoad","mouseOverEnabled","heatMinimum","heatMaximum","heatMinimumColor","heatMaximumColor","pointExtent","progressiveStatus","beforeProgressiveLoadStatusChanged","IgcGeographicHighDensityScatterSeriesModule","IgcHighDensityScatterSeriesModule","ArcGISOnlineMapImagery","ArcGISOnlineTileSource","bt","_pendingTokenRequest_","_pendingMapServerRequest_","userToken","getResponseCompleted_MapServerResponse","getResponseCompleted_TokenResponse","mapServerUri","mapServerUriProperty","userName","userNameProperty","password","passwordProperty","userTokenProperty","isMapPublic","isMapPublicProperty","defaultTokenTimeout","tokenGenerationEndPoint","refererUri","acquireNewToken","substr","token","tileInfo","levelOfDetail","lods","IgcArcGISOnlineMapImagery","IgcArcGISOnlineMapImageryModule","IgcGeographicMapComponent","value","_height","style","notifyContainerResized","_width","_chart","undefined","_series","_innerColl","addListener","sender","_seriesAdapter","action","NotifyCollectionChangedAction","Add","addManualItem","newItems","Remove","removeManualItemAt","oldStartingIndex","Replace","insertManualItem","newStartingIndex","Reset","clearManualItems","contentSeries","actualSeries","_dataSource","_disconnected","_defaultTooltips","_imageTilesReady","_imageTilesReady_wrapped","ensureStylablePatched","Object","getPrototypeOf","_renderer","document","DataChartStylingDefaults","_container","updateRoot","setStyleProperty","nativeElement","_wrapper","chart","owner","_provideRenderer","provideData","parentElement","_ensureDefaultTooltip","_ensureTooltipCreated","MutationObserver","mutation","updateContentChildren","observe","childList","addSizeWatcher","destroy","dataSource","bindData","currSeries","children","push","notifyContentChanged","onDetachedFromUI","onAttachedToUI","classList","appendChild","rootWrapper","display","afterContentInit","isRegistered","create","onContentReady","_onDefaultTooltipsReady","createTooltip","ele","wrapper","updateToolTip","hideToolTip","showDefaultTooltip","self","isSubContent","removeChild","context","_observedAttributesIgcGeographicMapComponent","zoomable","resizeBehavior","backgroundTilingMode","useWorldRectForZoomBounds","suppressZoomResetOnWorldRectChange","worldRect","actualWorldRect","xAxis","yAxis","isMap","windowScale","actualWindowScale","zoomIsReady","getCurrentActualWorldRect","iv","geographic","updateZoomWindow","zoomWindow","updateWorldRect","convertGeographicToZoom","extraPixelPadding","northWest","southEast","getGeographicFromZoom","getGeographicPoint","pixelCoordinate","getPixelPoint","geographicCoordinate","getWindowPoint","styleUpdated","getActualWindowScaleHorizontal","getActualWindowScaleVertical","exportVisualData","zoomToGeographic","beforeImageTilesReady","IgcGeographicMapCoreModule","IgcOpenStreetMapImageryModule","IgcImagesChangedEventArgs","onImplementationCreated","_initializeAdapters","IgcGeographicMapImagery","internal","externalName","_imagesChanged","_imagesChanged_wrapped","_cancellingImage","_cancellingImage_wrapped","_downloadingImage","_downloadingImage_wrapped","opacity","findEphemera","indexOf","beforeImagesChanged","beforeCancellingImage","beforeDownloadingImage","IgcGeographicMapModule","IgcGeographicShapeSeriesModule","IgcGeographicPolylineSeriesModule","IgcTileGeneratorMapImageryModule","IgcHeatTileGeneratorModule","IgcGeographicTileSeriesModule","IgcSizeScaleModule","IgcValueBrushScaleModule","IgcCustomPaletteColorScaleModule","IgcGeographicProportionalSymbolSeriesModule","IgcGeographicSymbolSeriesModule","IgcGeographicScatterAreaSeriesModule","IgcShapeDataSourceModule","IgcGeographicMapSeriesHostComponent","_observedAttributesIgcGeographicMapSeriesHostComponent","isGeographic","dy","visibleFromScale","notifyIndexedPropertiesChanged","getItemValue","memberPathName","getItem","world","getPreviousOrExactIndex","skipUnknowns","getNextOrExactIndex","getSeriesValue","useInterpolation","getSeriesValuePosition","getSeriesValueBoundingBox","getSeriesValueMarkerBoundingBox","getSeriesHighValue","getSeriesHighValuePosition","getSeriesLowValue","getSeriesLowValuePosition","getSeriesValuePositionFromSeriesPixel","mouse","getSeriesValueFromSeriesPixel","getItemSpan","renderSeries","animate","IgcGeographicMarkerSeriesComponent","_observedAttributesIgcGeographicMarkerSeriesComponent","markerType","markerThickness","markerOutlineMode","markerFillMode","markerTemplate","markerBrush","markerOutline","maximumMarkers","actualMarkerTemplate","actualMarkerBrush","actualMarkerOutline","GeographicPolylineSeriesView","rk","rs","GeographicPolylineSeries","get_eb","styleShape","ScatterPolylineSeries","rp","Style","StyleSelector","IgcGeographicPolylineSeriesComponent","_styleShape","_styleShape_wrapped","_observedAttributesIgcGeographicPolylineSeriesComponent","isPolyline","eb","shapeFill","fill","ensureShapeStyle","shapeStroke","stroke","shapeStrokeThickness","strokeThickness","shapeOpacity","beforeStyleShape","IgcScatterPolylineSeriesModule","GeographicProportionalSymbolSeriesView","sd","sb","vv","rx","wl","si","r1","vt","vu","rw","rz","ry","cs","cv","cw","cu","cx","cz","GeographicProportionalSymbolSeries","get_c5","assigningScatterStyle","assigningScatterMarkerStyle","rq","g0","BubbleSeries","st","sn","ss","sh","r0","BrushScale","ScatterItemSearchMode","SizeScale","IgcGeographicProportionalSymbolSeriesComponent","_assigningScatterStyle","_assigningScatterStyle_wrapped","_assigningScatterMarkerStyle","_assigningScatterMarkerStyle_wrapped","_observedAttributesIgcGeographicProportionalSymbolSeriesComponent","hasOnlyMarkers","c5","radiusMemberPath","radiusScale","labelMemberPath","fillMemberPath","fillScaleUseGlobalValues","markerOutlineUsesFillScale","markerOutlineBrightness","markerBrushBrightness","radiusScaleUseGlobalValues","isCustomScatterStyleAllowed","isCustomScatterMarkerStyleAllowed","itemSearchMode","itemSearchThreshold","beforeAssigningScatterStyle","beforeAssigningScatterMarkerStyle","IgcBubbleSeriesModule","IgcGeographicScatterAreaSeriesComponent","_observedAttributesIgcGeographicScatterAreaSeriesComponent","isArea","colorMemberPath","colorScale","actualColorScale","updateActualColorScale","IgcScatterAreaSeriesModule","IgcGeographicShapeSeriesBaseComponent","_currData","_onImportCompleted","_assigningShapeStyle","_assigningShapeStyle_wrapped","_assigningShapeMarkerStyle","_assigningShapeMarkerStyle_wrapped","_observedAttributesIgcGeographicShapeSeriesBaseComponent","shapeDataSource","_shapeDataSource","updateShapeDataSource","databaseSource","_databaseSource","onUpdateDataSource","data","_cachedShapeDataSource","onShapeDataSourceImportCompleted","shapefileSource","dataBind","shapeMemberPath","isCustomShapeStyleAllowed","isCustomShapeMarkerStyleAllowed","itemSearchPointsThreshold","shapefileDataSource","setNativeElement","shapeFilterResolution","beforeAssigningShapeStyle","beforeAssigningShapeMarkerStyle","GeographicShapeSeriesView","sr","te","th","sq","GeographicShapeSeries","get_ea","ScatterPolygonSeries","r7","so","s7","Brush","DataTemplate","CollisionAvoidanceType","MarkerFillMode","MarkerOutlineMode","DeviceUtils","MarkerType","IgcGeographicShapeSeriesComponent","_observedAttributesIgcGeographicShapeSeriesComponent","isPolygon","ea","markerCollisionAvoidance","IgcScatterPolygonSeriesModule","GeographicSymbolSeriesView","r2","GeographicSymbolSeries","ScatterSeries","IgcGeographicSymbolSeriesComponent","_observedAttributesIgcGeographicSymbolSeriesComponent","IgcScatterSeriesModule","GeographicTileSeries","IgcGeographicTileSeriesComponent","_observedAttributesIgcGeographicTileSeriesComponent","isTile","tileImagery","IgcTileSeriesModule","IgcGeographicXYTriangulatingSeriesComponent","_observedAttributesIgcGeographicXYTriangulatingSeriesComponent","triangulationDataSource","_triangulationDataSource","updateTriangulationDataSource","_cachedTriangulationDataSource","onTriangulationDataSourceImportCompleted","source","getTriangleData","triangleVertexMemberPath1","triangleVertexMemberPath2","triangleVertexMemberPath3","IgcImageTilesReadyEventArgs","IgcOpenStreetMapImagery","TileGeneratorMapImagery","TileGeneratorTileSource","uri","split","parseInt","tileGenerator","cancelTile","img_","image","getTile","src","url","ITileGenerator","IgcTileGeneratorMapImagery","IgcTileSeriesComponent","_observedAttributesIgcTileSeriesComponent"],"sourceRoot":""}